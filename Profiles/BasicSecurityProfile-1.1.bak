<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0094)http://members.ws-i.org/dman/Document.phx?documentId=ss35606085024019&cmd=download&versionId=1 --><HTML
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>Basic Security Profile - Version 1.1 (WGAD)</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<STYLE type=text/css>BODY {
	BACKGROUND: white; MARGIN: 16pt 24pt; COLOR: black; FONT-FAMILY: sans-serif
}
DT {
	PADDING-TOP: 0.5em; FONT-STYLE: italic
}
H4 {
	FONT-WEIGHT: normal; FONT-SIZE: 0.8em; MARGIN-BOTTOM: 0px; FONT-STYLE: italic
}
.refinement {
	MARGIN: 18pt 0em
}
.statement {
	MARGIN: 0.5em 5.5em; TEXT-INDENT: -4em; FONT-STYLE: italic
}
.statement-id {
	PADDING-RIGHT: 0.3em; PADDING-LEFT: 0.3em; PADDING-BOTTOM: 0em; PADDING-TOP: 0em; FONT-STYLE: normal; BACKGROUND-COLOR: #ffa
}
.statement-target {
	FONT-WEIGHT: bold; FONT-STYLE: normal
}
.statement-type {
	PADDING-RIGHT: 0.3em; PADDING-LEFT: 0.3em; FONT-SIZE: 0.7em; PADDING-BOTTOM: 0em; VERTICAL-ALIGN: text-top; PADDING-TOP: 0em; FONT-STYLE: normal; BACKGROUND-COLOR: #ccf
}
.compat-type {
	PADDING-RIGHT: 0.3em; PADDING-LEFT: 0.3em; FONT-SIZE: 0.7em; PADDING-BOTTOM: 0em; VERTICAL-ALIGN: text-top; PADDING-TOP: 0em; FONT-STYLE: normal; BACKGROUND-COLOR: #cff
}
.statement-origin {
	PADDING-RIGHT: 0.3em; PADDING-LEFT: 0.3em; FONT-SIZE: 0.7em; PADDING-BOTTOM: 0em; VERTICAL-ALIGN: text-top; PADDING-TOP: 0em; FONT-STYLE: normal; BACKGROUND-COLOR: #fcc
}
.rationale {
	MARGIN: 0.5em 0em
}
.explanation {
	MARGIN: 0.5em 0em
}
.definition {
	MARGIN: 0.5em 5.5em
}
.explanation P {
	MARGIN: 0.25em 0px
}
.rationale P {
	MARGIN: 0.25em 0px
}
.practice {
	BACKGROUND-COLOR: green
}
.example {
	PADDING-RIGHT: 0.5em; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; MARGIN: 0.5em 2em; PADDING-TOP: 0.5em; BACKGROUND-COLOR: #eee
}
.example-banner {
	MARGIN: 0px
}
.example PRE {
	MARGIN: 0px
}
.correct {
	FONT-WEIGHT: bold; FONT-SIZE: 0.9em; MARGIN: 0px; FONT-FAMILY: sans-serif
}
.incorrect {
	FONT-WEIGHT: bold; FONT-SIZE: 0.9em; MARGIN: 0px; FONT-FAMILY: sans-serif
}
.correct {
	COLOR: #090
}
.incorrect {
	COLOR: #900
}
.specification {
	PADDING-RIGHT: 0.5em; PADDING-LEFT: 0.5em; PADDING-BOTTOM: 0.5em; MARGIN: 0.5em 2em; PADDING-TOP: 0.5em; BACKGROUND-COLOR: #ffa
}
.ednote {
	PADDING-RIGHT: 1.2em; PADDING-LEFT: 1.2em; PADDING-BOTTOM: 1.2em; MARGIN: 1.2em; PADDING-TOP: 1.2em; BACKGROUND-COLOR: #fcc
}
.note {
	MARGIN-LEFT: 1.5em; BACKGROUND-COLOR: #fcc
}
.toc {
	MARGIN-LEFT: 2em
}
.subtoc {
	MARGIN-LEFT: 3em
}
.subsubtoc {
	MARGIN-LEFT: 4em
}
.chg {
	BACKGROUND-COLOR: orange; TEXT-DECORATION: underline
}
.add {
	BACKGROUND-COLOR: green; TEXT-DECORATION: underline
}
.del {
	BACKGROUND-COLOR: red; TEXT-DECORATION: line-through
}

@media Print
{
A.offsite:unknown {
	FONT-WEIGHT: lighter; FONT-SIZE: 85%; content: " [" attr(href) "] "
}
    }
UNKNOWN {
	FONT-SIZE: 50%; COLOR: #ccc; TEXT-DECORATION: none; content: " #" attr(id) " "
}
</STYLE>

<META content="MSHTML 6.00.2900.3020" name=GENERATOR></HEAD>
<BODY>
<DIV class=head>
<P><A href="http://www.ws-i.org/"><IMG height=88 alt=WS-I
src="http://www.ws-i.org/images/WS-I-logo.gif"
width=107 border=0> </A></P>
<H1>Basic Security Profile Version 1.1</H1>
<H2>Working Group Approval Draft</H2>
<H2>2007-02-20</H2>
<DL>
  <DT>This version:
  <DD><A
  href="http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1-2007-02-20.html">http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1-2007-02-20.html</A>
<DT>Previous version:
  <DD><A href="http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1-2006-10-19.html">http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1-2006-10-19.html</A>
  <DT>Latest version:
  <DD><A
  href="http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1.html">http://www.ws-i.org/Profiles/BasicSecurityProfile-1.1.html</A>

  <DT>Editors:
  <DD>Michael McIntosh, IBM
  <DD>Martin Gudgin, Microsoft
  <DD>K. Scott Morrison, Layer 7
  <DD>Abbie Barbir, Nortel Networks
  <DT>Administrative contact:
  <DD><A href="mailto:secretary@ws-i.org">secretary@ws-i.org</A> </DD></DL>
<P class=copyright id=copyright>Copyright © 2002-2007 by <A
href="http://www.ws-i.org/">The Web Services-Interoperability Organization</A>
(<ABBR
title="Web Services Interoperability&#13;&#10;&#9;&#9;&#9;Organization">WS-I</ABBR>)
and Certain of its Members. All Rights Reserved.</P>
</DIV>
<HR>

<H2 id=abstract>Abstract</H2>
<P>This document defines the WS-I Basic Security Profile 1.1, based on a set of
non-proprietary Web services specifications, along with clarifications and
amendments to those specifications which promote interoperability. </P>
<H2 id=status>Status of this Document</H2>
<P>This document is a Working Group Approval Draft; it is an intermediate
document that has been approved for publication by the Working Group. It is a
work in progress, and should not be considered as final; other documents may
supersede this document. </P>
<H2 id=license>Notice</H2>
<P>The material contained herein is not a license, either expressly or
impliedly, to any intellectual property owned or controlled by any of the
authors or developers of this material or WS-I. The material contained herein is
provided on an "AS IS" basis and to the maximum extent permitted by applicable
law, this material is provided AS IS AND WITH ALL FAULTS, and the authors and
developers of this material and WS-I hereby disclaim all other warranties and
conditions, either express, implied or statutory, including, but not limited to,
any (if any) implied warranties, duties or conditions of merchantability, of
fitness for a particular purpose, of accuracy or completeness of responses, of
results, of workmanlike effort, of lack of viruses, and of lack of negligence.
ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET
POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT WITH REGARD TO
THIS MATERIAL. </P>
<P>IN NO EVENT WILL ANY AUTHOR OR DEVELOPER OF THIS MATERIAL OR WS-I BE LIABLE
TO ANY OTHER PARTY FOR THE COST OF PROCURING SUBSTITUTE GOODS OR SERVICES, LOST
PROFITS, LOSS OF USE, LOSS OF DATA, OR ANY INCIDENTAL, CONSEQUENTIAL, DIRECT,
INDIRECT, OR SPECIAL DAMAGES WHETHER UNDER CONTRACT, TORT, WARRANTY, OR
OTHERWISE, ARISING IN ANY WAY OUT OF THIS OR ANY OTHER AGREEMENT RELATING TO
THIS MATERIAL, WHETHER OR NOT SUCH PARTY HAD ADVANCE NOTICE OF THE POSSIBILITY
OF SUCH DAMAGES.</P>
<H2 id=feedback>Feedback</H2>
<P>The Web Services-Interoperability Organization (WS-I) would like to receive
input, suggestions and other feedback ("Feedback") on this work from a wide
variety of industry participants to improve its quality over time. </P>
<P>By sending email, or otherwise communicating with WS-I, you (on behalf of
yourself if you are an individual, and your company if you are providing
Feedback on behalf of the company) will be deemed to have granted to WS-I, the
members of WS-I, and other parties that have access to your Feedback, a
non-exclusive, non-transferable, worldwide, perpetual, irrevocable, royalty-free
license to use, disclose, copy, license, modify, sublicense or otherwise
distribute and exploit in any manner whatsoever the Feedback you provide
regarding the work. You acknowledge that you have no expectation of
confidentiality with respect to any Feedback you provide. You represent and
warrant that you have rights to provide this Feedback, and if you are providing
Feedback on behalf of a company, you represent and warrant that you have the
rights to provide Feedback on behalf of your company. You also acknowledge that
WS-I is not required to review, discuss, use, consider or in any way incorporate
your Feedback into future versions of its work. If WS-I does incorporate some or
all of your Feedback in a future version of the work, it may, but is not
obligated to include your name (or, if you are identified as acting on behalf of
your company, the name of your company) on a list of contributors to the work.
If the foregoing is not acceptable to you and any company on whose behalf you
are acting, please do not provide any Feedback.</P>
<P>Feedback on this document should be directed to <A
href="mailto:wsi_secprofile_comment@lists.ws-i.org">wsi_secprofile_comment@lists.ws-i.org</A>.</P>
<HR>

<H2 id=toc>Table of Contents</H2>
<P class=toc>1. <A
href="#Introduction">Introduction</A><BR><SPAN
class=subtoc>1.1. <A
href="#Philosophy">Guiding
Principles</A></SPAN><BR>2. <A
href="#DocumentConventions">Document
Conventions</A><BR><SPAN class=subtoc>2.1. <A
href="#SecurityConsiderations">Security
Considerations</A></SPAN><BR><SPAN class=subtoc>2.2. <A
href="#conventions">Notational
Conventions</A></SPAN><BR><SPAN class=subtoc>2.3. <A
href="#versioning">Profile
Identification and Versioning</A></SPAN><BR>3. <A
href="#conformance">Profile
Conformance</A><BR><SPAN class=subtoc>3.1. <A
href="#conformance_requirements">Conformance
Requirements</A></SPAN><BR><SPAN class=subtoc>3.2. <A
href="#conformance_targets">Conformance
Targets</A></SPAN><BR><SPAN class=subtoc>3.3. <A
href="#conformance_scope">Conformance
Scope</A></SPAN><BR><SPAN class=subtoc>3.4. <A
href="#conformance_claims">Claiming
Conformance</A></SPAN><BR>3. <A
href="#transportsec">Transport
Layer Mechanisms</A><BR><SPAN class=subtoc>3.1. <A
href="#TLSAndSSLVersions">TLS
and SSL Versions</A></SPAN><BR><SPAN class=subsubtoc>3.1.1. <A
href="#SSL_2.0_Prohibited">SSL
2.0 Prohibited</A></SPAN><BR><SPAN class=subtoc>3.2. <A
href="#TLSAndSSLCiphersuites">TLS
and SSL Ciphersuites</A></SPAN><BR><SPAN class=subsubtoc>3.2.1. <A
href="#Mandatory_Ciphersuites">Mandatory
Ciphersuites</A></SPAN><BR><SPAN class=subsubtoc>3.2.2. <A
href="#Recommended_Ciphersuites">Recommended
Ciphersuites</A></SPAN><BR><SPAN class=subsubtoc>3.2.3. <A
href="#Discouraged_Ciphersuites">Discouraged
Ciphersuites</A></SPAN><BR><SPAN class=subsubtoc>3.2.4. <A
href="#Prohibited_Ciphersuites">Prohibited
Ciphersuites</A></SPAN><BR>4. <A
href="#SOAPNodesAndMessages">SOAP
Nodes and Messages</A><BR><SPAN class=subtoc>4.1. <A
href="#SecurityPolicy">Security
Policy</A></SPAN><BR><SPAN class=subsubtoc>4.1.1. <A
href="#Out_of_Band_Agreement">Out
of Band Agreement</A></SPAN><BR><SPAN class=subtoc>4.2. <A
href="#SOAPEnvelope">SOAP
Envelope</A></SPAN><BR><SPAN class=subsubtoc>4.2.1. <A
href="#Secure_Envelope_Validity">Secure
Envelope Validity</A></SPAN><BR><SPAN class=subsubtoc>4.2.2. <A
href="#wsu_Id_Attribute_Value_Uniqueness">wsu:Id
Attribute Value Uniqueness</A></SPAN><BR><SPAN class=subtoc>4.3. <A
href="#IntermediaryProcessing">Intermediary
Processing</A></SPAN><BR><SPAN class=subsubtoc>4.3.1. <A
href="#Removal_of_Headers">Removal
of Headers</A></SPAN><BR><SPAN class=subtoc>4.4. <A
href="#SOAPNodeBPClarification">Basic
Profile Clarification</A></SPAN><BR><SPAN class=subsubtoc>4.4.1. <A
href="#BP_Requirement_R1029">BP
Requirement R1029</A></SPAN><BR><SPAN class=subsubtoc>4.4.2. <A
href="#BP_Requirement_R2301">BP
Requirement R2301</A></SPAN><BR><SPAN class=subsubtoc>4.4.3. <A
href="#BP_Requirement_R2710">BP
Requirement R2710</A></SPAN><BR><SPAN class=subsubtoc>4.4.4. <A
href="#BP_Requirement_R2712">BP
Requirement R2712</A></SPAN><BR><SPAN class=subsubtoc>4.4.5. <A
href="#BP_Requirement_R2724">BP
Requirement R2724</A></SPAN><BR><SPAN class=subsubtoc>4.4.6. <A
href="#BP_Requirement_R2725">BP
Requirement R2725</A></SPAN><BR><SPAN class=subsubtoc>4.4.7. <A
href="#BP_Requirement_R2729">BP
Requirement R2729</A></SPAN><BR><SPAN class=subsubtoc>4.4.8. <A
href="#BP_Requirement_R2738">BP
Requirement R2738</A></SPAN><BR>5. <A
href="#SecurityHeaders">SecurityHeaders</A><BR><SPAN
class=subtoc>5.1. <A
href="#ProcessingOrder">Processing
Order</A></SPAN><BR><SPAN class=subsubtoc>5.1.1. <A
href="#In_Order_of_Appearance">In
Order of Appearance</A></SPAN><BR><SPAN class=subtoc>5.2. <A
href="#SOAPActorAttribute">SOAP
Actor Attribute</A></SPAN><BR><SPAN class=subsubtoc>5.2.1. <A
href="#Avoid_Target_Ambiguity">Avoid
Target Ambiguity</A></SPAN><BR>6. <A
href="#Timestamps">Timestamps</A><BR><SPAN
class=subtoc>6.1. <A
href="#Placement">Placement</A></SPAN><BR><SPAN
class=subsubtoc>6.1.1. <A
href="#Not_More_Than_One_per_Security_Header">Not
More Than One per Security Header</A></SPAN><BR><SPAN class=subtoc>6.2. <A
href="#TimestampContent">Content</A></SPAN><BR><SPAN
class=subsubtoc>6.2.1. <A
href="#Exactly_One_Created_per_Timestamp">Exactly
One Created per Timestamp</A></SPAN><BR><SPAN class=subsubtoc>6.2.2. <A
href="#Not_More_Than_One_Expires_per_Timestamp">Not
More Than One Expires per Timestamp</A></SPAN><BR><SPAN class=subsubtoc>6.2.3.
<A
href="#Created_Precedes_Expires_in_Timestamp">Created
Precedes Expires in Timestamp</A></SPAN><BR><SPAN class=subsubtoc>6.2.4. <A
href="#Timestamp_Contains_Nothing_Other_Than_Create_and_Expires">Timestamp
Contains Nothing Other Than Create and Expires</A></SPAN><BR><SPAN
class=subtoc>6.3. <A
href="#ConstraintsOnCreatedAndExpires">Constraints
on Created and Expires</A></SPAN><BR><SPAN class=subsubtoc>6.3.1. <A
href="#Value_Precision_to_Milliseconds">Value
Precision to Milliseconds</A></SPAN><BR><SPAN class=subsubtoc>6.3.2. <A
href="#Leap_Second_Values_Prohibited">Leap
Second Values Prohibited</A></SPAN><BR><SPAN class=subsubtoc>6.3.3. <A
href="#ValueType_Attribute_Prohibited">ValueType
Attribute Prohibited</A></SPAN><BR><SPAN class=subsubtoc>6.3.4. <A
href="#UTC_Format_Mandatory">UTC
Format Mandatory</A></SPAN><BR>7. <A
href="#SecurityTokenReferences">Security
Token References</A><BR><SPAN class=subtoc>7.1. <A
href="#STRContent">Content</A></SPAN><BR><SPAN
class=subsubtoc>7.1.1. <A
href="#Exactly_One_SecurityTokenReference_Child_Element">Exactly
One SecurityTokenReference Child Element</A></SPAN><BR><SPAN class=subtoc>7.2.
<A
href="#STRTokenType">TokenType
Attribute</A></SPAN><BR><SPAN class=subsubtoc>7.2.1. <A
href="#Value_of_TokenType_Attribute">Value
of TokenType Attribute</A></SPAN><BR><SPAN class=subtoc>7.3. <A
href="#DirectReferences">Direct
References</A></SPAN><BR><SPAN class=subsubtoc>7.3.1. <A
href="#Direct_Reference_to_Security_Token_Reference_Prohibited">Direct
Reference to Security Token Reference Prohibited</A></SPAN><BR><SPAN
class=subsubtoc>7.3.2. <A
href="#Reference/@ValueType_Attribute_Mandatory">#Reference/@ValueType_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subsubtoc>7.3.3. <A
href="#Reference/@URI_Attribute_Mandatory">#Reference/@URI_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subtoc>7.4. <A
href="#KeyNameReferences">Key
Name References</A></SPAN><BR><SPAN class=subsubtoc>7.4.1. <A
href="#Key_Name_References_Prohibited">Key
Name References Prohibited</A></SPAN><BR><SPAN class=subtoc>7.5. <A
href="#KeyIdentifierReferences">Key
Identifier References</A></SPAN><BR><SPAN class=subsubtoc>7.5.1. <A
href="#KeyIdentifier/@ValueType_Attribute_Mandatory">#KeyIdentifier/@ValueType_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subsubtoc>7.5.2. <A
href="#KeyIdentifier/@EncodingType_Attribute_Mandatory">#KeyIdentifier/@EncodingType_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subtoc>7.6. <A
href="#EmbeddedReferences">Embedded
References</A></SPAN><BR><SPAN class=subsubtoc>7.6.1. <A
href="#Embedded_Content">Embedded
Content</A></SPAN><BR><SPAN class=subsubtoc>7.6.2. <A
href="#Embedded_Token_Format">Embedded
Token Format</A></SPAN><BR><SPAN class=subsubtoc>7.6.3. <A
href="#Security_Token_Reference_in_Embedded_Prohibited">Security
Token Reference in Embedded Prohibited</A></SPAN><BR><SPAN class=subtoc>7.7. <A
href="#InternalReferences">Internal
References</A></SPAN><BR><SPAN class=subsubtoc>7.7.1. <A
href="#Direct_or_Embedded_References_Where_Possible">Direct
or Embedded References Where Possible</A></SPAN><BR><SPAN class=subsubtoc>7.7.2.
<A
href="#Direct_Preferred_to_Embedded_References">Direct
Preferred to Embedded References</A></SPAN><BR><SPAN class=subsubtoc>7.7.3. <A
href="#Shorthand_XPointers_Mandatory_for_Direct_References">Shorthand
XPointers Mandatory for Direct References</A></SPAN><BR><SPAN
class=subsubtoc>7.7.4. <A
href="#Security_Tokens_Precede_Their_References">Security
Tokens Precede Their References</A></SPAN><BR><SPAN class=subsubtoc>7.7.5. <A
href="#References_Between_Security_Headers_Prohibited">References
Between Security Headers Prohibited</A></SPAN><BR><SPAN class=subtoc>7.8. <A
href="#ExternalReferences">External
References</A></SPAN><BR><SPAN class=subsubtoc>7.8.1. <A
href="#Direct_References_Where_Possible">Direct
References Where Possible</A></SPAN><BR><SPAN class=subtoc>7.9. <A
href="#STRWithEncryptedData">SecurityTokenReference
With EncryptedData</A></SPAN><BR><SPAN class=subsubtoc>7.9.1. <A
href="#Reference_to_KeyInfo_Prohibited">Reference
to KeyInfo Prohibited</A></SPAN><BR>8. <A
href="#XMLSignature">XML-Signature</A><BR><SPAN
class=subtoc>8.1. <A
href="#TypesOfSignature">Types
of Signature</A></SPAN><BR><SPAN class=subsubtoc>8.1.1. <A
href="#Enveloping_Signatures_Prohibited">Enveloping
Signatures Prohibited</A></SPAN><BR><SPAN class=subsubtoc>8.1.2. <A
href="#Enveloped_Signatures_Discouraged">Enveloped
Signatures Discouraged</A></SPAN><BR><SPAN class=subsubtoc>8.1.3. <A
href="#Detached_Signatures_Preferred">Detached
Signatures Preferred</A></SPAN><BR><SPAN class=subtoc>8.2. <A
href="#SignedElementReferences">Signed
Element References</A></SPAN><BR><SPAN class=subsubtoc>8.2.1. <A
href="#Shorthand_XPointer_Where_Referent_has_wsu_Id_Attribute">Shorthand
XPointer Where Referent has wsu:Id Attribute</A></SPAN><BR><SPAN
class=subsubtoc>8.2.2. <A
href="#Shorthand_XPointer_Where_Referent_is_defined_by_XML_Signature">Shorthand
XPointer Where Referent is defined by XML Signature</A></SPAN><BR><SPAN
class=subsubtoc>8.2.3. <A
href="#Shorthand_XPointer_Where_Referent_is_defined_by_XML_Encryption">Shorthand
XPointer Where Referent is defined by XML Encryption</A></SPAN><BR><SPAN
class=subsubtoc>8.2.4. <A
href="#Shorthand_XPointer_to_wsu_Id_Attribute_Where_Possible">Shorthand
XPointer to wsu:Id Attribute Where Possible</A></SPAN><BR><SPAN
class=subsubtoc>8.2.5. <A
href="#XPath_References_Where_Necessary">XPath
References Where Necessary</A></SPAN><BR><SPAN class=subtoc>8.3. <A
href="#SignatureTransforms">Signature
Transforms</A></SPAN><BR><SPAN class=subsubtoc>8.3.1. <A
href="#Transforms_Element_Mandatory">Transforms
Element Mandatory</A></SPAN><BR><SPAN class=subsubtoc>8.3.2. <A
href="#Transform_Element_Mandatory">Transform
Element Mandatory</A></SPAN><BR><SPAN class=subsubtoc>8.3.3. <A
href="#Transform_Algorithms">Transform
Algorithms</A></SPAN><BR><SPAN class=subsubtoc>8.3.4. <A
href="#Last_Transform_Algorithm">Last
Transform Algorithm</A></SPAN><BR><SPAN class=subsubtoc>8.3.5. <A
href="#Inclusive_Namespaces_with_Exclusive-C14N_Transform">Inclusive
Namespaces with Exclusive-C14N Transform</A></SPAN><BR><SPAN
class=subsubtoc>8.3.6. <A
href="#Inclusive_Namespaces_with_STR_Transform">Inclusive
Namespaces with STR Transform</A></SPAN><BR><SPAN class=subsubtoc>8.3.7. <A
href="#TransformationParameters_and_CanonicalizationMethod_with_STR_Transform">TransformationParameters
and CanonicalizationMethod with STR Transform</A></SPAN><BR><SPAN
class=subtoc>8.4. <A
href="#CanonicalizationMethods">Canonicalization
Methods</A></SPAN><BR><SPAN class=subsubtoc>8.4.1. <A
href="#Exclusive_C14N_Mandatory">Exclusive
C14N Mandatory</A></SPAN><BR><SPAN class=subsubtoc>8.4.2. <A
href="#Inclusive_Namespaces_with_Exclusive-C14N">Inclusive
Namespaces with Exclusive-C14N</A></SPAN><BR><SPAN class=subtoc>8.5. <A
href="#InclusiveNamespaces">Inclusive
Namespaces</A></SPAN><BR><SPAN class=subsubtoc>8.5.1. <A
href="#Order_of_PrefixList">Order
of PrefixList</A></SPAN><BR><SPAN class=subsubtoc>8.5.2. <A
href="#Whitespace_in_PrefixList">Whitespace
in PrefixList</A></SPAN><BR><SPAN class=subsubtoc>8.5.3. <A
href="#PrefixList_Contents">PrefixList
Contents</A></SPAN><BR><SPAN class=subtoc>8.6. <A
href="#DigestMethods">Digest
Methods</A></SPAN><BR><SPAN class=subsubtoc>8.6.1. <A
href="#SHA-1_Preferred">SHA-1
Preferred</A></SPAN><BR><SPAN class=subtoc>8.7. <A
href="#SignatureMethods">Signature
Methods</A></SPAN><BR><SPAN class=subsubtoc>8.7.1. <A
href="#Algorithms">Algorithms</A></SPAN><BR><SPAN
class=subsubtoc>8.7.2. <A
href="#HMACOutputLength_Prohibited">HMACOutputLength
Prohibited</A></SPAN><BR><SPAN class=subtoc>8.8. <A
href="#KeyInfo">KeyInfo</A></SPAN><BR><SPAN
class=subsubtoc>8.8.1. <A
href="#Exactly_One_KeyInfo_Child_Element">Exactly
One KeyInfo Child Element</A></SPAN><BR><SPAN class=subsubtoc>8.8.2. <A
href="#SecurityTokenReference_Mandatory">SecurityTokenReference
Mandatory</A></SPAN><BR><SPAN class=subtoc>8.9. <A
href="#SignatureManifest">Manifest</A></SPAN><BR><SPAN
class=subsubtoc>8.9.1. <A
href="#Manifest_Prohibited">Manifest
Prohibited</A></SPAN><BR><SPAN class=subtoc>8.10. <A
href="#SignatureEncryption">Signature
Encryption</A></SPAN><BR><SPAN class=subsubtoc>8.10.1. <A
href="#Encrypt_Only_Entire_Signature">Encrypt
Only Entire Signature</A></SPAN><BR><SPAN class=subtoc>8.11. <A
href="#SignatureConfirmation">Signature
Confirmation</A></SPAN><BR><SPAN class=subsubtoc>8.11.1. <A
href="#Signature_Confirmation_Format">Signature
Confirmation Format</A></SPAN><BR>9. <A
href="#XMLEncryption">XML
Encryption</A><BR><SPAN class=subtoc>9.1. <A
href="#EncryptedHeader">EncryptedHeader</A></SPAN><BR><SPAN
class=subsubtoc>9.1.1. <A
href="#EncryptedHeader_Format">EncryptedHeader
Format</A></SPAN><BR><SPAN class=subtoc>9.2. <A
href="#EncryptionReferenceList">Encryption
ReferenceList</A></SPAN><BR><SPAN class=subsubtoc>9.2.1. <A
href="#Single_Key">Single
Key</A></SPAN><BR><SPAN class=subsubtoc>9.2.2. <A
href="#Encryption_DataReference_for_EncryptedData">Encryption
DataReference for EncryptedData</A></SPAN><BR><SPAN class=subtoc>9.3. <A
href="#EncryptedKeyReferenceList">EncryptedKey
ReferenceList</A></SPAN><BR><SPAN class=subsubtoc>9.3.1. <A
href="#EncryptedKey_DataReference_for_EncryptedData">EncryptedKey
DataReference for EncryptedData</A></SPAN><BR><SPAN class=subtoc>9.4. <A
href="#EncryptedKey">EncryptedKey</A></SPAN><BR><SPAN
class=subsubtoc>9.4.1. <A
href="#EncryptedKey_Precedes_EncryptedData">EncryptedKey
Precedes EncryptedData</A></SPAN><BR><SPAN class=subsubtoc>9.4.2. <A
href="#EncryptedKey_ReferenceList_Preferred">EncryptedKey
ReferenceList Preferred</A></SPAN><BR><SPAN class=subsubtoc>9.4.3. <A
href="#EncryptedKey/@Type_Attribute_Prohibited">#EncryptedKey/@Type_Attribute_Prohibited</A></SPAN><BR><SPAN
class=subsubtoc>9.4.4. <A
href="#EncryptedKey/@MimeType_Attribute_Prohibited">#EncryptedKey/@MimeType_Attribute_Prohibited</A></SPAN><BR><SPAN
class=subsubtoc>9.4.5. <A
href="#EncryptedKey/@Encoding_Attribute_Prohibited">#EncryptedKey/@Encoding_Attribute_Prohibited</A></SPAN><BR><SPAN
class=subsubtoc>9.4.6. <A
href="#EncryptedKey/@Recipient_Attribute_Prohibited">#EncryptedKey/@Recipient_Attribute_Prohibited</A></SPAN><BR><SPAN
class=subsubtoc>9.4.7. <A
href="#EncryptionMethod_Mandatory">EncryptionMethod
Mandatory</A></SPAN><BR><SPAN class=subtoc>9.5. <A
href="#EncryptedData">EncryptedData</A></SPAN><BR><SPAN
class=subsubtoc>9.5.1. <A
href="#EncryptedData_and_KeyInfo">EncryptedData
and KeyInfo</A></SPAN><BR><SPAN class=subsubtoc>9.5.2. <A
href="#EncryptedData/@Id_Attribute_Mandatory">#EncryptedData/@Id_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subsubtoc>9.5.3. <A
href="#EncryptedData_EncryptionMethod_Mandatory">EncryptedData
EncryptionMethod Mandatory</A></SPAN><BR><SPAN class=subtoc>9.6. <A
href="#EncryptionKeyInfo">Encryption
KeyInfo</A></SPAN><BR><SPAN class=subsubtoc>9.6.1. <A
href="#Exactly_One_Encryption_KeyInfo_Child_Element">Exactly
One Encryption KeyInfo Child Element</A></SPAN><BR><SPAN class=subsubtoc>9.6.2.
<A
href="#KeyInfo_SecurityTokenReference_Mandatory">KeyInfo
SecurityTokenReference Mandatory</A></SPAN><BR><SPAN class=subtoc>9.7. <A
href="#EncryptionDataReference">Encryption
DataReference</A></SPAN><BR><SPAN class=subsubtoc>9.7.1. <A
href="#DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData">#DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData</A></SPAN><BR><SPAN
class=subtoc>9.8. <A
href="#EncryptedKeyDataReference">EncryptedKey
DataReference</A></SPAN><BR><SPAN class=subsubtoc>9.8.1. <A
href="#EncryptedKey_DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData">#EncryptedKey_DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData</A></SPAN><BR><SPAN
class=subtoc>9.9. <A
href="#EncryptionKeyReference">Encryption
KeyReference</A></SPAN><BR><SPAN class=subsubtoc>9.9.1. <A
href="#KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey">#KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey</A></SPAN><BR><SPAN
class=subtoc>9.10. <A
href="#EncryptedKeyKeyReference">EncryptedKey
KeyReference</A></SPAN><BR><SPAN class=subsubtoc>9.10.1. <A
href="#EncryptedKey_KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey">#EncryptedKey_KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey</A></SPAN><BR><SPAN
class=subtoc>9.11. <A
href="#EncryptedDataEncryptionMethod">EncryptedData
EncryptionMethod</A></SPAN><BR><SPAN class=subsubtoc>9.11.1. <A
href="#Data_Encryption_Algorithms">Data
Encryption Algorithms</A></SPAN><BR><SPAN class=subtoc>9.12. <A
href="#EncryptedKeyEncryptionMethod">EncryptedKey
EncryptionMethod</A></SPAN><BR><SPAN class=subsubtoc>9.12.1. <A
href="#Key_Transport_Algorithms">Key
Transport Algorithms</A></SPAN><BR><SPAN class=subsubtoc>9.12.2. <A
href="#Key_Wrap_Algorithms">Key
Wrap Algorithms</A></SPAN><BR><SPAN class=subsubtoc>9.12.3. <A
href="#Key_Encryption_Algorithms">Key
Encryption Algorithms</A></SPAN><BR><SPAN class=subtoc>9.13. <A
href="#EncryptedHeaders">Encrypted
Headers</A></SPAN><BR><SPAN class=subsubtoc>9.13.1. <A
href="#Encrypted_Headers">Encrypted
Headers</A></SPAN><BR>10. <A
href="#BinarySecurityTokens">Binary
Security Tokens</A><BR><SPAN class=subtoc>10.1. <A
href="#WSSST">Binary
Security Tokens</A></SPAN><BR><SPAN class=subsubtoc>10.1.1. <A
href="#BinarySecurityToken/@EncodingType_Attribute_Mandatory">#BinarySecurityToken/@EncodingType_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subsubtoc>10.1.2. <A
href="#BinarySecurityToken/@ValueType_Attribute_Mandatory">#BinarySecurityToken/@ValueType_Attribute_Mandatory</A></SPAN><BR>11.
<A
href="#UsernameToken">Username
Token</A><BR><SPAN class=subtoc>11.1. <A
href="#Password">Password</A></SPAN><BR><SPAN
class=subsubtoc>11.1.1. <A
href="#Not_More_Than_One_Password">Not
More Than One Password</A></SPAN><BR><SPAN class=subsubtoc>11.1.2. <A
href="#Password/@Type_Attribute_Mandatory">#Password/@Type_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subsubtoc>11.1.3. <A
href="#Digest_Value">Digest
Value</A></SPAN><BR><SPAN class=subsubtoc>11.1.4. <A
href="#Key_Derivation">Key
Derivation</A></SPAN><BR><SPAN class=subtoc>11.2. <A
href="#UsernameTokenCreated">Created</A></SPAN><BR><SPAN
class=subsubtoc>11.2.1. <A
href="#Not_More_Than_One_Created">Not
More Than One Created</A></SPAN><BR><SPAN class=subtoc>11.3. <A
href="#UsernameTokenNonce">Nonce</A></SPAN><BR><SPAN
class=subsubtoc>11.3.1. <A
href="#Not_More_Than_One_Nonce">Not
More Than One Nonce</A></SPAN><BR><SPAN class=subsubtoc>11.3.2. <A
href="#Nonce/@EncodingType_Attribute_Mandatory">#Nonce/@EncodingType_Attribute_Mandatory</A></SPAN><BR><SPAN
class=subtoc>11.4. <A
href="#UsernameTokenSTR">SecurityTokenReference</A></SPAN><BR><SPAN
class=subsubtoc>11.4.1. <A
href="#UsernameToken_wsse111_TokenType_Value">UsernameToken
wsse111:TokenType Value</A></SPAN><BR><SPAN class=subsubtoc>11.4.2. <A
href="#UsernameToken_Reference/@ValueType_Attribute_Value">#UsernameToken_Reference/@ValueType_Attribute_Value</A></SPAN><BR><SPAN
class=subsubtoc>11.4.3. <A
href="#UsernameToken_KeyIdentifier_Prohibited">UsernameToken
KeyIdentifier Prohibited</A></SPAN><BR>12. <A
href="#x509token">X.509
Certificate Token</A><BR><SPAN class=subtoc>12.1. <A
href="#x509tokentypes">X.509
Token Types</A></SPAN><BR><SPAN class=subsubtoc>12.1.1. <A
href="#X.509_Token_Format">X.509
Token Format</A></SPAN><BR><SPAN class=subsubtoc>12.1.2. <A
href="#Certificate_Path_Token_Types">Certificate
Path Token Types</A></SPAN><BR><SPAN class=subsubtoc>12.1.3. <A
href="#PKCS7_Token_Format">PKCS7
Token Format</A></SPAN><BR><SPAN class=subtoc>12.2. <A
href="#X509TokenSTR">SecurityTokenReference</A></SPAN><BR><SPAN
class=subsubtoc>12.2.1. <A
href="#SecurityTokenReference_to_X.509_Token">SecurityTokenReference
to X.509 Token</A></SPAN><BR><SPAN class=subsubtoc>12.2.2. <A
href="#SecurityTokenReference_to_PKCS7_Token">SecurityTokenReference
to PKCS7 Token</A></SPAN><BR><SPAN class=subsubtoc>12.2.3. <A
href="#PkiPath_Token_Format">PkiPath
Token Format</A></SPAN><BR><SPAN class=subsubtoc>12.2.4. <A
href="#SecurityTokenReference_to_PkiPath_Token">SecurityTokenReference
to PkiPath Token</A></SPAN><BR><SPAN class=subsubtoc>12.2.5. <A
href="#KeyIdentifier_or_X509IssuerSerial_for_External_References">KeyIdentifier
or X509IssuerSerial for External References</A></SPAN><BR><SPAN
class=subsubtoc>12.2.6. <A
href="#KeyIdentifier/@ValueType_Attribute_Value">#KeyIdentifier/@ValueType_Attribute_Value</A></SPAN><BR><SPAN
class=subsubtoc>12.2.7. <A
href="#KeyIdentifier_Value">KeyIdentifier
Value</A></SPAN><BR><SPAN class=subsubtoc>12.2.8. <A
href="#X509IssuerSerial_Value">X509IssuerSerial
Value</A></SPAN><BR>13. <A
href="#RELToken">REL
Token</A><BR><SPAN class=subtoc>13.1. <A
href="#RELTokenSTR">SecurityTokenReferences</A></SPAN><BR><SPAN
class=subsubtoc>13.1.1. <A
href="#SecurityTokenReference_to_REL_Token">SecurityTokenReference
to REL Token</A></SPAN><BR><SPAN class=subsubtoc>13.1.2. <A
href="#Reference_by_licenseId_Prohibited_When_wsu_Id_Present">Reference
by licenseId Prohibited When wsu:Id Present</A></SPAN><BR><SPAN
class=subsubtoc>13.1.3. <A
href="#Issuer_Signature_on_REL_Token_Precedes_First_Reference">Issuer
Signature on REL Token Precedes First Reference</A></SPAN><BR>14. <A
href="#KerberosToken">Kerberos
Token</A><BR><SPAN class=subtoc>14.1. <A
href="#KerberosTokenContent">Content</A></SPAN><BR><SPAN
class=subsubtoc>14.1.1. <A
href="#Kerberos_Token_Format">Kerberos
Token Format</A></SPAN><BR><SPAN class=subsubtoc>14.1.2. <A
href="#Internal_Token_in_First_Message">Internal
Token in First Message</A></SPAN><BR><SPAN class=subsubtoc>14.1.3. <A
href="#External_Token_in_Subsequent_Messages">External
Token in Subsequent Messages</A></SPAN><BR><SPAN class=subtoc>14.2. <A
href="#KerberosSTR">SecurityTokenReference</A></SPAN><BR><SPAN
class=subsubtoc>14.2.1. <A
href="#SecurityTokenReference_to_Kerberos_Token">SecurityTokenReference
to Kerberos Token</A></SPAN><BR><SPAN class=subsubtoc>14.2.2. <A
href="#KeyIdentifier_ValueType_for_Kerberos">KeyIdentifier
ValueType for Kerberos</A></SPAN><BR><SPAN class=subsubtoc>14.2.3. <A
href="#KeyIdentifier_for_External_Token">KeyIdentifier
for External Token</A></SPAN><BR>15. <A
href="#SAMLToken">SAML
Token</A><BR><SPAN class=subtoc>15.1. <A
href="#SAMLKeyInfo">KeyInfo</A></SPAN><BR><SPAN
class=subsubtoc>15.1.1. <A
href="#References_to_SAML_Tokens_Prohibited">References
to SAML Tokens Prohibited</A></SPAN><BR><SPAN class=subtoc>15.2. <A
href="#SAMLSTR">SecurityTokenReference</A></SPAN><BR><SPAN
class=subsubtoc>15.2.1. <A
href="#SecurityTokenReference_to_SAML_V1.1_Token">SecurityTokenReference
to SAML V1.1 Token</A></SPAN><BR><SPAN class=subsubtoc>15.2.2. <A
href="#SecurityTokenReference_to_SAML_V2.0_Token">SecurityTokenReference
to SAML V2.0 Token</A></SPAN><BR><SPAN class=subsubtoc>15.2.3. <A
href="#KeyIdentifier/@ValueType_Attribute">#KeyIdentifier/@ValueType_Attribute</A></SPAN><BR><SPAN
class=subsubtoc>15.2.4. <A
href="#KeyIdentifier/@EncodingType_Attribute">#KeyIdentifier/@EncodingType_Attribute</A></SPAN><BR><SPAN
class=subsubtoc>15.2.5. <A
href="#References_to_Internal_SAML_Assertions">References
to Internal SAML Assertions</A></SPAN><BR><SPAN class=subsubtoc>15.2.6. <A
href="#References_to_External_SAML_Assertions">References
to External SAML Assertions</A></SPAN><BR>16. <A
href="#EncryptedKeyToken">EncryptedKey
Token</A><BR><SPAN class=subtoc>16.1. <A
href="#STR2EncryptedKey">SecurityTokenReference</A></SPAN><BR><SPAN
class=subsubtoc>16.1.1. <A
href="#SecurityTokenReference_to_EncryptedKey_Token">SecurityTokenReference
to EncryptedKey Token</A></SPAN><BR>17. <A
href="#attachsec">Attachment
Security</A><BR><SPAN class=subtoc>17.1. <A
href="#swa">SOAP
with Attachments</A></SPAN><BR><SPAN class=subsubtoc>17.1.1. <A
href="#Conformance">Conformance</A></SPAN><BR><SPAN
class=subsubtoc>17.1.2. <A
href="#Relationship_between_Parts">Relationship
between Parts</A></SPAN><BR><SPAN class=subsubtoc>17.1.3. <A
href="#Encryption_and_Root_Part">Encryption
and Root Part</A></SPAN><BR><SPAN class=subtoc>17.2. <A
href="#signedAttachments">Signed
Attachments</A></SPAN><BR><SPAN class=subsubtoc>17.2.1. <A
href="#Reference_to_Signed_Attachments">Reference
to Signed Attachments</A></SPAN><BR><SPAN class=subsubtoc>17.2.2. <A
href="#Attachment_Transforms">Attachment
Transforms</A></SPAN><BR><SPAN class=subsubtoc>17.2.3. <A
href="#Canonicalization">Canonicalization</A></SPAN><BR><SPAN
class=subsubtoc>17.2.4. <A
href="#Digest_Values">Digest
Values</A></SPAN><BR><SPAN class=subsubtoc>17.2.5. <A
href="#Content-Type">Content-Type</A></SPAN><BR><SPAN
class=subtoc>17.3. <A
href="#encryptedAttachments">Encrypted
Attachments</A></SPAN><BR><SPAN class=subsubtoc>17.3.1. <A
href="#References_to_Encrypted_Attachments">References
to Encrypted Attachments</A></SPAN><BR><SPAN class=subsubtoc>17.3.2. <A
href="#Type_attribute">Type
attribute</A></SPAN><BR><SPAN class=subsubtoc>17.3.3. <A
href="#Reference_URIs">Reference
URIs</A></SPAN><BR><SPAN class=subsubtoc>17.3.4. <A
href="#Content">Content</A></SPAN><BR>18.
<A
href="#seccon">Security
Considerations</A><BR><SPAN class=subtoc>18.1. <A
href="#transportsecConsiderations">SOAPAction
Header</A></SPAN><BR><SPAN class=subsubtoc>18.1.1. <A
href="#SOAPAction_header">SOAPAction
header</A></SPAN><BR><SPAN class=subtoc>18.2. <A
href="#clockSynch">Clock
Synchronization</A></SPAN><BR><SPAN class=subtoc>18.3. <A
href="#bindSTtoSigs">Security
Token Substitution</A></SPAN><BR><SPAN class=subsubtoc>18.3.1. <A
href="#Security_Token_Substitution">Security
Token Substitution</A></SPAN><BR><SPAN class=subsubtoc>18.3.2. <A
href="#Security_Token_Reference_in_Subsequent_Messages">Security
Token Reference in Subsequent Messages</A></SPAN><BR><SPAN class=subtoc>18.4. <A
href="#removalModXML">Protecting
against removal and modification of XML Elements</A></SPAN><BR><SPAN
class=subtoc>18.5. <A
href="#trustWhatIsSigned">Only
What is Signed is Protected</A></SPAN><BR><SPAN class=subtoc>18.6. <A
href="#usesha1">Use
of SHA1</A></SPAN><BR><SPAN class=subtoc>18.7. <A
href="#uniqueIds">Uniqueness
of ID attributes</A></SPAN><BR><SPAN class=subtoc>18.8. <A
href="#signSTs">Signing
Security Tokens</A></SPAN><BR><SPAN class=subtoc>18.9. <A
href="#signUTs">Signing
Username Tokens</A></SPAN><BR><SPAN class=subtoc>18.10. <A
href="#signBTs">Signing
Binary Tokens</A></SPAN><BR><SPAN class=subtoc>18.11. <A
href="#signXTs">Signing
XML Tokens</A></SPAN><BR><SPAN class=subtoc>18.12. <A
href="#replayUTs">Replay
of Username Token</A></SPAN><BR><SPAN class=subsubtoc>18.12.1. <A
href="#Replay_of_Username_Token">Replay
of Username Token</A></SPAN><BR><SPAN class=subtoc>18.13. <A
href="#digVClearPass">Use
of Digest vs. Cleartext Password</A></SPAN><BR><SPAN class=subtoc>18.14. <A
href="#encSig">Encryption
with Signatures</A></SPAN><BR><SPAN class=subsubtoc>18.14.1. <A
href="#Encrypt_DigestValue">Encrypt
DigestValue</A></SPAN><BR><SPAN class=subtoc>18.15. <A
href="#operr">Possible
Operational Errors</A></SPAN><BR>Appendix A: <A
href="#references">Referenced
Specifications</A><BR>Appendix B: <A
href="#points">Extensibility
Points</A><BR>Appendix C: <A
href="#acks">Acknowledgements</A><BR></P>
<H2 id=Introduction>1. Introduction</H2>
<P><SPAN class=statement-target></SPAN>This document defines the WS-I Basic
Security Profile 1.1 (hereafter, "Profile"), consisting of a set of
non-proprietary Web services specifications, along with clarifications to and
amplifications of those specifications which promote interoperability. </P>
<P><SPAN class=statement-target></SPAN>Section 1, <EM><SPAN
class=statement-target></SPAN>"Introduction,"</EM><SPAN
class=statement-target></SPAN> introduces the Basic Security Profile 1.1 and
relates the philosophy that it takes with regard to interoperability. </P>
<P><SPAN class=statement-target></SPAN>Section 2, <EM><SPAN
class=statement-target></SPAN>"Document Conventions,"</EM><SPAN
class=statement-target></SPAN> describes notational conventions utilized by the
Basic Security Profile 1.1. </P>
<P><SPAN class=statement-target></SPAN>Section 3, <EM><SPAN
class=statement-target></SPAN>"Profile Conformance,"</EM><SPAN
class=statement-target></SPAN> explains what it means to be conformant to the
Basic Security Profile 1.1. </P>
<P><SPAN class=statement-target></SPAN>Each subsequent section addresses a
component of the Basic Security Profile 1.1, and consists of two parts: an
overview detailing the component specifications and their extensibility points,
followed by subsections that address individual parts of the component
specifications. Note that there is no relationship between the section numbers
in this document and those in the referenced specifications. </P>
<H3 id=Philosophy>1.1 Guiding Principles</H3>
<P><SPAN class=statement-target></SPAN>The Profile was developed according to a
set of principles that, together, form the philosophy of the Basic Security
Profile 1.1, as it relates to bringing about interoperability. This section
documents these guidelines. </P>
<DL>
  <DT><SPAN class=statement-target></SPAN>No guarantee of interoperability
  <DD><SPAN class=statement-target></SPAN>Although it is impossible to
  completely guarantee the interoperability of a particular service, the Basic
  Security Profile 1.1 attempts to increase interoperability by addressing the
  most common problems that implementation experience has revealed to date.
  <DT><SPAN class=statement-target></SPAN>Focus profiling effort
  <DD><SPAN class=statement-target></SPAN>The focus of the Basic Security
  Profile 1.1 is the specifications that are explicitly defined as in-scope for
  the Basic Security Profile 1.1. Other specifications are profiled to the
  minimal extent necessary to allow meaningful profiling of the scoped
  specifications. This allows an in-depth profile of the scoped specifications
  with reduced constraining of other specifications.
  <DT><SPAN class=statement-target></SPAN>Application semantics
  <DD><SPAN class=statement-target></SPAN>Although communication of application
  semantics can be facilitated by the technologies that comprise the Basic
  Security Profile 1.1, assuring the common understanding of those semantics is
  not addressed by it.
  <DT><SPAN class=statement-target></SPAN>Testability
  <DD><SPAN class=statement-target></SPAN>When possible, the Basic Security
  Profile 1.1 makes statements that are testable. However, such testability is
  not required. Preferably, testing is achieved in a non-intrusive manner (e.g.,
  examining artifacts "on the wire"). Note: Due to the nature of cryptographic
  security, non-intrusive testing may not be possible.
  <DT><SPAN class=statement-target></SPAN>Strength of requirements
  <DD><SPAN class=statement-target></SPAN>The Profile makes strong requirements
  (e.g., MUST, MUST NOT) wherever feasible; if there are legitimate cases where
  such a requirement cannot be met, conditional requirements (e.g., MAY, SHOULD,
  SHOULD NOT) are used. Optional and conditional requirements introduce
  ambiguity and mismatches between implementations.
  <DT><SPAN class=statement-target></SPAN>Restriction vs. relaxation
  <DD><SPAN class=statement-target></SPAN>When amplifying the requirements of
  referenced specifications (including the Basic Profile 1.0), the Basic
  Security Profile 1.1 may restrict them, but does not relax them (e.g., change
  a MUST to a MAY).
  <DT><SPAN class=statement-target></SPAN>Multiple mechanisms
  <DD><SPAN class=statement-target></SPAN>If a referenced specification allows
  multiple mechanisms to be used interchangeably to achieve the same goal, the
  Basic Security Profile 1.1 selects those that are well-understood, widely
  implemented and useful. Extraneous or underspecified mechanisms and extensions
  introduce complexity and therefore reduce interoperability.
  <DT><SPAN class=statement-target></SPAN>Future compatibility
  <DD><SPAN class=statement-target></SPAN>When possible, the Basic Security
  Profile 1.1 aligns its requirements with in-progress revisions to the
  specifications it references. This aids implementers by enabling a graceful
  transition, and assures that WS-I does not 'fork' from these efforts. When the
  Basic Security Profile 1.1 cannot address an issue in a specification it
  references, this information is communicated to the appropriate body to assure
  its consideration.
  <DT><SPAN class=statement-target></SPAN>Compatibility with deployed services
  <DD><SPAN class=statement-target></SPAN>Backwards compatibility with deployed
  Web services is not a goal for the Basic Security Profile 1.1, but due
  consideration is given to it; the Profile does not introduce a change to the
  requirements of a referenced specification unless doing so addresses specific
  interoperability issues.
  <DT><SPAN class=statement-target></SPAN>Focus on interoperability
  <DD><SPAN class=statement-target></SPAN>Although there are potentially a
  number of inconsistencies and design flaws in the referenced specifications,
  the Basic Security Profile 1.1 only addresses those that affect
  interoperability.
  <DT><SPAN class=statement-target></SPAN>Conformance targets
  <DD><SPAN class=statement-target></SPAN>Where possible, the Basic Security
  Profile 1.1 places requirements on artifacts (e.g., WSDL descriptions, SOAP
  messages) rather than the producing or consuming software's behaviors or
  roles. Artifacts are concrete, making them easier to verify and therefore
  making conformance easier to understand and less error-prone.
  <DT><SPAN class=statement-target></SPAN>Lower-layer interoperability
  <DD><SPAN class=statement-target></SPAN>The Profile speaks to interoperability
  at the web-services layer only; it assumes that interoperability of
  lower-layer protocols (e.g. TCP, HTTP) and technologies (e.g. encryption and
  signature algorithms) is adequate and well-understood. WS-I does not attempt
  to assure the interoperability of these protocols and technologies as a whole.
  This assures that WS-I's expertise in and focus on Web Services standards is
  used effectively.
  <DT><SPAN class=statement-target></SPAN>Do no harm
  <DD><SPAN class=statement-target></SPAN>Interoperability of security
  technologies does not in and of itself ensure security, and the act of
  combining new technologies and protocols is especially susceptible to security
  threats. The profile takes steps to avoid introducing new security threats.
  <DT><SPAN class=statement-target></SPAN>Best Practices
  <DD><SPAN class=statement-target></SPAN>It is not the intent of the Basic
  Security Profile 1.1 to define security best practices. However, when multiple
  options exist, we may use known security weaknesses as a means of reducing
  choice and thus enhancing interoperability. The Basic Security Profile 1.1
  will offer non-normative security considerations where the authors deem
  appropriate; however, these are by no means exhaustive and should not be
  perceived as a sanctioning of a security best practice.
  <DT><SPAN class=statement-target></SPAN>Selected Errata Inclusion
  <DD><SPAN class=statement-target></SPAN>The Basic Security Profile 1.1
  restates selected requirements from the WS-Security Errata rather than
  including the entire Errata by reference, preferring interoperability over
  strict conformance. </DD></DL>
<H2 id=DocumentConventions>2. Document Conventions</H2>
<P><SPAN class=statement-target></SPAN>This document follows conventions common
to all WS-I profiles. These are described in the following sections. </P>
<H3 id=SecurityConsiderations>2.1 Security Considerations</H3>
<P><SPAN class=statement-target></SPAN>In addition to interoperability
recommendations (which are made in Rnnnn statements and intended to improve
interoperability), the Basic Security Profile 1.1 makes a number of security
recommendations intended to improve security. These Security Considerations are
presented as follows: </P>
<P class=statement><SPAN class=statement-id><SPAN
class=statement-target></SPAN>Cnnnn</SPAN><SPAN class=statement-target></SPAN>
Statement text here. </P>
<P><SPAN class=statement-target></SPAN>where "nnnn" is replaced by a number that
is unique among the security recommendations in the Basic Security Profile 1.1,
thereby forming a unique security recommendation identifier. Each security
recommendation contains a <EM><SPAN
class=statement-target></SPAN>SHOULD</EM><SPAN class=statement-target></SPAN> or
a <EM><SPAN class=statement-target></SPAN>MAY</EM><SPAN
class=statement-target></SPAN> to highlight exactly what is being recommended;
however, these recommendations are informational only and are non-normative.
Though security recommendations are expected to be tested by the test tools to
highlight possible security problems, security recommendations have no impact on
conformance. </P>
<P><SPAN class=statement-target></SPAN>It should be understood that, while a
number of recommendations are made about security, adherence to these security
recommendations does not guarantee security. </P>
<H3 id=conventions>2.2 Notational Conventions </H3>
<P>The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <A class=offsite
href="http://www.ietf.org/rfc/rfc2119.txt">RFC2119</A>.</P>
<P>Normative statements of requirements in the Basic Security Profile 1.1 (i.e.,
those impacting conformance, as outlined in "<A
href="#conformance_requirements">Conformance
Requirements</A>") are presented in the following manner:</P>
<P class=statement><SPAN class=statement-id>Rnnnn</SPAN>Statement text here.</P>
<P>where "nnnn" is replaced by a number that is unique among the requirements in
the Basic Security Profile 1.1, thereby forming a unique requirement
identifier.</P>
<P>Requirement identifiers can be considered to be namespace qualified, in such
a way as to be compatible with QNames from <A class=offsite
href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</A>. If there is no
explicit namespace prefix on a requirement's identifier (e.g., "R9999" as
opposed to "bp10:R9999"), it should be interpreted as being in the namespace
identified by the conformance URI of the document section it occurs in. If it is
qualified, the prefix should be interpreted according to the namespace mappings
in effect, as documented below.</P>
<P>Some requirements clarify the referenced specification(s), but do not place
additional constraints upon implementations. For convenience, clarifications are
annotated in the following manner: <SPAN class=statement-type>C</SPAN></P>
<P>Some requirements are derived from ongoing standardization work on the
referenced specification(s). For convenience, such forward-derived statements
are annotated in the following manner: <SPAN class=statement-origin>xxxx</SPAN>,
where "xxxx" is an identifier for the specification (e.g., "WSDL20" for WSDL
Version 2.0). Note that because such work was not complete when this document
was published, the specification that the requirement is derived from may
change; this information is included only as a convenience to implementers.</P>
<P>As noted above, some requirements may present compatibility issues (whether
forwards or backwards) with previously published versions of the profile. For
convenience, such requirements are annotated in the following manner: <SPAN
class=compat-type>Compat</SPAN></P>
<P>Extensibility points in underlying specifications (see "<A
href="#conformance_scope">Conformance
Scope</A>") are presented in a similar manner:</P>
<P class=statement><SPAN class=statement-id>Ennnn</SPAN>Extensibility Point Name
- Description</P>
<P>where "nnnn" is replaced by a number that is unique among the extensibility
points in the Basic Security Profile 1.1. As with requirement statements,
extensibility statements can be considered namespace-qualified.</P>
<P>This specification uses a number of namespace prefixes throughout; their
associated URIs are listed below. Note that the choice of any namespace prefix
is arbitrary and not semantically significant.</P>
<UL>
  <LI><STRONG>soap</STRONG> - "http://schemas.xmlsoap.org/soap/envelope/"
  <LI><STRONG>xsd</STRONG> - "http://www.w3.org/2001/XMLSchema"
  <LI><STRONG>wsi</STRONG> - "http://www.ws-i.org/schemas/conformanceClaim"
  <LI><STRONG>ds</STRONG> - "http://www.w3.org/2000/09/xmldsig#""
  <LI><STRONG>xenc</STRONG> - "http://www.w3.org/2001/04/xmlenc#"
  <LI><STRONG>c14n</STRONG> - "http://www.w3.org/2001/10/xml-exc-c14n#"
  <LI><STRONG>wsse</STRONG> -
  "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd"

  <LI><STRONG>wsse11</STRONG> -
  "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd"
  <LI><STRONG>wsu</STRONG> -
  "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"

  <LI><STRONG>b10</STRONG> -
  "http://www.ws-i.org/Profiles/Basic/2003-08/BasicProfile-1.0a.htm"
  <LI><STRONG>bp11</STRONG> -
  "http://www.ws-i.org/Profiles/BasicProfile-1.1.html"
  <LI><STRONG>saml</STRONG> - "urn:oasis:names:tc:SAML:1.0:assertion"
  <LI><STRONG>samlp</STRONG> - "urn:oasis:names:tc:SAML:1.0:protocol"
  <LI><STRONG>saml2</STRONG> - "urn:oasis:names:tc:SAML:2.0:assertion"
  <LI><STRONG>rel</STRONG> - "urn:mpeg:mpeg21:2003:01-REL-R-NS" </LI></UL>
<H3 id=versioning>2.3 Profile Identification and Versioning </H3>
<P>This document is identified by a name (in this case, Basic Security Profile)
and a version number (here, 1.1). Together, they identify a particular
<EM>profile instance</EM>.</P>
<P>Version numbers are composed of a major and minor portion, in the form
"major.minor". They can be used to determine the precedence of a profile
instance; a higher version number (considering both the major and minor
components) indicates that an instance is more recent, and therefore supersedes
earlier instances.</P>
<P>Instances of profiles with the same name (e.g., "Example Profile 1.1" and
"Example Profile 5.0") address interoperability problems in the same general
scope (although some developments may require the exact scope of a profile to
change between instances).</P>
<P>One can also use this information to determine whether two instances of a
profile are backwards-compatible; that is, whether one can assume that
conformance to an earlier profile instance implies conformance to a later one.
Profile instances with the same name and major version number (e.g., "Example
Profile 1.0" and "Example Profile 1.1") MAY be considered compatible. Note that
this does not imply anything about compatibility in the other direction; that
is, one cannot assume that conformance with a later profile instance implies
conformance to an earlier one.</P>
<H2 id=conformance>3 Profile Conformance </H2>
<P>Conformance to the Basic Security Profile 1.1 is defined by adherence to the
set of <EM>requirements</EM> defined for a specific <EM>target</EM>, within the
<EM>scope</EM> of the Profile. This section explains these terms and describes
how conformance is defined and used.</P>
<H3 id=conformance_requirements>3.1 Conformance Requirements </H3>
<P>Requirements state the criteria for conformance to the Profile. They
typically refer to an existing specification and embody refinements,
amplifications, interpretations and clarifications to it in order to improve
interoperability. All requirements in the Basic Security Profile 1.1 are
considered normative, and those in the specifications it references that are
in-scope (see "Conformance Scope") should likewise be considered normative. When
requirements in the Basic Security Profile 1.1 and its referenced specifications
contradict each other, the Basic Security Profile 1.1's requirements take
precedence for purposes of Profile conformance.</P>
<P>Requirement levels, using <A class=offsite
href="http://www.ietf.org/rfc/rfc2119.txt">RFC2119</A> language (e.g., MUST,
MAY, SHOULD) indicate the nature of the requirement and its impact on
conformance. Each requirement is individually identified (e.g., R9999) for
convenience.</P>
<P>For example;</P>
<P class=statement><SPAN class=statement-id>R9999</SPAN> Any
<STRONG>WIDGET</STRONG> SHOULD be round in shape.</P>
<P>This requirement is identified by "R9999", applies to the target WIDGET (see
below), and places a conditional requirement upon widgets; i.e., although this
requirement must be met to maintain conformance in most cases, there are some
situations where there may be valid reasons for it not being met (which are
explained in the requirement itself, or in its accompanying text).</P>
<P>Each requirement statement contains exactly one requirement level keyword
(e.g., "MUST") and one conformance target keyword (e.g., "MESSAGE"). The
conformance target keyword appears in bold text (e.g. "<B>MESSAGE</B>"). Other
conformance targets appearing in non-bold text are being used strictly for their
definition and NOT as a conformance target. Additional text may be included to
illuminate a requirement or group of requirements (e.g., rationale and
examples); however, prose surrounding requirement statements must not be
considered in determining conformance.</P>
<P>Definitions of terms in the Basic Security Profile 1.1 are considered
authoritative for the purposes of determining conformance.</P>
<P>None of the requirements in the Basic Security Profile 1.1, regardless of
their conformance level, should be interpreted as limiting the ability of an
otherwise conforming implementation to apply security countermeasures in
response to a real or perceived threat (e.g., a denial of service attack).</P>
<H3 id=conformance_targets>3.2 Conformance Targets </H3>
<P>Conformance targets identify what artifacts (e.g., SOAP message, WSDL
description, UDDI registry data) or parties (e.g., SOAP processor, end user)
requirements apply to. </P>
<P>This allows for the definition of conformance in different contexts, to
assure unambiguous interpretation of the applicability of requirements, and to
allow conformance testing of artifacts (e.g., SOAP messages and WSDL
descriptions) and the behavior of various parties to a Web service (e.g.,
clients and service instances).</P>
<P>Requirements' conformance targets are physical artifacts wherever possible,
to simplify testing and avoid ambiguity.</P>
<P>The following conformance targets are used in the Basic Security Profile
1.1:</P>
<UL>
  <LI><STRONG>BINARY_SECURITY_TOKEN </STRONG>- a SECURITY_TOKEN named
  wsse:BinarySecurityToken.
  <LI><STRONG>CANONICALIZATION_METHOD </STRONG>- an element named
  ds:CanonicalizationMethod, included as a child of a SIGNED_INFO or a
  wsse:TransformationParameters child of a SIG_TRANSFORM.
  <LI><STRONG>CREATED </STRONG>- an element named wsu:Created, included as a
  child of a TIMESTAMP or USERNAME_TOKEN.
  <LI><STRONG>DESCRIPTION </STRONG>- descriptions of types, messages, interfaces
  and their concrete protocol and data format bindings, and the network access
  points associated with Web services (e.g., WSDL descriptions). (from Basic
  Profile 1.0)
  <LI><STRONG>DIGEST_METHOD </STRONG>- an element named ds:DigestMethod,
  included as a child of a SIG_REFERENCE.
  <LI><STRONG>ED_ENCRYPTION_METHOD </STRONG>- an element named
  xenc:EncryptionMethod, included as a child of an ENCRYPTED_DATA.
  <LI><STRONG>EK_DATA_REFERENCE </STRONG>- an element named xenc:DataReference,
  included as a child of an EK_REFERENCE_LIST.
  <LI><STRONG>EK_ENCRYPTION_METHOD </STRONG>- an element named
  xenc:EncryptionMethod, included as a child of an ENCRYPTED_KEY.
  <LI><STRONG>EK_KEY_REFERENCE </STRONG>- an element named xenc:KeyReference,
  included as a child of an EK_REFERENCE_LIST.
  <LI><STRONG>EK_REFERENCE_LIST </STRONG>- an element named xenc:ReferenceList,
  included as a child of an ENCRYPTED_KEY.
  <LI><STRONG>ENC_DATA_REFERENCE </STRONG>- an element named xenc:DataReference,
  included as a child of an ENC_REFERENCE_LIST.
  <LI><STRONG>ENC_KEY_INFO </STRONG>- an element named ds:KeyInfo, included as a
  child of an ENCRYPTED_KEY or ENCRYPTED_DATA.
  <LI><STRONG>ENC_KEY_REFERENCE </STRONG>- an element named xenc:KeyReference,
  included as a child of an ENC_REFERENCE_LIST.
  <LI><STRONG>ENC_REFERENCE_LIST </STRONG>- an element named xenc:ReferenceList,
  included as a child of a SECURITY_HEADER.
  <LI><STRONG>ENCRYPTED_DATA </STRONG>- an element named xenc:EncryptedData,
  referenced by an EK_REFERENCE_LIST or an ENC_REFERENCE_LIST.
  <LI><STRONG>ENCRYPTED_KEY </STRONG>- an element named xenc:EncryptedKey,
  included as a child of a SECURITY_HEADER.
  <LI><STRONG>ENCRYPTED_KEY_TOKEN </STRONG>- a SECURITY_TOKEN that is an
  ENCRYPTED_KEY.
  <LI><STRONG>EXPIRES </STRONG>- an element named wsu:Expires, included as a
  child of a TIMESTAMP.
  <LI><STRONG>EXTERNAL_SAML_TOKEN </STRONG>- an EXTERNAL_SECURITY_TOKEN that is
  a SAML_TOKEN.
  <LI><STRONG>EXTERNAL_SECURITY_TOKEN </STRONG>- a security token defined in a
  security token profile, not included as a descendant of a SOAP_ENVELOPE.
  <LI><STRONG>EXTERNAL_TOKEN_REFERENCE </STRONG>- a SECURITY_TOKEN_REFERENCE
  that refers to an EXTERNAL_SECURITY_TOKEN.
  <LI><STRONG>HEADER_ELEMENT </STRONG>- an element included as a child of the
  SOAP_HEADER.
  <LI><STRONG>INCLUSIVE_NAMESPACES </STRONG>- an element named
  xc14n:InclusiveNamespaces, include as a child of a SIG_TRANSFORM or a
  CANONICALIZATION_METHOD.
  <LI><STRONG>INSTANCE </STRONG>- software that implements a wsdl:port or a
  uddi:bindingTemplate. (from Basic Profile 1.0)
  <LI><STRONG>INTERNAL_SAML_TOKEN </STRONG>- an INTERNAL_SECURITY_TOKEN that is
  a SAML_TOKEN.
  <LI><STRONG>INTERNAL_SAML_V2_SECURITY_TOKEN </STRONG>- An
  INTERNAL_SECURITY_TOKEN that is a SAML_V2_0_TOKEN.
  <LI><STRONG>INTERNAL_SECURITY_TOKEN </STRONG>- a security token defined in a
  security token profile, included as a child of a SECURITY_HEADER or
  STR_EMBEDDED.
  <LI><STRONG>KERBEROS_TOKEN </STRONG>- a BINARY_SECURITY_TOKEN containing a GSS
  wrapped Kerberos v5 AP-REQ.
  <LI><STRONG>MIME_BODY </STRONG>- the body of a multipart entity, as defined by
  MIME.
  <LI><STRONG>MIME_HEADER </STRONG>- a header field of a multipart entity, as
  defined by MIME.
  <LI><STRONG>MIME_PART </STRONG>- the MIME_BODY and all MIME_HEADERs associated
  with a single multipart entity, as defined by MIME.
  <LI><STRONG>NONCE </STRONG>- an element named wsse:Nonce, included as a child
  of a USERNAME_TOKEN.
  <LI><STRONG>PASSWORD </STRONG>- an element named wsse:Password, included as a
  child of a USERNAME_TOKEN.
  <LI><STRONG>PKCS7_TOKEN </STRONG>- a BINARY_SECURITY_TOKEN containing a PKCS#7
  certificate chain.
  <LI><STRONG>PKIPATH_TOKEN </STRONG>- a BINARY_SECURITY_TOKEN containing a
  PkiPath certificate chain.
  <LI><STRONG>RECEIVER </STRONG>- software that consumes a message according to
  the protocol(s) associated with it. A receiver is considered conformant when
  it is capable of consuming conformant messages containing the artifacts that
  it supports and its behavior is conformant with all statements related to
  RECEIVER in the Basic Security Profile 1.1. A conformant receiver need not
  accept all possible conformant messages. A conformant receiver may choose not
  to support artifacts that provide unneeded or undesired functionality. When a
  receiver supports a specific artifact, and the Basic Security Profile 1.1
  contains statements related to that artifact, a conformant receiver must
  accept all required conformant forms of that artifact. (from Basic Profile
  1.0)
  <LI><STRONG>REL_TOKEN </STRONG>- a SECURITY_TOKEN named rel:license.
  <LI><STRONG>SAML_AUTHORITY_BINDING </STRONG>- an element named
  saml:AuthorityBinding, included as a child of an SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>SAML_SC_KEY_INFO </STRONG>- an element named ds:KeyInfo, included
  as a child of a SAML_SUBJECT_CONFIRMATION.
  <LI><STRONG>SAML_SUBJECT_CONFIRMATION </STRONG>- an element named
  saml:SubjectConfirmation, included in a SAML_TOKEN.
  <LI><STRONG>SAML_TOKEN </STRONG>- a SECURITY_TOKEN which is a SAML_V1_1_TOKEN
  or a SAML_V2_0_TOKEN.
  <LI><STRONG>SAML_V1_1_TOKEN </STRONG>- a SECURITY_TOKEN named saml:Assertion
  which conforms to SAML 1.1 (via the OASIS Web Services Security SAML Token
  Profile 1.0).
  <LI><STRONG>SAML_V2_0_TOKEN </STRONG>- a SECURITY_TOKEN named saml2:Assertion
  which conforms to SAML 2.0 (via the OASIS Web Services Security SAML Token
  Profile 1.1).
  <LI><STRONG>SECURE_ENVELOPE </STRONG>- a SOAP envelope that contains
  sub-elements that have been subject to integrity and/or confidentiality
  protection. A message is considered conformant when all of its contained
  artifacts are conformant with all statements targeted to those artifacts as
  appropriate in the Basic Security Profile. Use of artifacts for which there
  are no statements in the Basic Security Profile does not affect conformance.
  <LI><STRONG>SECURE_MESSAGE </STRONG>- protocol elements that have Web Services
  Security applied to them. Protocol elements include a primary SOAP envelope
  and optionally associated SwA attachments.
  <LI><STRONG>SECURITY_HEADER </STRONG>- a HEADER_ELEMENT named wsse:Security.
  <LI><STRONG>SECURITY_TOKEN </STRONG>- an INTERNAL_SECURITY_TOKEN or
  EXTERNAL_SECURITY_TOKEN (e.g. USERNAME_TOKEN, X509_TOKEN, REL_TOKEN,
  SAML_TOKEN, SAML_V2_0_TOKEN, KERBEROS_TOKEN, etc.).
  <LI><STRONG>SECURITY_TOKEN_REFERENCE </STRONG>- an element named
  wsse:SecurityTokenReference, included as a descendant of a SECURITY_HEADER or
  ENCRYPTED_DATA.
  <LI><STRONG>SENDER </STRONG>- software that generates a message according to
  the protocol(s) associated with it. A sender is considered conformant when all
  of the messages it produces are conformant and its behavior is conformant with
  all statements related to SENDER in the Basic Security Profile 1.1. (from
  Basic Profile 1.0)
  <LI><STRONG>SIG_KEY_INFO </STRONG>- an element named ds:KeyInfo, included as a
  child of a SIGNATURE.
  <LI><STRONG>SIG_REFERENCE </STRONG>- an element named ds:Reference, included
  as a child of a SIGNED_INFO.
  <LI><STRONG>SIG_TRANSFORMS </STRONG>- an element named ds:Transforms, included
  as a child of a SIG_REFERENCE.
  <LI><STRONG>SIG_TRANSFORM </STRONG>- an element named ds:Transform, included
  as a child of a SIG_TRANSFORMS.
  <LI><STRONG>SIGNATURE </STRONG>- an element named ds:Signature, included as a
  child of a SECURITY_HEADER.
  <LI><STRONG>SIGNATURE_METHOD </STRONG>- an element named ds:SignatureMethod,
  included as a child of a SIGNED_INFO.
  <LI><STRONG>SIGNED_INFO </STRONG>- an element named ds:SignedInfo, included as
  a child of a SIGNATURE.
  <LI><STRONG>SOAP_ENVELOPE </STRONG>- an element named soap:Envelope, which has
  no parent element.
  <LI><STRONG>SOAP_HEADER </STRONG>- an element named soap:Header, included as a
  child of the SOAP_ENVELOPE.
  <LI><STRONG>STR_EMBEDDED </STRONG>- an element named wsse:Embedded, included
  as a child of a SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>STR_ISSUER_SERIAL </STRONG>- an element named ds:X509IssuerSerial,
  included as a child of a child element named ds:X509Data of a
  SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>STR_KEY_NAME </STRONG>- an element named ds:KeyName, included as a
  child of a SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>STR_KEY_IDENTIFIER </STRONG>- an element named wsse:KeyIdentifier,
  included as a child of a SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>STR_REFERENCE </STRONG>- an element named wsse:Reference, included
  as a child of a SECURITY_TOKEN_REFERENCE.
  <LI><STRONG>TIMESTAMP </STRONG>- an element named wsu:Timestamp, included as a
  child of a SECURITY_HEADER.
  <LI><STRONG>USERNAME_TOKEN </STRONG>- a SECURITY_TOKEN named
  wsse:UsernameToken.
  <LI><STRONG>X509_TOKEN </STRONG>- a BINARY_SECURITY_TOKEN containing an X.509
  certificate. </LI></UL>
<H3 id=conformance_scope>3.3 Conformance Scope </H3>
<P>The scope of the Basic Security Profile 1.1 delineates the technologies that
it addresses; in other words, the Basic Security Profile 1.1 only attempts to
improve interoperability within its own scope. Generally, the Basic Security
Profile 1.1's scope is bounded by the specifications referenced by it.</P>
<P>The Profile's scope is further refined by extensibility points. Referenced
specifications often provide extension mechanisms and unspecified or open-ended
configuration parameters; when identified in the Basic Security Profile 1.1 as
an extensibility point, such a mechanism or parameter is outside the scope of
the Basic Security Profile 1.1, and its use or non-use is not relevant to
conformance.</P>
<P>Note that the Basic Security Profile 1.1 may still place requirements on the
use of an extensibility point. Also, specific uses of extensibility points may
be further restricted by other profiles, to improve interoperability when used
in conjunction with the Basic Security Profile 1.1.</P>
<P>Because the use of extensibility points may impair interoperability, their
use should be negotiated or documented in some fashion by the parties to a Web
service; for example, this could take the form of an out-of-band agreement.</P>
<P>The Profile's scope is defined by the referenced specifications in <A
href="#references">Appendix
A</A>, as refined by the extensibility points in <A
href="#points">Appendix
B</A>.</P>
<H3 id=conformance_claims>3.4 Claiming Conformance </H3>
<P>Claims of conformance to the Basic Security Profile 1.1 can be made using the
following mechanisms, as described in <A class=offsite
href="http://www.ws-i.org/Profiles/ConformanceClaims-1.0.html">Conformance Claim
Attachment Mechanisms</A>, when the applicable Profile requirements associated
with the listed targets have been met:</P>
<UL></UL>
<P>The conformance claim URI for the Basic Security Profile 1.1 is "
http://ws-i.org/profiles/basic-security/1.1/core " , with the following
exceptions, which are associated with specific sections:</P>
<UL>
  <LI><A
  href="#transportsec">Transport
  Layer Mechanisms</A> - "http://ws-i.org/profiles/basic-security/1.1/transport"

  <LI><A
  href="#UsernameToken">Username
  Token</A> - "http://ws-i.org/profiles/basic-security/1.1/username-token"
  <LI><A
  href="#x509token">X.509
  Certificate Token</A> -
  "http://ws-i.org/profiles/basic-security/1.1/x.509-certificate-token"
  <LI><A
  href="#RELToken">REL
  Token</A> - "http://ws-i.org/profiles/basic-security/1.1/rel-token"
  <LI><A
  href="#KerberosToken">Kerberos
  Token</A> - "http://ws-i.org/profiles/basic-security/1.1/kerberos-token"
  <LI><A
  href="#SAMLToken">SAML
  Token</A> - "http://ws-i.org/profiles/basic-security/1.1/saml-token"
  <LI><A
  href="#attachsec">Attachment
  Security</A> - "http://ws-i.org/profiles/basic-security/1.1/swa" </LI></UL>
<P>If a claim of conformance is made as described in CCAM to Basic Security
Profile 1.1 (" http://ws-i.org/profiles/basic-security/1.1/core "), then the
claim MUST also specify which tokens, be they BSP profile tokens or other
mutually agreed upon tokens, are supported.</P>
<P>The conformance URI for transport level security
("http://ws-i.org/profiles/basic-security/1.1/transport") can be used in
isolation or in combination with other conformance URIs.</P>
<H2 id=transportsec>3. Transport Layer Mechanisms</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference, and defines extensibility points within them: </P>
<UL>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2818.txt">RFC 2818: HTTP
  over TLS</A>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2246.txt">RFC 2246: The
  TLS Protocol Version 1.0</A> <BR>Extensibility points:
  <UL>
    <LI><SPAN class=statement-id id=E0009>E0009</SPAN> - TLS Ciphersuites - TLS
    allows for the use of arbitrary encryption algorithms. Note that while
    section 4.2 of the Basic Security Profile 1.1 mandates, recommends, and
    discourages support for certain ciphersuites, the Basic Security Profile 1.1
    does not prohibit use of any specific ciphersuite.
    <LI><SPAN class=statement-id id=E0010>E0010</SPAN> - TLS Extensions - TLS
    allows for extensions during the handshake phase.</LI></UL>
  <LI><A class=offsite href="http://wp.netscape.com/eng/ssl3/ssl-toc.html">The
  SSL Protocol Version 3.0</A> <BR>Extensibility points:
  <UL>
    <LI><SPAN class=statement-id id=E0011>E0011</SPAN> - SSL Ciphersuites - SSL
    allows for the use of arbitrary encryption algorithms. Note that while
    section 4.2 of the Basic Security Profile 1.1 mandates, recommends, and
    discourages support for certain ciphersuites, the Basic Security Profile 1.1
    does not prohibit use of any specific ciphersuite.</LI></UL></LI></UL>
<H3 id=TLSAndSSLVersions>3.1 TLS and SSL Versions</H3>
<P><SPAN class=statement-target></SPAN>SSL and TLS are both used as underlying
protocols for HTTP/S. The Profile places the following constraints on those
protocols: </P>
<DIV class=refinement>
<H4 id=SSL_2.0_Prohibited>3.1.1 SSL 2.0 Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>SSL 2.0 has known security issues and all
current implementations of HTTP/S support more recent protocols. Therefore the
Basic Security Profile 1.1 prohibits use of SSL 2.0. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R2001>R2001</A> </SPAN>A
<SPAN class=statement-target>SENDER</SPAN> MUST NOT use SSL 2.0 as the
underlying protocol for HTTP/S. </P>
<P class=statement><SPAN class=statement-id><A name=R2002>R2002</A> </SPAN>A
<SPAN class=statement-target>RECEIVER</SPAN> MUST NOT use SSL 2.0 as the
underlying protocol for HTTP/S. </P></DIV>
<H3 id=TLSAndSSLCiphersuites>3.2 TLS and SSL Ciphersuites</H3>
<P><SPAN class=statement-target></SPAN>In SSL and TLS, choices of algorithms are
expressed as ciphersuites. The following subsections specify ciphersuites that
are required, recommended, discouraged and prohibited, respectively. The use of
any other ciphersuite not discussed below is optional. </P>
<DIV class=refinement>
<H4 id=Mandatory_Ciphersuites>3.2.1 Mandatory Ciphersuites</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The specified algorithm suites are
considered to be widely-implemented, secure and interoperable. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5701>R5701</A> </SPAN>Any
TLS-capable <SPAN class=statement-target>INSTANCE</SPAN> that is not FIPS
compliant MUST support TLS_RSA_WITH_3DES_EDE_CBC_SHA </P>
<P class=statement><SPAN class=statement-id><A name=R5702>R5702</A> </SPAN>Any
SSL-capable <SPAN class=statement-target>INSTANCE</SPAN> that is not FIPS
compliant MUST support SSL_RSA_WITH_3DES_EDE_CBC_SHA </P>
<P class=statement><SPAN class=statement-id><A name=R5703>R5703</A> </SPAN>Any
TLS-capable <SPAN class=statement-target>INSTANCE</SPAN> that is FIPS compliant
MUST support TLS_RSA_FIPS_WITH_3DES_EDE_CBC_SHA </P>
<P class=statement><SPAN class=statement-id><A name=R5704>R5704</A> </SPAN>Any
SSL-capable <SPAN class=statement-target>INSTANCE</SPAN> that is FIPS compliant
MUST support SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA </P></DIV>
<DIV class=refinement>
<H4 id=Recommended_Ciphersuites>3.2.2 Recommended Ciphersuites</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>As the AES encryption algorithm is
intended to supersede the 3DES algorithm, it is recommended that TLS-capable
implementations implement TLS_RSA_WITH_AES_128_CBC_SHA or the FIPS equivalent,
and SSL-capable implementations implement SSL_RSA_WITH_AES_128_CBC_SHA or the
FIPS equivalent. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Discouraged_Ciphersuites>3.2.3 Discouraged Ciphersuites</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ciphersuites defined in the SSL and
TLS specifications that use anonymous Diffie-Hellman (i.e. those that have
DH_anon in their symbolic name) are vulnerable to man-in-the-middle attacks. It
is also recommended that ciphersuites that include MD5 (i.e. those that have MD5
in their symbolic name) be avoided, due to known security weaknesses of the MD5
algorithm. It is recommended that such ciphersuites be avoided. </P>
<P><SPAN class=statement-target></SPAN>The Profile recommends against the use of
the following ciphersuites due to their lack of confidentiality services: </P>
<UL>
  <LI><SPAN class=statement-target></SPAN>SSL_RSA_WITH_NULL_SHA
  <LI><SPAN class=statement-target></SPAN>TLS_RSA_WITH_NULL_SHA
  <LI><SPAN class=statement-target></SPAN>SSL_RSA_WITH_NULL_MD5
  <LI><SPAN class=statement-target></SPAN>TLS_RSA_WITH_NULL_MD5 </LI></UL>
<P><SPAN class=statement-target></SPAN>It is also recommended that ciphersuites
that use 40 or 56 bit keys be avoided, due to their relative ease of compromise
through brute-force attack. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Prohibited_Ciphersuites>3.2.4 Prohibited Ciphersuites</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Profile does not prohibit the use of
any transport layer security ciphersuites, but careful thought should be given
prior to the use of any ciphersuites discussed under "Discouraged ciphersuites".
</P></DIV></DIV>
<H2 id=SOAPNodesAndMessages>4. SOAP Nodes and Messages</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference, and defines extensibility points within them: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">Web
  Services Security: SOAP Message Security 1.1 (WS-Security 2004) OASIS Standard
  Specification, 1 February 2006</A> <BR>Extensibility points:
  <UL>
    <LI><SPAN class=statement-id id=E0002>E0002</SPAN> - Security Tokens -
    Security tokens may be specified in additional security token
  profiles.</LI></UL>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.0.html">Basic Profile
  Version 1.0 (BP1.0)</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.0-errata.html">Basic Profile
  Version 1.0 Errata</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.1.html">Basic Profile
  Version 1.1 (BP1.1)</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/SimpleSoapBindingProfile-1.0.html">Simple
  SOAP Binding Profile Version 1.0 (SSBP1.0)</A> </LI></UL>
<H3 id=SecurityPolicy>4.1 Security Policy</H3>
<DIV class=refinement>
<H4 id=Out_of_Band_Agreement>4.1.1 Out of Band Agreement</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Partners in a message exchange must agree
which elements must be signed and/or encrypted and which elements may be signed
and/or encrypted and which security tokens must be present and may be present.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3105>R3105</A> </SPAN>A
<SPAN class=statement-target>SENDER</SPAN> MAY agree in an out of band fashion
with a RECEIVER on required and allowed signed and/or encrypted message content
and security tokens. </P>
<P class=statement><SPAN class=statement-id><A name=R3106>R3106</A> </SPAN>A
<SPAN class=statement-target>RECEIVER</SPAN> MAY agree in an out of band fashion
with a SENDER on required and allowed signed and/or encrypted message content
and security tokens. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Some vendor platforms have strict
implementation of what message content must be signed and/or encrypted and which
security tokens must be present and which may be present. Other vendor platforms
are more tolerant to receiving additional signed content in a message. The
Profile allows for an out of band agreement between partners on how to address
this issue. </P></DIV></DIV>
<H3 id=SOAPEnvelope>4.2 SOAP Envelope</H3>
<DIV class=refinement>
<H4 id=Secure_Envelope_Validity>4.2.1 Secure Envelope Validity</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Envelope, Header, or Body elements
must not be encrypted. Encrypting these elements would break the SOAP processing
model and is therefore prohibited. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5607>R5607</A> </SPAN>Any
<SPAN class=statement-target>SECURE_ENVELOPE</SPAN> MUST still be a valid SOAP
Envelope after SOAP Message Security, including encryption, is applied.
</P></DIV>
<DIV class=refinement>
<H4 id=wsu_Id_Attribute_Value_Uniqueness>4.2.2 wsu:Id Attribute Value
Uniqueness</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>One of the principles of the underlying
specifications is that processing of messages should not require schema
validation. However, without schema processing it is not possible to determine
whether individual attributes are of type ID and must therefore be unique.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3204>R3204</A> </SPAN>Any
<SPAN class=statement-target>SECURE_ENVELOPE</SPAN> MUST NOT contain more than
one element specifying the same wsu:Id attribute value. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Since verification of signatures
typically requires dereferencing of elements based on ID attribute values, these
values are required to be unique within a message. </P></DIV></DIV>
<H3 id=IntermediaryProcessing>4.3 Intermediary Processing</H3>
<DIV class=refinement>
<H4 id=Removal_of_Headers>4.3.1 Removal of Headers</H4>
<P class=statement><SPAN class=statement-id><A name=R3207>R3207</A> </SPAN>A
SOAP intermediary INSTANCE MUST NOT remove or modify any HEADER_ELEMENT unless
that SOAP intermediary is acting in the role specified by the S11:actor
attribute of that HEADER_ELEMENT. </P></DIV>
<H3 id=SOAPNodeBPClarification>4.4 Basic Profile Clarification</H3>
<P><SPAN class=statement-target></SPAN>The Basic Security Profile is an
extension profile to the Basic Profile. This means it is consistent with the
Basic Profile but profiles additional functionality - how to add conformant
security features to the Basic Profile when needed. </P>
<P><SPAN class=statement-target></SPAN>As an extension of the Basic Profile, the
Basic Security Profile is designed to support the addition of security
functionality to SOAP messaging, in an interoperable manner. One example of such
functionality is the confidentiality of selected SOAP header blocks and SOAP
body elements and content through the use of OASIS Web Services Security
encryption. The intent of such techniques is to change the nature of the SOAP
message so that unintended parties cannot read such content. This means that the
secured SOAP message is no longer obviously related to the original WSDL
description, and is not intelligible without decryption. Other security
mechanisms such as signatures may also modify the content of SOAP envelopes.
</P>
<P><SPAN class=statement-target></SPAN>The Basic Profile includes requirements
on the content of SOAP envelopes (or in Basic Profile 1.0 the format of SOAP
messages). Testing conformance to these statements by using a
"man-in-the-middle" interceptor as outlined in the WS-I Monitor Tool Functional
Specification will not be possible if encryption has been applied to portions of
the SOAP envelope and have not yet been decrypted. Even if interception is
possible, some messages may have a different structure due to security. </P>
<P><SPAN class=statement-target></SPAN>Such SOAP messages still conform to the
Basic Profile, since conformance to the Basic Profile means conformance once a
receiver has reversed security changes introduced by a message sender. This is
not obvious in some Basic Profile requirements, so this document further
clarifies these requirements in the normative "Basic Profile Clarifications"
section below. </P>
<P><SPAN class=statement-target></SPAN>It is helpful to visualize a SOAP message
in light of a protocol layering model, such as the ISO seven layer protocol
model [ Tanenbaum ]. This model shows how a protocol is in fact composed of
different layers, and how to a given layer underlying layers are transparent.
The implementation of a given protocol layer at an endpoint may be modeled as
that implementation consuming a service of the underlying protocol layer, and
providing a service to the layer above it. In this model no protocol layer need
be aware of layers above or below it, making the layer implementations
independent. This is illustrated in Figure 1. </P>
<P><IMG
src="Attach 20 Basic Security Profile - Version 1_1 (WGAD) 2007 02 20_files/soap-stack-drawing.png">
</P>
<P><SPAN class=statement-target></SPAN>Figure 1: Protocol Stack with SOAP
Message Security </P>
<P><SPAN class=statement-target></SPAN>Traditionally, protocol layers have been
distinguished by the use of protocol enveloping, where the message at one layer
is conveyed as the body in the next lower layer. The sender passes a message to
the lower level protocol implementation that packages it in a protocol envelope
and sends it to the corresponding layer in the receiver. The sender and receiver
at this lower layer perform whatever processing is necessary for delivery
according to the specification of that layer, and finally the receiver passes
the message up to the peer of the sender. </P>
<P><SPAN class=statement-target></SPAN>SOAP Security may be viewed as a lower
layer with respect to the more general SOAP web services application layer. Thus
a SOAP sender may pass a SOAP message to a lower layer SOAP security
implementation that applies encryption (for example), and sends the message to
the destination SOAP Security layer, which removes the encryption before passing
the message up to the peer SOAP web services application layer. </P>
<P><SPAN class=statement-target></SPAN>Thus a Basic Profile interceptor and
compliance monitoring activity should logically occur at a receiver at the
interface between the SOAP security implementation and SOAP web services
application layer. </P>
<P><SPAN class=statement-target></SPAN>This section clarifies the BP1.0
(including Errata), BP1.1, SSBP1.0, and AP1.0 statements that might be unclear
when SOAP Message Security is applied in compliance with the Basic Security
Profile. </P>
<P><SPAN class=statement-target></SPAN>This section lists each possibly
confusing BP1.0, BP1.1, SSBP1.0, and AP1.0 requirement and an associated
statement to clarify that requirement in the context of the basic security
profile. </P>
<P><SPAN class=statement-target></SPAN>When these clarifying statements include
the phrase "reverse SOAP Message Security" it means to remove various impacts of
applying SOAP Message Security that may have been applied since the MESSAGE
(BP1.0) or ENVELOPE (BP 1.1) was originally created for that recipient according
to the BP. This may mean decrypting relevant portions of the XML or removing XML
Signature elements or making other reverse transformations as appropriate to the
aspects of SOAP Message Security that were applied in the specific circumstance.
</P>
<P><SPAN class=statement-target></SPAN>Not all security must be reversed, only
that for the intended recipient, as applied to the BP compliant envelope before
sent to that recipient. </P>
<DIV class=refinement>
<H4 id=BP_Requirement_R1029>4.4.1 BP Requirement R1029</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>This clarifies the Basic Profile's R1029
to reflect the fact that transmission of security related faults may increase
the vulnerability to certain attacks and in some cases faults should not be
transmitted. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5814>R5814</A> </SPAN>Where
the normal outcome of processing a SECURE_ENVELOPE would have resulted in the
transmission of a SOAP Response, but rather a fault is generated instead, a
<SPAN class=statement-target>RECEIVER</SPAN> MAY transmit a fault or silently
discard the message. </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2301>4.4.2 BP Requirement R2301</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2301 states "The order of the
elements in the soap:body of a MESSAGE MUST be the same as that of the
wsdl:parts in the wsdl:message that describes it." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2301 states "The order of the
elements in the soap:body of an ENVELOPE MUST be the same as that of the
wsdl:parts in the wsdl:message that describes it." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5800>R5800</A>
</SPAN>bp10:R2301 MUST be true after any SOAP Message Security has been reversed
for the <SPAN class=statement-target>MESSAGE</SPAN>. </P>
<P class=statement><SPAN class=statement-id><A name=R5801>R5801</A>
</SPAN>bp11:R2301 MUST be true after any SOAP Message Security has been reversed
for the <SPAN class=statement-target>ENVELOPE</SPAN>. </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2710>4.4.3 BP Requirement R2710</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2710 states "The operations in a
wsdl:binding in a DESCRIPTION MUST result in operation signatures that are
different from one another." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2710 states "The operations in a
wsdl:binding in a DESCRIPTION MUST result in operation signatures that are
different from one another." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5802>R5802</A>
</SPAN>bp10:R2710 MUST be true after SOAP Message Security processing has been
reversed for the <SPAN class=statement-target>MESSAGE</SPAN> </P>
<P class=statement><SPAN class=statement-id><A name=R5803>R5803</A>
</SPAN>bp11:R2710 MUST be true after SOAP Message Security processing has been
reversed for the <SPAN class=statement-target>ENVELOPE</SPAN> </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2712>4.4.4 BP Requirement R2712</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2712 states "A document-literal
binding MUST be serialized as a MESSAGE with a soap:Body whose child element is
an instance of the global element declaration referenced by the corresponding
wsdl:message part." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2712 states "A document-literal
binding MUST be serialized as an ENVELOPE with a soap:Body whose child element
is an instance of the global element declaration referenced by the corresponding
wsdl:message part." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5804>R5804</A>
</SPAN>bp10:R2712 MUST be true after any SOAP Message Security has been reversed
for the <SPAN class=statement-target>MESSAGE</SPAN> </P>
<P class=statement><SPAN class=statement-id><A name=R5805>R5805</A>
</SPAN>bp11:R2712 MUST be true after any SOAP Message Security has been reversed
for the <SPAN class=statement-target>ENVELOPE</SPAN> </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2724>4.4.5 BP Requirement R2724</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2724 states "If an INSTANCE
receives a message that is inconsistent with its WSDL description, it SHOULD
generate a soap:Fault with a faultcode of 'Client', unless a 'MustUnderstand' or
'VersionMismatch' fault is generated." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2724 states "If an INSTANCE
receives an envelope that is inconsistent with its WSDL description, it SHOULD
generate a soap:Fault with a faultcode of 'Client', unless a 'MustUnderstand' or
'VersionMismatch' fault is generated." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5806>R5806</A> </SPAN>For
bp10:R2724 "Inconsistent" MUST be taken to mean "Inconsistent after SOAP Message
security has been reversed", for the <SPAN class=statement-target>MESSAGE</SPAN>
</P>
<P class=statement><SPAN class=statement-id><A name=R5807>R5807</A> </SPAN>For
bp11:R2724 "Inconsistent" MUST be taken to mean "Inconsistent after SOAP Message
security has been reversed", for the <SPAN
class=statement-target>ENVELOPE</SPAN> </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2725>4.4.6 BP Requirement R2725</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2725 states "If an INSTANCE
receives a message that is inconsistent with its WSDL description, it MUST check
for "VersionMismatch", "MustUnderstand" and "Client" fault conditions in that
order." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2725 states "If an INSTANCE
receives an envelope that is inconsistent with its WSDL description, it MUST
check for "VersionMismatch", "MustUnderstand" and "Client" fault conditions in
that order." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5808>R5808</A> </SPAN>With
respect to bp10:R2725 the <SPAN class=statement-target>INSTANCE</SPAN> must
check for consistency of the MESSAGE per BP 1.0 after reversing SOAP Message
Security. </P>
<P class=statement><SPAN class=statement-id><A name=R5809>R5809</A> </SPAN>With
respect to bp11:R2725 the <SPAN class=statement-target>INSTANCE</SPAN> must
check for consistency of the ENVELOPE per BP 1.1 after reversing SOAP Message
Security. </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2729>4.4.7 BP Requirement R2729</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2729 states "A MESSAGE described
with an rpc-literal binding that is a response message MUST have a wrapper
element whose name is the corresponding wsdl:operation name suffixed with the
string 'Response'." </P>
<P><SPAN class=statement-target></SPAN>bp11:R2729 states "An ENVELOPE described
with an rpc-literal binding that is a response MUST have a wrapper element whose
name is the corresponding wsdl:operation name suffixed with the string
'Response'." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5810>R5810</A> </SPAN>With
respect to bp10:R2729 the verification of the wrapper element name of the <SPAN
class=statement-target>MESSAGE</SPAN> must be performed after reversing SOAP
Message Security. </P>
<P class=statement><SPAN class=statement-id><A name=R5811>R5811</A> </SPAN>With
respect to bp11:R2729 the verification of the wrapper element name of the <SPAN
class=statement-target>ENVELOPE</SPAN> must be performed after reversing SOAP
Message Security. </P></DIV>
<DIV class=refinement>
<H4 id=BP_Requirement_R2738>4.4.8 BP Requirement R2738</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>bp10:R2738 states "A MESSAGE MUST include
all soapbind:headers specified on a wsdl:input or wsdl:output of a
wsdl:operation of a wsdl:binding that describes it. </P>
<P><SPAN class=statement-target></SPAN>bp11:R2738 states "An ENVELOPE MUST
include all soapbind:headers specified on a wsdl:input or wsdl:output of a
wsdl:operation of a wsdl:binding that describes it." </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5812>R5812</A> </SPAN>With
respect to bp10:R2738 verification of a <SPAN
class=statement-target>MESSAGE</SPAN> must occur after SOAP Message Security has
been reversed. </P>
<P class=statement><SPAN class=statement-id><A name=R5813>R5813</A> </SPAN>With
respect to bp11:R2738 verification of an <SPAN
class=statement-target>ENVELOPE</SPAN> must occur after SOAP Message Security
has been reversed. </P></DIV>
<H2 id=SecurityHeaders>5. SecurityHeaders</H2>
<H3 id=ProcessingOrder>5.1 Processing Order</H3>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security defines the order for processing elements within wsse:Security headers.
The Profile provides the following guidance: </P>
<DIV class=refinement>
<H4 id=In_Order_of_Appearance>5.1.1 In Order of Appearance</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Messages may be signed and encrypted,
potentially by multiple entities signing and encrypting overlapping elements. A
signature applied before encryption has different security properties than
encryption applied before a signature. Determining which security properties
should be used requires an out-of-band agreement. </P>
<P><SPAN class=statement-target></SPAN>With signature before encryption, the
signer is known to have created or vouched for the plaintext data. It is not
known to the receiver whether the signer performed the encryption. The potential
exists for the identity of the signer to remain confidential except to the
receiver by encryption of the signature and signer's security token. </P>
<P><SPAN class=statement-target></SPAN>With encryption before signature, the
signer is known to have created or vouched for the ciphertext data, but it is
not known whether the signer was aware of the plaintext. It is known that the
signer was aware that the data was encrypted and intended to be delivered to the
receiver. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3212>R3212</A> </SPAN>Any
SIGNATURE, ENCRYPTED_KEY, and ENC_REFERENCE_LIST elements MUST be ordered within
a <SPAN class=statement-target>SECURITY_HEADER</SPAN> so a receiver will get the
correct result by processing the elements in the order they appear. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>As signature and encryption elements are
added to a security header they must be ordered in a way that ensures that if a
receiver of the message processing the elements in the order they appear they
will achieve the correct result. </P></DIV></DIV>
<H3 id=SOAPActorAttribute>5.2 SOAP Actor Attribute</H3>
<P><SPAN class=statement-target></SPAN>SOAP defines an actor attribute for use
in SOAP headers. The Profile places the following constraints on its use with
Security headers: </P>
<DIV class=refinement>
<H4 id=Avoid_Target_Ambiguity>5.2.1 Avoid Target Ambiguity</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The actor attribute allows a security
header to be targeted to a specific processing component or node. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3206>R3206</A> </SPAN>Any
<SPAN class=statement-target>SOAP_HEADER</SPAN> MUST NOT contain more than one
SECURITY_HEADER with the actor attribute omitted. </P>
<P class=statement><SPAN class=statement-id><A name=R3210>R3210</A> </SPAN>Any
<SPAN class=statement-target>SOAP_HEADER</SPAN> MUST NOT contain more than one
SECURITY_HEADER with the same actor attribute value. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Correct security header processing is
order dependent. Eliminating potential ambiguity caused by ordering dependencies
between headers targeted to the same actor eliminates complexity.
</P></DIV></DIV>
<H2 id=Timestamps>6. Timestamps</H2>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security defines a Timestamp element for use in SOAP messages. The Profile
places the following constraints on its use: </P>
<H3 id=Placement>6.1 Placement</H3>
<DIV class=refinement>
<H4 id=Not_More_Than_One_per_Security_Header>6.1.1 Not More Than One per
Security Header</H4>
<P class=statement><SPAN class=statement-id><A name=R3227>R3227</A> </SPAN>A
<SPAN class=statement-target>SECURITY_HEADER</SPAN> MUST NOT contain more than
one TIMESTAMP. </P></DIV>
<H3 id=TimestampContent>6.2 Content</H3>
<DIV class=refinement>
<H4 id=Exactly_One_Created_per_Timestamp>6.2.1 Exactly One Created per
Timestamp</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The wsu:Created element represents the
creation time of the security semantics. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3203>R3203</A> </SPAN>A
<SPAN class=statement-target>TIMESTAMP</SPAN> MUST contain exactly one CREATED.
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>This element is REQUIRED and can only be
specified once in a Timestamp element. Within the SOAP processing model,
creation is the instant that the Infoset is serialized for transmission.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsu:Timestamp element is missing a wsu:Created child element --&gt;
&lt;wsu:Timestamp wsu:Id="timestamp"&gt;
   &lt;wsu:Expires&gt;2001-10-13T09:00:00Z&lt;/wsu:Expires&gt;
&lt;/wsu:Timestamp&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsu:Timestamp wsu:Id="timestamp"&gt;
   &lt;wsu:Created&gt;2001-09-13T08:42:00Z&lt;/wsu:Created&gt;
   &lt;wsu:Expires&gt;2001-10-13T09:00:00Z&lt;/wsu:Expires&gt;
&lt;/wsu:Timestamp&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Not_More_Than_One_Expires_per_Timestamp>6.2.2 Not More Than One Expires
per Timestamp</H4>
<P class=statement><SPAN class=statement-id><A name=R3224>R3224</A> </SPAN>Any
<SPAN class=statement-target>TIMESTAMP</SPAN> MUST NOT contain more than one
EXPIRES. </P></DIV>
<DIV class=refinement>
<H4 id=Created_Precedes_Expires_in_Timestamp>6.2.3 Created Precedes Expires in
Timestamp</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>A timestamp may optionally contain an
expires element. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3221>R3221</A> </SPAN>Any
<SPAN class=statement-target>TIMESTAMP</SPAN> containing an EXPIRES MUST contain
a CREATED that precedes its sibling EXPIRES. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Preventing multiple expires elements and
enforcing the order of elements reduces complexity. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Timestamp_Contains_Nothing_Other_Than_Create_and_Expires>6.2.4 Timestamp
Contains Nothing Other Than Create and Expires</H4>
<P class=statement><SPAN class=statement-id><A name=R3222>R3222</A> </SPAN>Any
<SPAN class=statement-target>TIMESTAMP</SPAN> MUST NOT contain anything other
than CREATED or EXPIRES elements. </P></DIV>
<H3 id=ConstraintsOnCreatedAndExpires>6.3 Constraints on Created and
Expires</H3>
<DIV class=refinement>
<H4 id=Value_Precision_to_Milliseconds>6.3.1 Value Precision to
Milliseconds</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications do not
limit the resolution of timestamp values. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3220>R3220</A> </SPAN>Any
<SPAN class=statement-target>CREATED</SPAN> SHOULD NOT contain a seconds value
with more than three digits to the right of the decimal (milliseconds). </P>
<P class=statement><SPAN class=statement-id><A name=R3229>R3229</A> </SPAN>Any
<SPAN class=statement-target>EXPIRES</SPAN> SHOULD NOT contain a seconds value
with more than three digits to the right of the decimal (milliseconds). </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Since implementations have practical
limits on resolution of time values the Profile requires a reasonable processing
capability. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Leap_Second_Values_Prohibited>6.3.2 Leap Second Values Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Leap seconds are allowed by the
underlying specifications. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3213>R3213</A> </SPAN>Any
<SPAN class=statement-target>CREATED</SPAN> containing second values MUST
specify seconds values less than 60. </P>
<P class=statement><SPAN class=statement-id><A name=R3215>R3215</A> </SPAN>Any
<SPAN class=statement-target>EXPIRES</SPAN> containing second values MUST
specify seconds values less than 60. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Leap second processing is complex and
error prone. The Profile disallows specification of leap seconds.
</P></DIV></DIV>
<DIV class=refinement>
<H4 id=ValueType_Attribute_Prohibited>6.3.3 ValueType Attribute Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications allow for
the specification of a timestamp ValueType. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3225>R3225</A> </SPAN>Any
<SPAN class=statement-target>CREATED</SPAN> MUST NOT include a ValueType
attribute. </P>
<P class=statement><SPAN class=statement-id><A name=R3226>R3226</A> </SPAN>Any
<SPAN class=statement-target>EXPIRES</SPAN> MUST NOT include a ValueType
attribute. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>There is no specified set of values for
the ValueType attribute so the Basic Security Profile 1.1 disallows its use.
</P></DIV></DIV>
<DIV class=refinement>
<H4 id=UTC_Format_Mandatory>6.3.4 UTC Format Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications allow for a
variety of timestamp formats. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3217>R3217</A> </SPAN>Any
<SPAN class=statement-target>CREATED</SPAN> MUST contain time values in UTC
format as specified by the XML Schema type (dateTime). </P>
<P class=statement><SPAN class=statement-id><A name=R3223>R3223</A> </SPAN>Any
<SPAN class=statement-target>EXPIRES</SPAN> MUST contain time values in UTC
format as specified by the XML Schema type (dateTime). </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Limiting timestamp values to UTC time
eliminates complexity. </P></DIV></DIV>
<H2 id=SecurityTokenReferences>7. Security Token References</H2><SPAN
class=statement-target></SPAN>Web Services Security: SOAP Message Security
defines a wsse:SecurityTokenReference element for use in SOAP messages. The
Profile places the following constraints on its use:
<H3 id=STRContent>7.1 Content</H3>
<DIV class=refinement>
<H4 id=Exactly_One_SecurityTokenReference_Child_Element>7.1.1 Exactly One
SecurityTokenReference Child Element</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security allows for a single SecurityTokenReference to include multiple
reference mechanisms to the same security token. The Profile requires that only
one be used. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3061>R3061</A></SPAN> A
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> MUST provide
exactly one token reference. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Restricting the number of reference
mechanisms reduces complexity. </P></DIV></DIV>
<H3 id=STRTokenType>7.2 TokenType Attribute</H3>
<DIV class=refinement>
<H4 id=Value_of_TokenType_Attribute>7.2.1 Value of TokenType Attribute</H4>
<P class=statement><SPAN class=statement-id><A name=R3074>R3074</A></SPAN> Any
wsse:11:TokenType Attribute in a <SPAN
class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> MUST specify a value that
a TokenType specified by a security token profile for the referenced
SECURITY_TOKEN. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Restricting the number of reference
mechanisms reduces complexity. </P></DIV></DIV>
<H3 id=DirectReferences>7.3 Direct References</H3>
<DIV class=refinement>
<H4 id=Direct_Reference_to_Security_Token_Reference_Prohibited>7.3.1 Direct
Reference to Security Token Reference Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The only proper way to refer to an
INTERNAL_SECURITY_TOKEN by Direct Reference (even one inside a STR_EMBEDDED) is
to refer directly to the INTERNAL_SECURITY_TOKEN. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3057>R3057</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> MUST NOT reference a
SECURITY_TOKEN_REFERENCE. </P>
<P class=statement><SPAN class=statement-id><A name=R3064>R3064</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> MUST NOT reference an
STR_EMBEDDED. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the second wsse:SecurityTokenReference element refers to the
     wsse:SecurityTokenReference with an wsu:Id of TheFirstSTR  --&gt;
&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                          EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
&lt;wsse:SecurityTokenReference wsu:Id="TheFirstSTR"&gt;
   &lt;wsse:Reference URI='#SomeCert'
                   ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
&lt;/wsse:SecurityTokenReference&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Reference URI='#TheFirstSTR'
                   ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCert"&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Reference URI='#SomeCert'
                   ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Reference/@ValueType_Attribute_Mandatory>7.3.2 Reference/@ValueType
Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ValueType attribute in a security
token reference is optional and has no accepted default value. This creates
ambiguity between implementations when it is missing. Furthermore, security
tokens similarly have ValueType attributes, which creates the possibility of
contradiction between the reference and the token. There is no accepted
processing model to resolve this. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3059>R3059</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> MUST specify a ValueType
attribute with the exception of STR_REFERENCE pointing to a SAML_V2_0_TOKEN or a
KERBEROS_TOKEN or an ENCRYPTED_KEY_TOKEN. </P>
<P class=statement><SPAN class=statement-id><A name=R3058>R3058</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> ValueType attribute MUST
contain a value for the referenced SECURITY_TOKEN specified by the corresponding
security token profile. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Requiring that Security Token References
carry a ValueType attribute makes it clear what type of security token is being
referenced enabling security token specific reference mechanisms and aiding in
error detection. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Reference/@URI_Attribute_Mandatory>7.3.3 Reference/@URI Attribute
Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security treats the URI attribute as optional allowing for extensibility in the
reference mechanism. However, the only fully specified mechanism which uses the
Reference element requires a URI value. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3062>R3062</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> MUST specify a URI attribute.
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Eliminating underspecified functionality
removes complexity. </P></DIV></DIV>
<H3 id=KeyNameReferences>7.4 Key Name References</H3>
<DIV class=refinement>
<H4 id=Key_Name_References_Prohibited>7.4.1 Key Name References Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Key Name References may be ambiguous.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3027>R3027</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> MUST NOT contain an
STR_KEY_NAME. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>In any case where a security token would
be referred to by Key Name, it would also be possible to refer to it by a more
efficient and/or less ambiguous mechanism (e.g. Direct, Key Identifier and/or
Issuer and Serial Number). Thus, the Basic Security Profile 1.1 disallows the
use of Key Name References. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it uses a ds:KeyName element to refer to an X.509 certificate  --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;ds:KeyName&gt;CN=Security WG, OU=BSP, O=WS-I, C=US&lt;/ds:KeyName&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<H3 id=KeyIdentifierReferences>7.5 Key Identifier References</H3>
<DIV class=refinement>
<H4 id=KeyIdentifier/@ValueType_Attribute_Mandatory>7.5.1
KeyIdentifier/@ValueType Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Having an explicit ValueType removes
ambiguity about the format of the KeyIdentifier. The Profile restricts the value
to that specified in the security token profile that is associated with the
security token. The ValueType attribute in a KeyIdentifier is optional. This can
cause ambiguity when it is not explicitly stated. Furthermore, interoperability
is discouraged if a ValueType is specified but does not correspond to the value
associated with that token as stated in its security token profile. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3054>R3054</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> MUST specify a ValueType
attribute. </P>
<P class=statement><SPAN class=statement-id><A name=R3063>R3063</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> ValueType attribute MUST
contain a value specified within the security token profile associated with the
referenced SECURITY_TOKEN. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Having an explicit ValueType removes
ambiguity about the format of the KeyIdentifier and enhances processing
efficiency. The Profile restricts the value to that specified in the security
token profile that is associated with the security token. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:KeyIdentifier element is missing a ValueType attribute --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
      MIGfMa0GCSq
   &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"
                       ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier" &gt;
      MIGfMa0GCSq
   &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier/@EncodingType_Attribute_Mandatory>7.5.2
KeyIdentifier/@EncodingType Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Base64Binary is the only encoding type
specified by Web Services Security: SOAP Message Security. Explicit
specification of attribute values simplifies XML processing requirements and as
a general principle the Basic Security Profile 1.1 requires that attributes be
explicitly specified rather than relying on default values. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3070>R3070</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that refers to a
SECURITY_TOKEN other than a SAML_TOKEN MUST specify an EncodingType attribute.
</P>
<P class=statement><SPAN class=statement-id><A name=R3071>R3071</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> EncodingType attribute
MUST have a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary".
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>A wsse:KeyIdentifier may specify its
encoding type. The Profile restricts the encoding type to Base64Binary and
requires its explicit specification. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:KeyIdentifier element is missing an EncodingType attribute --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:KeyIdentifier ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier" &gt;
      MIGfMa0GCSq
   &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"
                       ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier" &gt;
      MIGfMa0GCSq
   &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<H3 id=EmbeddedReferences>7.6 Embedded References</H3>
<DIV class=refinement>
<H4 id=Embedded_Content>7.6.1 Embedded Content</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Embedded elements may potentially contain
multiple elements, creating ambiguity about which token should be processed.
Furthermore, elements may be of a type that is not defined within a security
token profile. This can cause problems with interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3060>R3060</A></SPAN> Any
<SPAN class=statement-target>STR_EMBEDDED</SPAN> MUST contain only a single
child element which is an INTERNAL_SECURITY_TOKEN. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>In order to reduce ambiguity surrounding
which token to process, the Basic Security Profile 1.1 restricts embedded
security tokens to contain exactly one security token element. It also restricts
tokens to those defined in a token profile; this establishes a defined scope of
profiles and thus allows for interoperability between implementations.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:Embedded element has multiple element children --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCerts"&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeOtherCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCert"&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Embedded_Token_Format>7.6.2 Embedded Token Format</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Using a single consistent format for
security tokens, regardless of reference mechanism, ensures consistent
processing. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3025>R3025</A></SPAN> Any
<SPAN class=statement-target>INTERNAL_SECURITY_TOKEN</SPAN> contained in an
STR_EMBEDDED MUST be in the same format as if it were a child of a
SECURITY_HEADER. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:Embedded element carries the data for the X.509 certificate
     directly rather than as a wsse:BinarySecurityToken element  --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="SomeCert"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCert"&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Security_Token_Reference_in_Embedded_Prohibited>7.6.3 Security Token
Reference in Embedded Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Embedded elements can contain multiple
binary security token elements, which creates ambiguity about which token should
be processed. Furthermore, the security token may be a type that is not defined
within a security token profile. This can cause problems with interoperability.
Using a single consistent format for security tokens, regardless of reference
mechanism, ensures consistent processing. Embedded security tokens can
potentially chain to other security tokens, which adds complexity to processing
and discourages interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3056>R3056</A></SPAN> Any
<SPAN class=statement-target>STR_EMBEDDED</SPAN> MUST NOT contain a
wsse:SecurityTokenReference child element. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>In order to reduce ambiguity surrounding
which token to process, the Basic Security Profile 1.1 restricts embedded
security tokens to contain exactly one security token element. It also restricts
tokens to those defined in a token profile; this establishes a defined scope of
profiles and thus allows for interoperability between implementations.
Eliminating redirection from within embedded elements reduces required
complexity in handling embedded security tokens. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:Embedded element contains a wsse:SecurityTokenReference element --&gt;
&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeSTR"&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference URI='#SomeCert'
                         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/wsse:Embedded&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<H3 id=InternalReferences>7.7 Internal References</H3>
<DIV class=refinement>
<H4 id=Direct_or_Embedded_References_Where_Possible>7.7.1 Direct or Embedded
References Where Possible</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security provides a list of reference mechanisms in preferred order (i.e., most
specific to least specific). This adds ambiguity and complexity, which
discourages interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3022>R3022</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
INTERNAL_SECURITY_TOKEN which has a wsu:Id attribute MUST contain an
STR_REFERENCE or STR_EMBEDDED. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The recommendation does not allow the use
of Key Identifier and Key Name references due to possible ambiguities. Direct
References and Embedded References are to be used instead of these. This reduces
complexity and improves interoperability. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it refers to a wsse:BinarySecurityToken element which specifies a wsu:id
     attribute using a wsse:KeyIdentifier element rather than a wsse:Reference or wsse:Embedded element --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                             ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
   &lt;/wsse:BinarySecurityToken&gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"
                          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier"&gt;
         MIGfMa0GCSq
      &lt;/wsse:KeyIdentifier&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                             ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
   &lt;/wsse:BinarySecurityToken&gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI='#SomeCert'
                      ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCert"&gt;
         &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                   ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                   EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
         &lt;/wsse:BinarySecurityToken&gt;
      &lt;/wsse:Embedded&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Direct_Preferred_to_Embedded_References>7.7.2 Direct Preferred to
Embedded References</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Since multiple security elements may
reference a single security token and processing of those elements may result in
the removal of the element, consistent use of direct rather than embedded
references simplifies processing. Direct references are encouraged, embedded
references are discouraged. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3023>R3023</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
INTERNAL_SECURITY_TOKEN that is referenced several times SHOULD contain an
STR_REFERENCE rather than an STR_EMBEDDED. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile encourages the consistent use
of Direct Reference to security tokens. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it uses a wsse:Embedded element for the wsse:BinarySecurityToken
     with the wsu:Id of SomeCert. It is assumed that this token is referred to from several places elsewhere
     in the SOAP envelope (not shown)  --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Embedded wsu:Id="TheEmbeddedElementAroundSomeCert"&gt;
         &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                   ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                                   EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
         &lt;/wsse:BinarySecurityToken&gt;
      &lt;/wsse:Embedded&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                             ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
   &lt;/wsse:BinarySecurityToken&gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI='#SomeCert'
                      ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Shorthand_XPointers_Mandatory_for_Direct_References>7.7.3 Shorthand
XPointers Mandatory for Direct References</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Constraining the number of referencing
mechanisms reduces complexity and thus improves interoperability. The
wsse:BinarySecurityToken has a wsu:Id attribute allowing references to this
token to use the relatively efficient and unambiguous Shorthand XPointer.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5204>R5204</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to an INTERNAL_SECURITY_TOKEN
having an ID attribute MUST contain a URI attribute with a Shorthand XPointer
value. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile requires the use of Shorthand
XPointer Reference to ensure that the URI efficiently references the correct
token. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                           ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                           EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
 &lt;/wsse:BinarySecurityToken&gt;
 &lt;xenc:EncryptedKey&gt;
   &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
   &lt;ds:KeyInfo&gt;
    &lt;wsse:SecurityTokenReference&gt;
     &lt;wsse:Reference
       URI='#SomeCert'
       ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/&gt;
    &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;xenc:CipherData&gt;
     &lt;xenc:CipherValue&gt;
       XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
     &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
 &lt;/xenc:EncryptedKey&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;rel:license xmlns:rel='urn:mpeg:mpeg21:2003:01-REL-R-NS'
              wsu:Id='SomeLic'
              licenseId='uuid:3D680C71-177B-40cc-84C1-123B02503524' &gt;
 . . .
 &lt;/rel:license&gt;
 &lt;ds:Signature&gt;
   . . .
   &lt;ds:KeyInfo&gt;
    &lt;wsse:SecurityTokenReference&gt;
     &lt;wsse:Reference
       URI='#SomeLic'
       ValueType="http://docs.oasisopen.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license" /&gt;
    &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
 &lt;/ds:Signature&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Security_Tokens_Precede_Their_References>7.7.4 Security Tokens Precede
Their References</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Security token references are intended to
provide access to security tokens residing anywhere in a document. However,
token placement can have a significant affect on processing efficiency when the
document is processed in a stream-oriented fashion. For example, resolving a
forward reference to a token may require significant subsequent document parsing
that could otherwise be eliminated. This need to satisfy random access to
security tokens adds complexity to implementations that works against
interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5205>R5205</A></SPAN> Any
<SPAN class=statement-target>INTERNAL_SECURITY_TOKEN</SPAN> that is not
contained in an STR_EMBEDDED MUST precede all SECURITY_TOKEN_REFERENCE elements
that reference it in the SOAP_ENVELOPE. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Ensuring that a security token element
appears before it is referenced, when processing in document order, means that
implementations have access to the token content referenced from a
wsse:SecurityTokenReference element when it is needed to verify a signature or
perform decryption. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:BinarySecurityToken with the wsu:Id of SomeCert appears after it is
     referenced from within the xenc:EncryptedKey element --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;xenc:EncryptedKey&gt;
   &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
   &lt;ds:KeyInfo&gt;
     &lt;wsse:SecurityTokenReference&gt;
       &lt;wsse:Reference
         URI='#SomeCert'
         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/&gt;
     &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;xenc:CipherData&gt;
     &lt;xenc:CipherValue&gt;
       XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
     &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
 &lt;/xenc:EncryptedKey&gt;
 &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                           ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                           EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
 &lt;/wsse:BinarySecurityToken&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                           ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                           EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
 &lt;/wsse:BinarySecurityToken&gt;
 &lt;xenc:EncryptedKey&gt;
   &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
   &lt;ds:KeyInfo&gt;
     &lt;wsse:SecurityTokenReference&gt;
       &lt;wsse:Reference
         URI='#SomeCert'
         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/&gt;
     &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;xenc:CipherData&gt;
     &lt;xenc:CipherValue&gt;
       XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
     &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
 &lt;/xenc:EncryptedKey&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=References_Between_Security_Headers_Prohibited>7.7.5 References Between
Security Headers Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The potential exists for the same
security token to be referenced from multiple security headers. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3066>R3066</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> that is a descendant of a
SECURITY_HEADER MUST NOT use a Shorthand XPointer to refer to an
INTERNAL_SECURITY_TOKEN located in a SECURITY_HEADER other than the
SECURITY_HEADER that contains the STR_REFERENCE. </P>
<P class=statement><SPAN class=statement-id><A name=R3067>R3067</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> that is a descendant of an
ENCRYPTED_DATA MUST NOT use a Shorthand XPointer to refer to an
INTERNAL_SECURITY_TOKEN located in a SECURITY_HEADER other than the
SECURITY_HEADER containing a reference (EK_REFERENCE_LIST or an
ENC_REFERENCE_LIST) to the ENCRYPTED_DATA. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Since processing of security header
elements can result in the removal of those elements, references to elements in
another header may not correctly resolve. If an internal security token is
referenced from multiple security headers it should be copied into each
referencing header. </P></DIV></DIV>
<H3 id=ExternalReferences>7.8 External References</H3>
<DIV class=refinement>
<H4 id=Direct_References_Where_Possible>7.8.1 Direct References Where
Possible</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Since multiple security elements may
reference a single external security token, consistent use of direct references
simplifies processing. Direct references are encouraged. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3024>R3024</A></SPAN> Any
<SPAN class=statement-target>EXTERNAL_TOKEN_REFERENCE</SPAN> that can use an
STR_REFERENCE MUST contain an STR_REFERENCE. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile encourages the use of Direct
Reference in order to minimize ambiguity. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI='http://www.ws-i.org/CertStore/Examples/BSP.PEM'
                      ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<H3 id=STRWithEncryptedData>7.9 SecurityTokenReference With EncryptedData</H3>
<DIV class=refinement>
<H4 id=Reference_to_KeyInfo_Prohibited>7.9.1 Reference to KeyInfo
Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Security token references are intended to
refer directly to security tokens. This requirement prohibits cases where a
reference is made to a ds:KeyInfo which in turn contains another reference.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3211>R3211</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> MUST NOT reference
a ds:KeyInfo element. </P></DIV>
<H2 id=XMLSignature>8. XML-Signature</H2>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security builds on XML Signature, defining usage of various elements from XML
Signature and a processing model. The Profile places the constraints defined in
this section on the use of XML Signature with Web Services Security: SOAP
Message Security. The Profile places no constraints on other use of XML
Signature. </P>
<P><SPAN class=statement-target></SPAN>In some areas the Basic Security Profile
allows limited flexibility and extensibility in the application of security to
messages. Some agreement between the SENDER and RECEIVER over which mechanisms
and choices should be used for message exchanges is necessary. Since no security
policy description language or negotiation mechanism is in scope for the Basic
Security Profile, some out of band agreement must be reached for which elements
should be signed and which signature algorithms should be used. </P>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite href="http://www.w3.org/TR/xmldsig-core/">XML-Signature
  Syntax and Processing</A></LI></UL>
<H3 id=TypesOfSignature>8.1 Types of Signature</H3>
<DIV class=refinement>
<H4 id=Enveloping_Signatures_Prohibited>8.1.1 Enveloping Signatures
Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Due to the nature of the SOAP processing
model, which is based on recognizing the elements that are children of
soap:Header and/or soap:Body, use of enveloping signatures, where the signed XML
is encapsulated in a ds:Signature element, is inappropriate. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3102>R3102</A></SPAN> A
<SPAN class=statement-target>SIGNATURE</SPAN> MUST NOT be an Enveloping
Signature as defined by the XML Signature specification. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Enveloping signatures are not allowed.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it contains an enveloping signature around the SomeSecurityToken element --&gt;
&lt;ds:Signature Id='TheSig' xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
   &lt;ds:SignedInfo&gt;
      &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
      &lt;ds:Reference URI='#SigPropBody'&gt;
         &lt;ds:Transforms&gt;
            &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
         &lt;/ds:Transforms&gt;
         &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
         &lt;ds:DigestValue&gt;i3qi5GjhHnfoBn/jOjQp2mq0Na4=&lt;/ds:DigestValue&gt;
      &lt;/ds:Reference&gt;
   &lt;/ds:SignedInfo&gt;
   &lt;ds:SignatureValue&gt;oxNwoqGbzqg1YBliz+PProgcjw8=&lt;/ds:SignatureValue&gt;
   &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference
            URI='#SomeCert'
            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"/&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;ds:Object&gt;
      &lt;ds:SignatureProperties&gt;
         &lt;ds:SignatureProperty Id='SigPropBody' Target='#TheSig'&gt;
            &lt;SomeSecurityToken/&gt;
         &lt;/ds:SignatureProperty&gt;
      &lt;/ds:SignatureProperties&gt;
   &lt;/ds:Object&gt;
&lt;/ds:Signature&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Enveloped_Signatures_Discouraged>8.1.2 Enveloped Signatures
Discouraged</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Enveloped signatures, where the
ds:Signature element is a descendant of the signed element, limit the ability of
intermediaries to process messages and should be avoided unless said limitation
is the desired effect. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3104>R3104</A></SPAN> A
<SPAN class=statement-target>SIGNATURE</SPAN> SHOULD NOT be an Enveloped
Signature as defined by the XML Signature specification. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Enveloped signatures are discouraged.
</P></DIV></DIV>
<DIV class=refinement>
<H4 id=Detached_Signatures_Preferred>8.1.3 Detached Signatures Preferred</H4>
<P class=statement><SPAN class=statement-id><A name=R3103>R3103</A></SPAN> A
<SPAN class=statement-target>SIGNATURE</SPAN> SHOULD be a Detached Signature as
defined by the XML Signature specification. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Detached signatures are encouraged.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
   &lt;ds:SignedInfo&gt;
      &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
      &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
      &lt;ds:Reference URI='#TheBody'&gt;
         &lt;ds:Transforms&gt;
            &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
         &lt;/ds:Transforms&gt;
         &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
         &lt;ds:DigestValue&gt;i3qi5GjhHnfoBn/jOjQp2mq0Na4=&lt;/ds:DigestValue&gt;
      &lt;/ds:Reference&gt;
   &lt;/ds:SignedInfo&gt;
   &lt;ds:SignatureValue&gt;PipXJ2Sfc+LTDnq4pM5JcIYt9gg=&lt;/ds:SignatureValue&gt;
   &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference URI='#SomeCert'
                         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
&lt;/ds:Signature&gt;
</PRE></DIV></DIV>
<H3 id=SignedElementReferences>8.2 Signed Element References</H3>
<P>The following specifications (or sections thereof) are referred to in this
section of the Basic Security Profile 1.1:</P>
<UL>
  <LI><A class=offsite
  href="http://www.w3.org/TR/2003/REC-xptr-framework-20030325/">XPointer
  Framework, W3C Recommendation, 25 March 2003</A></LI></UL>
<P><SPAN class=statement-target></SPAN>Element references are used to specify
which portions of a SECURE_ENVELOPE are integrity protected. The Basic Security
Profile 1.1 places the following constraints on the use of element references:
</P>
<DIV class=refinement>
<H4 id=Shorthand_XPointer_Where_Referent_has_wsu_Id_Attribute>8.2.1 Shorthand
XPointer Where Referent has wsu:Id Attribute</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Shorthand XPointer is relatively
efficient and interoperable. However, in cases where the referent element is
optional in the message and other remedies are unacceptable, it may be necessary
to use an absolute path XPath Expression which allows signature verification to
detect movement of the signed element within the message (see Section 18.4 for
details). </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3001>R3001</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> SHOULD contain a URI attribute
containing a Shorthand XPointer. </P></DIV>
<DIV class=refinement>
<H4 id=Shorthand_XPointer_Where_Referent_is_defined_by_XML_Signature>8.2.2
Shorthand XPointer Where Referent is defined by XML Signature</H4>
<P class=statement><SPAN class=statement-id><A name=R3003>R3003</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a SIGNATURE or descendant
of a SIGNATURE MUST contain a URI attribute with a reference value that is a
Shorthand XPointer to Local ID attribute defined by XML Signature. </P></DIV>
<DIV class=refinement>
<H4 id=Shorthand_XPointer_Where_Referent_is_defined_by_XML_Encryption>8.2.3
Shorthand XPointer Where Referent is defined by XML Encryption</H4>
<P class=statement><SPAN class=statement-id><A name=R3004>R3004</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to an element defined in XML
Encryption MUST contain a URI attribute with a reference value that is a
Shorthand XPointer to Local ID attribute defined by XML Encryption. </P></DIV>
<DIV class=refinement>
<H4 id=Shorthand_XPointer_to_wsu_Id_Attribute_Where_Possible>8.2.4 Shorthand
XPointer to wsu:Id Attribute Where Possible</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Processing of Shorthand XPointers
requires knowledge of which attributes are IDs. Since the underlying
specifications strive to allow message processing without schema processing,
some non-schema aware method for identifying ID attributes must be used.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3005>R3005</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to an element that is not
defined in XML Encryption, a SIGNATURE, or a descendant of a SIGNATURE SHOULD
contain a URI attribute with a reference value that is a Shorthand XPointer to a
wsu:Id attribute. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The underlying specifications define well
known ID attributes. Limiting references to those well known attributes reduces
complexity and the reliance on schema processing. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=XPath_References_Where_Necessary>8.2.5 XPath References Where
Necessary</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Elements that do not have an attribute of
type ID cannot be referred to by Shorthand XPointer so a different referencing
mechanism is needed. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3002>R3002</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to an element that does not
have an ID attribute MUST contain a TRANSFORM with an Algorithm attribute value
of "http://www.w3.org/2002/06/xmldsig-filter2". </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The XPath Filter 2.0 transform is more
efficient than the original XPath transform from XML Digital Signature Syntax
and Processing. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it uses the http://www.w3.org/TR/1999/REC-xpath-19991116 transform instead of the http://www.w3.org/2002/06/xmldsig-filter2 transform --&gt;
&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope' &gt;
 &lt;soap:Header&gt;
   &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                  xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
     &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                               ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
     &lt;/wsse:BinarySecurityToken&gt;
     &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
       &lt;ds:SignedInfo&gt;
         &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
         &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
         &lt;ds:Reference URI=''&gt;
           &lt;ds:Transforms&gt;
             &lt;ds:Transform Algorithm='http://www.w3.org/TR/1999/REC-xpath-19991116'&gt;
               &lt;ds:XPath&gt;/soap:Envelope/soap:Body/*&lt;/ds:XPath&gt;
             &lt;/ds:Transform&gt;
             &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
           &lt;/ds:Transforms&gt;
           &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
           &lt;ds:DigestValue&gt;VEPKwzfPGOxh2OUpoK0bcl58jtU=&lt;/ds:DigestValue&gt;
         &lt;/ds:Reference&gt;
       &lt;/ds:SignedInfo&gt;
       &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
       &lt;ds:KeyInfo&gt;
         &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
         &lt;/wsse:SecurityTokenReference&gt;
       &lt;/ds:KeyInfo&gt;
     &lt;/ds:Signature&gt;
   &lt;/wsse:Security&gt;
 &lt;/soap:Header&gt;
 &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
            wsu:Id='TheBody'&gt;
   &lt;m:SomeElement xmlns:m='http://example.org/ws' /&gt;
 &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope' &gt;
  &lt;soap:Header&gt;
    &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                   xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
        &lt;ds:SignedInfo&gt;
          &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
          &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
          &lt;ds:Reference URI=''&gt;
            &lt;ds:Transforms&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2002/06/xmldsig-filter2'
                            xmlns:dsxp='http://www.w3.org/2002/06/xmldsig-filter2'&gt;
                &lt;dsxp:XPath Filter='intersect'&gt;/soap:Envelope/soap:Body/*&lt;/dsxp:XPath&gt;
              &lt;/ds:Transform&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#'&gt;
                &lt;xc14n:InclusiveNamespaces xmlns:xc14n='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
              &lt;/ds:Transform&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;VEPKwzfPGOxh2OUpoK0bcl58jtU=&lt;/ds:DigestValue&gt;
          &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
        &lt;ds:KeyInfo&gt;
          &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
          &lt;/wsse:SecurityTokenReference&gt;
        &lt;/ds:KeyInfo&gt;
      &lt;/ds:Signature&gt;
    &lt;/wsse:Security&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
             wsu:Id='TheBody'&gt;
    &lt;m:SomeElement xmlns:m='http://example.org/ws' /&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV></DIV>
<H3 id=SignatureTransforms>8.3 Signature Transforms</H3>
<DIV class=refinement>
<H4 id=Transforms_Element_Mandatory>8.3.1 Transforms Element Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>At a minimum an XML Canonicalization
Algorithm needs to be specified for each Reference, necessitating a
ds:Transforms element. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5416>R5416</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> MUST contain a SIG_TRANSFORMS
child element. </P></DIV>
<DIV class=refinement>
<H4 id=Transform_Element_Mandatory>8.3.2 Transform Element Mandatory</H4>
<P class=statement><SPAN class=statement-id><A name=R5411>R5411</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORMS</SPAN> MUST contain at least one
SIG_TRANSFORM child element. </P></DIV>
<DIV class=refinement>
<H4 id=Transform_Algorithms>8.3.3 Transform Algorithms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>These algorithms are chosen for their
cryptographic strength, utility or because they address some security concern.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5423>R5423</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORM</SPAN> Algorithm attribute MUST have
a value of "http://www.w3.org/2001/10/xml-exc-c14n#" or
"http://www.w3.org/2002/06/xmldsig-filter2" or
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform"
or "http://www.w3.org/2000/09/xmldsig#enveloped-signature" or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Content-Signature-Transform"
or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Complete-Signature-Transform"
</P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope' &gt;
  &lt;soap:Header&gt;
    &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                   xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;xenc:EncryptedKey xmlns:xenc='http://www.w3.org/2001/04/xmlenc#' &gt;
        &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
        &lt;ds:KeyInfo xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
          &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
          &lt;/wsse:SecurityTokenReference&gt;
        &lt;/ds:KeyInfo&gt;
        &lt;xenc:CipherData&gt;
          &lt;xenc:CipherValue&gt;
            XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
          &lt;/xenc:CipherValue&gt;
        &lt;/xenc:CipherData&gt;
      &lt;/xenc:EncryptedKey&gt;
      &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
        &lt;ds:SignedInfo&gt;
          &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
          &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#hmac-sha1' /&gt;
          &lt;ds:Reference URI='#TheBody'&gt;
            &lt;ds:Transforms&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;+VTJraRYFT3pl7Z4uAWhmr5+bf4=&lt;/ds:DigestValue&gt;
          &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
      &lt;/ds:Signature&gt;
    &lt;/wsse:Security&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
             wsu:Id='TheBody'&gt;
    &lt;m:SomeElement xmlns:m='http://example.org/ws' /&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope' &gt;
  &lt;soap:Header&gt;
    &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                   xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
        &lt;ds:SignedInfo&gt;
          &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
          &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
          &lt;ds:Reference URI='#TheBody'&gt;
            &lt;ds:Transforms&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;+VTJraRYFT3pl7Z4uAWhmr5+bf4=&lt;/ds:DigestValue&gt;
          &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
        &lt;ds:KeyInfo&gt;
          &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
          &lt;/wsse:SecurityTokenReference&gt;
        &lt;/ds:KeyInfo&gt;
      &lt;/ds:Signature&gt;
    &lt;/wsse:Security&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
             wsu:Id='TheBody'&gt;
    &lt;m:SomeElement xmlns:m='http://example.org/ws' /&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Last_Transform_Algorithm>8.3.4 Last Transform Algorithm</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Canonicalization is critical to ensuring
signatures are processed correctly, thus each ds:Reference will need at least
one ds:Transform to specify the Exclusive C14N transform or a transform which
itself incorporates Exclusive C14N. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5412>R5412</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORMS</SPAN> MUST contain as its last
child a SIG_TRANSFORM with an Algorithm attribute with a value of
"http://www.w3.org/2001/10/xml-exc-c14n#" or
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform"
or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Content-Signature-Transform"
or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Complete-Signature-Transform".
</P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the ds:Reference element does not have a ds:Transforms child element --&gt;
&lt;ds:Reference URI='#TheBody'&gt;
   &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
   &lt;ds:DigestValue&gt;VEPKwzfPGOxh2OUpoK0bcl58jtU=&lt;/ds:DigestValue&gt;
&lt;/ds:Reference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;ds:Reference URI='#TheBody'&gt;
   &lt;ds:Transforms&gt;
      &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#'/&gt;
      &lt;/ds:Transform&gt;
   &lt;/ds:Transforms&gt;
   &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
   &lt;ds:DigestValue&gt;+VTJraRYFT3pl7Z4uAWhmr5+bf4=&lt;/ds:DigestValue&gt;
&lt;/ds:Reference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Inclusive_Namespaces_with_Exclusive-C14N_Transform>8.3.5 Inclusive
Namespaces with Exclusive-C14N Transform</H4>
<P class=statement><SPAN class=statement-id><A name=R5407>R5407</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORM</SPAN> with an Algorithm attribute
with a value of "http://www.w3.org/2001/10/xml-exc-c14n#" MUST contain an
INCLUSIVE_NAMESPACES with an PrefixList attribute unless the PrefixList is
empty. </P></DIV>
<DIV class=refinement>
<H4 id=Inclusive_Namespaces_with_STR_Transform>8.3.6 Inclusive Namespaces with
STR Transform</H4>
<P class=statement><SPAN class=statement-id><A name=R5413>R5413</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORM</SPAN> with an Algorithm attribute
with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform"
MUST have an INCLUSIVE_NAMESPACES with an PrefixList attribute unless the
PrefixList is empty. </P></DIV>
<DIV class=refinement>
<H4
id=TransformationParameters_and_CanonicalizationMethod_with_STR_Transform>8.3.7
TransformationParameters and CanonicalizationMethod with STR Transform</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Security Token Dereferencing
Transform allows for the optional specification of a canonicalization algorithm.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3065>R3065</A></SPAN> Any
<SPAN class=statement-target>SIG_TRANSFORM</SPAN> with an Algorithm attribute
with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform"
MUST contain a child wsse:TransformationParameters element containing a child
ds:CanonicalizationMethod element. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Consistent processing of data to be
signed, including security token content, reduces complexity. </P></DIV></DIV>
<H3 id=CanonicalizationMethods>8.4 Canonicalization Methods</H3>
<DIV class=refinement>
<H4 id=Exclusive_C14N_Mandatory>8.4.1 Exclusive C14N Mandatory</H4>
<P class=statement><SPAN class=statement-id><A name=R5404>R5404</A></SPAN> Any
<SPAN class=statement-target>CANONICALIZATION_METHOD</SPAN> Algorithm attribute
MUST have a value of "http://www.w3.org/2001/10/xml-exc-c14n#" indicating that
it uses Exclusive C14N without comments for canonicalization. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it uses the http://www.w3.org/TR/2001/REC-xml-c14n-20010315
canonicalization algorithm --&gt;
&lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/TR/2001/REC-xml-c14n-20010315' /&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Inclusive_Namespaces_with_Exclusive-C14N>8.4.2 Inclusive Namespaces with
Exclusive-C14N</H4>
<P class=statement><SPAN class=statement-id><A name=R5406>R5406</A></SPAN> Any
<SPAN class=statement-target>CANONICALIZATION_METHOD</SPAN> MUST contain an
INCLUSIVE_NAMESPACES with a PrefixList attribute unless the PrefixList is empty.
</P></DIV>
<H3 id=InclusiveNamespaces>8.5 Inclusive Namespaces</H3>
<DIV class=refinement>
<H4 id=Order_of_PrefixList>8.5.1 Order of PrefixList</H4>
<P class=statement><SPAN class=statement-id><A name=R5414>R5414</A></SPAN> A
<SPAN class=statement-target>RECEIVER</SPAN> MUST be capable of accepting and
processing an INCLUSIVE_NAMESPACES PrefixList attribute containing prefixes in
any order within the string. </P></DIV>
<DIV class=refinement>
<H4 id=Whitespace_in_PrefixList>8.5.2 Whitespace in PrefixList</H4>
<P class=statement><SPAN class=statement-id><A name=R5415>R5415</A></SPAN> A
<SPAN class=statement-target>RECEIVER</SPAN> MUST be capable of accepting and
processing an INCLUSIVE_NAMESPACES PrefixList attribute containing arbitrary
whitespace before, after and between the prefixes within the string. </P></DIV>
<DIV class=refinement>
<H4 id=PrefixList_Contents>8.5.3 PrefixList Contents</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Unless proper canonicalization is
performed, verification of signatures may not work due to changes to the
elements in the containing scope. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5405>R5405</A></SPAN> Any
<SPAN class=statement-target>INCLUSIVE_NAMESPACES</SPAN> MUST contain the prefix
of all namespaces that are in-scope and desired to be protected, but not visibly
utilized, for the element being signed and its descendants, per Exclusive XML
Canonicalization Version 1.0. <SPAN class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R5408>R5408</A></SPAN> Any
<SPAN class=statement-target>INCLUSIVE_NAMESPACES</SPAN> MUST contain the string
"#default" if a default namespace is in-scope and desired to be protected, but
not visibly utilized, for the element being signed and its descendants, per
Exclusive XML Canonicalization Version 1.0. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The use of Exclusive Canonicalization
with xc14n:InclusiveNamespaces/@Prefix addresses problems with both Inclusive
Canonicalization and Exclusive Canonicalization without
xc14n:InclusiveNamespaces/@Prefix. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the PrefixList of the xc14n:InclusiveNamespaces element does not contain the
     correct list of prefixes. It should contain the bar prefix. --&gt;
&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope'&gt;
  &lt;soap:Header&gt;
    &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                   xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
        &lt;ds:SignedInfo&gt;
          &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
          &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
          &lt;ds:Reference URI='#TheBody'&gt;
            &lt;ds:Transforms&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#'&gt;
                &lt;xc14n:InclusiveNamespaces xmlns:xc14n='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
              &lt;/ds:Transform&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;VEPKwzfPGOxh2OUpoK0bcl58jtU=&lt;/ds:DigestValue&gt;
          &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
        &lt;ds:KeyInfo&gt;
          &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
          &lt;/wsse:SecurityTokenReference&gt;
        &lt;/ds:KeyInfo&gt;
      &lt;/ds:Signature&gt;
    &lt;/wsse:Security&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
             wsu:Id='TheBody'
			 xmlns:bar="http://bar.com"&gt;
    &lt;m:SomeElement xmlns:m='http://example.org/ws' foo='bar:none'/&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope'&gt;
  &lt;soap:Header&gt;
    &lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
                   xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'&gt;
      &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                                ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
      &lt;/wsse:BinarySecurityToken&gt;
      &lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
        &lt;ds:SignedInfo&gt;
          &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
          &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
          &lt;ds:Reference URI='#TheBody'&gt;
            &lt;ds:Transforms&gt;
              &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#'&gt;
                &lt;xc14n:InclusiveNamespaces xmlns:xc14n='http://www.w3.org/2001/10/xml-exc-c14n#' PrefixList='bar' /&gt;
              &lt;/ds:Transform&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;VEPKwzfPGOxh2OUpoK0bcl58jtU=&lt;/ds:DigestValue&gt;
          &lt;/ds:Reference&gt;
        &lt;/ds:SignedInfo&gt;
        &lt;ds:SignatureValue&gt;+diIuEyDpV7qxVoUOkb5rj61+Zs=&lt;/ds:SignatureValue&gt;
        &lt;ds:KeyInfo&gt;
          &lt;wsse:SecurityTokenReference&gt;
            &lt;wsse:Reference
              URI='#SomeCert'
              ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
          &lt;/wsse:SecurityTokenReference&gt;
        &lt;/ds:KeyInfo&gt;
      &lt;/ds:Signature&gt;
    &lt;/wsse:Security&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
             wsu:Id='TheBody'
			 xmlns:bar="http://bar.com"&gt;
    &lt;m:SomeElement xmlns:m='http://example.org/ws' foo='bar:none'/&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;
</PRE></DIV></DIV>
<H3 id=DigestMethods>8.6 Digest Methods</H3>
<DIV class=refinement>
<H4 id=SHA-1_Preferred>8.6.1 SHA-1 Preferred</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The SHA-1 Digest algorithm is
widely-implemented and interoperable hence the recommendation that it be used
for signature digests. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5420>R5420</A></SPAN> Any
<SPAN class=statement-target>DIGEST_METHOD</SPAN> Algorithm attribute SHOULD
have the value "http://www.w3.org/2000/09/xmldsig#sha1". </P></DIV>
<H3 id=SignatureMethods>8.7 Signature Methods</H3>
<DIV class=refinement>
<H4 id=Algorithms>8.7.1 Algorithms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The two algorithms listed are
widely-implemented and interoperable. Two algorithms are needed, one symmetric,
one asymmetric. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5421>R5421</A></SPAN> Any
<SPAN class=statement-target>SIGNATURE_METHOD</SPAN> Algorithm attribute SHOULD
have a value of "http://www.w3.org/2000/09/xmldsig#hmac-sha1" or
"http://www.w3.org/2000/09/xmldsig#rsa-sha1". </P></DIV>
<DIV class=refinement>
<H4 id=HMACOutputLength_Prohibited>8.7.2 HMACOutputLength Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ds:HMACOutputLength provides an input
parameter to the HMAC-SHA1 algorithm specifying how many bits of the output to
use. Disallowing use of this element results in ALL the bits of the output being
used. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5401>R5401</A></SPAN> Any
<SPAN class=statement-target>SIGNATURE_METHOD</SPAN> MUST NOT contain a
ds:HMACOutputLength child element. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the ds:SignatureMethod element has a ds:HMACOutputLength child element --&gt;
&lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#hmac-sha1'&gt;
   &lt;ds:HMACOutputLength&gt;128&lt;/ds:HMACOutputLength&gt;
&lt;/ds:SignatureMethod&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#hmac-sha1' /&gt;
</PRE></DIV></DIV>
<H3 id=KeyInfo>8.8 KeyInfo</H3>
<DIV class=refinement>
<H4 id=Exactly_One_KeyInfo_Child_Element>8.8.1 Exactly One KeyInfo Child
Element</H4>
<P class=statement><SPAN class=statement-id><A name=R5402>R5402</A></SPAN> Any
<SPAN class=statement-target>SIG_KEY_INFO</SPAN> MUST contain exactly one child
element. </P></DIV>
<DIV class=refinement>
<H4 id=SecurityTokenReference_Mandatory>8.8.2 SecurityTokenReference
Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ds:KeyInfo element allows for many
different child elements. The Profile mandates a single element,
wsse:SecurityTokenReference, which is needed to reference security tokens.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5417>R5417</A></SPAN> Any
<SPAN class=statement-target>SIG_KEY_INFO</SPAN> MUST contain a
SECURITY_TOKEN_REFERENCE child element. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;ds:KeyInfo xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI='#SomeCert'
                      ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
   &lt;/wsse:SecurityTokenReference&gt;
&lt;/ds:KeyInfo&gt;
</PRE></DIV></DIV>
<H3 id=SignatureManifest>8.9 Manifest</H3>
<DIV class=refinement>
<H4 id=Manifest_Prohibited>8.9.1 Manifest Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ds:Manifest element is designed for
specific application level use cases that do not apply to the use of XML
Signature in SOAP Message Security. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5403>R5403</A></SPAN> A
<SPAN class=statement-target>SIGNATURE</SPAN> MUST NOT contain a ds:Manifest
descendant element. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the ds:Signature element has a ds:Manifest grandchild element --&gt;
&lt;ds:Signature xmlns:ds='http://www.w3.org/2000/09/xmldsig#'&gt;
   &lt;ds:SignedInfo&gt;
      &lt;ds:CanonicalizationMethod Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
      &lt;ds:SignatureMethod Algorithm='http://www.w3.org/2000/09/xmldsig#rsa-sha1' /&gt;
      &lt;ds:Reference URI='#TheManifest'&gt;
         &lt;ds:Transforms&gt;
            &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
         &lt;/ds:Transforms&gt;
         &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
         &lt;ds:DigestValue&gt;OVuYKGY6KCGB0l0XHS3krj8vjek=&lt;/ds:DigestValue&gt;
      &lt;/ds:Reference&gt;
   &lt;/ds:SignedInfo&gt;
   &lt;ds:SignatureValue&gt;L7X0Zw23/zYQnX4+Z+p0gCygKQ0=&lt;/ds:SignatureValue&gt;
   &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference URI='#SomeCert'
                         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;ds:Object&gt;
      &lt;ds:Manifest Id='TheManifest'&gt;
         &lt;ds:Reference URI='#TheBody'&gt;
            &lt;ds:Transforms&gt;
               &lt;ds:Transform Algorithm='http://www.w3.org/2001/10/xml-exc-c14n#' /&gt;
            &lt;/ds:Transforms&gt;
            &lt;ds:DigestMethod Algorithm='http://www.w3.org/2000/09/xmldsig#sha1' /&gt;
            &lt;ds:DigestValue&gt;+VTJraRYFT3pl7Z4uAWhmr5+bf4=&lt;/ds:DigestValue&gt;
         &lt;/ds:Reference&gt;
      &lt;/ds:Manifest&gt;
   &lt;/ds:Object&gt;
&lt;/ds:Signature&gt;
</PRE></DIV></DIV>
<H3 id=SignatureEncryption>8.10 Signature Encryption</H3>
<DIV class=refinement>
<H4 id=Encrypt_Only_Entire_Signature>8.10.1 Encrypt Only Entire Signature</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>If the value of a ds:DigestValue element
in a SIGNATURE needs to be encrypted the entire parent ds:Signature element MUST
be encrypted. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5440>R5440</A></SPAN> A
<SPAN class=statement-target>SIGNATURE</SPAN> MUST NOT have any
xenc:EncryptedData elements amongst its descendants. </P></DIV>
<H3 id=SignatureConfirmation>8.11 Signature Confirmation</H3>
<DIV class=refinement>
<H4 id=Signature_Confirmation_Format>8.11.1 Signature Confirmation Format</H4>
<P class=statement><SPAN class=statement-id><A name=R5441>R5441</A></SPAN> A
<SPAN class=statement-target>SIGNATURE_CONFIRMATION</SPAN> MUST contain a wsu:Id
attribute. </P></DIV>
<H2 id=XMLEncryption>9. XML Encryption</H2>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security builds on XML Encryption, defining usage of various elements from XML
Encryption and a processing model. The Basic Security Profile 1.1 places the
constraints defined in this section on the use of XML Encryption with Web
Services Security: SOAP Message Security. The Basic Security Profile 1.1 places
no constraints on other use of XML Encryption. </P>
<P><SPAN class=statement-target></SPAN>In some areas the Basic Security Profile
allows limited flexibility and extensibility in the application of security to
messages. Some agreement between the SENDER and RECEIVER over which mechanisms
and choices should be used for message exchanges is necessary. Since no security
policy description language or negotiation mechanism is in scope for the Basic
Security Profile, some out of band agreement must be reached for which elements
should be encrypted and which data encryption, key transport and/or key wrap
algorithms should be used. </P>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite href="http://www.w3.org/TR/xmlenc-core/">XML Encryption
  Syntax and Processing</A></LI></UL>
<H3 id=EncryptedHeader>9.1 EncryptedHeader</H3>
<DIV class=refinement>
<H4 id=EncryptedHeader_Format>9.1.1 EncryptedHeader Format</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>When it is required that an entire SOAP
header block including the top-level element and its attributes be encrypted,
the original header block is replaced with a wsse11:EncryptedHeader element.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3228>R3228</A></SPAN> A
soap:Header element in a <SPAN class=statement-target>SECURE_ENVELOPE</SPAN>
MUST NOT contain any child ENCRYPTED_DATA. </P>
<P class=statement><SPAN class=statement-id><A name=R3216>R3216</A></SPAN> A
soap:Header element in a <SPAN class=statement-target>SECURE_ENVELOPE</SPAN> MAY
contain ENCRYPTED_HEADER children. </P>
<P class=statement><SPAN class=statement-id><A name=R3230>R3230</A></SPAN> An
ENCRYPTED_HEADER MUST NOT contain any children other than a single required
ENCRYPTED_DATA. </P></DIV>
<H3 id=EncryptionReferenceList>9.2 Encryption ReferenceList</H3>
<DIV class=refinement>
<H4 id=Single_Key>9.2.1 Single Key</H4>
<P class=statement><SPAN class=statement-id><A name=R3205>R3205</A></SPAN> Any
<SPAN class=statement-target>ENC_REFERENCE_LIST</SPAN> produced as part of an
encryption step MUST use a single key. </P></DIV>
<DIV class=refinement>
<H4 id=Encryption_DataReference_for_EncryptedData>9.2.2 Encryption DataReference
for EncryptedData</H4>
<P class=statement><SPAN class=statement-id><A name=R3231>R3231</A></SPAN> Any
<SPAN class=statement-target>ENC_REFERENCE_LIST</SPAN> MUST contain an
xenc:DataReference element for each ENCRYPTED_DATA produced in the associated
encryption step. </P></DIV>
<H3 id=EncryptedKeyReferenceList>9.3 EncryptedKey ReferenceList</H3>
<DIV class=refinement>
<H4 id=EncryptedKey_DataReference_for_EncryptedData>9.3.1 EncryptedKey
DataReference for EncryptedData</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Some encryption steps might not produce
an xenc:ReferenceList. For those that do produce an xenc:ReferenceList, there
must be a separate xenc:ReferenceList for each such encryption step. When there
is a xenc:ReferenceList either as a child of wsse:Security or as a child of
xenc:EncryptedKey it must list all the corresponding xenc:EncryptedData elements
by using xenc:DataReference elements. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3214>R3214</A></SPAN> Any
<SPAN class=statement-target>EK_REFERENCE_LIST</SPAN> MUST contain a
xenc:DataReference for each ENCRYPTED_DATA produced in the associated encryption
step. </P></DIV>
<H3 id=EncryptedKey>9.4 EncryptedKey</H3>
<DIV class=refinement>
<H4 id=EncryptedKey_Precedes_EncryptedData>9.4.1 EncryptedKey Precedes
EncryptedData</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>To facilitate ease of processing, keys
are required to appear inside wsse:Security headers and to appear before they
are required for decryption of elements inside a wsse:Security header.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3208>R3208</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST precede any
ENCRYPTED_DATA in the same SECURITY_HEADER referenced by the associated
EK_REFERENCE_LIST. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
    &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
    &lt;/xenc:ReferenceList&gt;
  &lt;/xenc:EncryptedKey&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
    &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
    &lt;/xenc:ReferenceList&gt;
  &lt;/xenc:EncryptedKey&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=EncryptedKey_ReferenceList_Preferred>9.4.2 EncryptedKey ReferenceList
Preferred</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Mandating that an xenc:EncryptedKey
element contain a reference list detailing which message parts were encrypted
under that key aids message processing, unless it contains a symmetric key that
is also used for signing. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3233>R3233</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> that is used in an encryption
step SHOULD contain an EK_REFERENCE_LIST. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the xenc:EncryptedKey element is missing an xenc:ReferenceList child element --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedKey&gt;
  &lt;xenc:ReferenceList&gt;
    &lt;xenc:DataReference URI='#Enc1' /&gt;
  &lt;/xenc:ReferenceList&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
    &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
    &lt;/xenc:ReferenceList&gt;
  &lt;/xenc:EncryptedKey&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=EncryptedKey/@Type_Attribute_Prohibited>9.4.3 EncryptedKey/@Type
Attribute Prohibited</H4>
<P class=statement><SPAN class=statement-id><A name=R3209>R3209</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST NOT specify a Type
attribute. </P></DIV>
<DIV class=refinement>
<H4 id=EncryptedKey/@MimeType_Attribute_Prohibited>9.4.4 EncryptedKey/@MimeType
Attribute Prohibited</H4>
<P class=statement><SPAN class=statement-id><A name=R5622>R5622</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST NOT specify a MimeType
attribute. </P></DIV>
<DIV class=refinement>
<H4 id=EncryptedKey/@Encoding_Attribute_Prohibited>9.4.5 EncryptedKey/@Encoding
Attribute Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>These prohibited attributes are not
needed for xenc:EncryptedKey elements used to secure SOAP messages. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5623>R5623</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST NOT specify a Encoding
attribute. </P></DIV>
<DIV class=refinement>
<H4 id=EncryptedKey/@Recipient_Attribute_Prohibited>9.4.6
EncryptedKey/@Recipient Attribute Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>This attribute is prohibited because the
soap:actor attribute conveys the same information. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5602>R5602</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST NOT contain a Recipient
attribute. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the xenc:EncryptedKey element has a Recipient attribute  --&gt;
&lt;xenc:EncryptedKey Recipient='Bert'&gt;
   &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
   &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference URI='#SomeCert'
                         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
         XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
   &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
   &lt;/xenc:ReferenceList&gt;
&lt;/xenc:EncryptedKey&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=EncryptionMethod_Mandatory>9.4.7 EncryptionMethod Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Specifying the encryption algorithm used
to perform the encryption makes messages more self-describing and aids
interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5603>R5603</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_KEY</SPAN> MUST contain an
xenc:EncryptionMethod child element. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the xenc:EncryptedKey element is missing an xenc:EncryptionMethod child element --&gt;
&lt;xenc:EncryptedKey&gt;
   &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
         &lt;wsse:Reference URI='#SomeCert'
                         ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
   &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
         XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
   &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
   &lt;/xenc:ReferenceList&gt;
&lt;/xenc:EncryptedKey&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
    &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
    &lt;/xenc:ReferenceList&gt;
  &lt;/xenc:EncryptedKey&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<H3 id=EncryptedData>9.5 EncryptedData</H3>
<DIV class=refinement>
<H4 id=EncryptedData_and_KeyInfo>9.5.1 EncryptedData and KeyInfo</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ds:KeyInfo element is useful for
determining the security token with which the relevant key material is
associated. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5629>R5629</A></SPAN> An
<SPAN class=statement-target>ENCRYPTED_DATA</SPAN> which is not referenced from
an ENCRYPTED_KEY MUST contain a ds:KeyInfo. </P></DIV>
<DIV class=refinement>
<H4 id=EncryptedData/@Id_Attribute_Mandatory>9.5.2 EncryptedData/@Id Attribute
Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>All xenc:EncryptedData elements will be
referred to from an xenc:Reference list. Such references use shorthand
XPointers, hence this requirement. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5624>R5624</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_DATA</SPAN> MUST have an Id attribute.
</P></DIV>
<DIV class=refinement>
<H4 id=EncryptedData_EncryptionMethod_Mandatory>9.5.3 EncryptedData
EncryptionMethod Mandatory</H4>
<P class=statement><SPAN class=statement-id><A name=R5601>R5601</A></SPAN> Any
<SPAN class=statement-target>ENCRYPTED_DATA</SPAN> MUST contain an
xenc:EncryptionMethod child element. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the xenc:EncryptedData element is missing an xenc:EncryptionMethod child element --&gt;
&lt;xenc:EncryptedData Id='Enc1'&gt;
   &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
   &lt;/xenc:CipherData&gt;
&lt;/xenc:EncryptedData&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                            ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
  &lt;/wsse:BinarySecurityToken&gt;
  &lt;xenc:EncryptedKey&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#rsa-1_5' /&gt;
    &lt;ds:KeyInfo&gt;
      &lt;wsse:SecurityTokenReference&gt;
        &lt;wsse:Reference
          URI='#SomeCert'
          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3" /&gt;
      &lt;/wsse:SecurityTokenReference&gt;
    &lt;/ds:KeyInfo&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
        XZEEVABD3L9G+VNTCDiDTE7WB1a4kILtz5f9FT747eE=
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
    &lt;xenc:ReferenceList&gt;
      &lt;xenc:DataReference URI='#Enc1' /&gt;
    &lt;/xenc:ReferenceList&gt;
  &lt;/xenc:EncryptedKey&gt;
  &lt;xenc:EncryptedData Id='Enc1'&gt;
    &lt;xenc:EncryptionMethod Algorithm='http://www.w3.org/2001/04/xmlenc#tripledes-cbc' /&gt;
    &lt;xenc:CipherData&gt;
      &lt;xenc:CipherValue&gt;
9jFtYcLSlDZQBMjKfT7ctg6Jy+6sC8YORhiPeTvOjug7ozY2SRHGuLt8G/vf2f/f4IdF0ewiDOpq...
      &lt;/xenc:CipherValue&gt;
    &lt;/xenc:CipherData&gt;
  &lt;/xenc:EncryptedData&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<H3 id=EncryptionKeyInfo>9.6 Encryption KeyInfo</H3>
<DIV class=refinement>
<H4 id=Exactly_One_Encryption_KeyInfo_Child_Element>9.6.1 Exactly One Encryption
KeyInfo Child Element</H4>
<P class=statement><SPAN class=statement-id><A name=R5424>R5424</A></SPAN> Any
<SPAN class=statement-target>ENC_KEY_INFO</SPAN> MUST have exactly one child
element. </P></DIV>
<DIV class=refinement>
<H4 id=KeyInfo_SecurityTokenReference_Mandatory>9.6.2 KeyInfo
SecurityTokenReference Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The ds:KeyInfo element allows for many
different child elements. The Profile mandates a single element,
wsse:SecurityTokenReference, which is needed to reference security tokens.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5426>R5426</A></SPAN> Any
<SPAN class=statement-target>ENC_KEY_INFO</SPAN> MUST contain a child
SECURITY_TOKEN_REFERENCE. </P></DIV>
<H3 id=EncryptionDataReference>9.7 Encryption DataReference</H3>
<DIV class=refinement>
<H4 id=DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData>9.7.1
DataReference/@URI with Shorthand XPointer to EncryptedData</H4>
<P class=statement><SPAN class=statement-id><A name=R5608>R5608</A></SPAN> Any
<SPAN class=statement-target>ENC_DATA_REFERENCE</SPAN> MUST contain a URI
attribute containing a Shorthand XPointer reference value based on the Id
attribute of the referred to ENCRYPTED_DATA. </P></DIV>
<H3 id=EncryptedKeyDataReference>9.8 EncryptedKey DataReference</H3>
<DIV class=refinement>
<H4
id=EncryptedKey_DataReference/@URI_with_Shorthand_XPointer_to_EncryptedData>9.8.1
EncryptedKey DataReference/@URI with Shorthand XPointer to EncryptedData</H4>
<P class=statement><SPAN class=statement-id><A name=R3006>R3006</A></SPAN> Any
<SPAN class=statement-target>EK_DATA_REFERENCE</SPAN> MUST contain a URI
attribute containing a Shorthand XPointer reference value based on the Id
attribute of the referred to ENCRYPTED_DATA. </P></DIV>
<H3 id=EncryptionKeyReference>9.9 Encryption KeyReference</H3>
<DIV class=refinement>
<H4 id=KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey>9.9.1
KeyReference/@URI with Shorthand XPointer to EncryptedKey</H4>
<P class=statement><SPAN class=statement-id><A name=R5613>R5613</A></SPAN> Any
<SPAN class=statement-target>ENC_KEY_REFERENCE</SPAN> MUST contain a URI
attribute containing a Shorthand XPointer reference value based on the Id
attribute of the referred to ENCRYPTED_KEY. </P></DIV>
<H3 id=EncryptedKeyKeyReference>9.10 EncryptedKey KeyReference</H3>
<DIV class=refinement>
<H4
id=EncryptedKey_KeyReference/@URI_with_Shorthand_XPointer_to_EncryptedKey>9.10.1
EncryptedKey KeyReference/@URI with Shorthand XPointer to EncryptedKey</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The above requirements ensure that
Shorthand XPointer References are used where appropriate and that they refer to
the correct attribute values. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3007>R3007</A></SPAN> Any
<SPAN class=statement-target>EK_KEY_REFERENCE</SPAN> MUST contain a URI
attribute containing a Shorthand XPointer reference value based on the Id
attribute of the referred to ENCRYPTED_KEY. </P></DIV>
<H3 id=EncryptedDataEncryptionMethod>9.11 EncryptedData EncryptionMethod</H3>
<DIV class=refinement>
<H4 id=Data_Encryption_Algorithms>9.11.1 Data Encryption Algorithms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Data encryption algorithms are used for
encrypting elements and element content. Industries, organizations, and
application domains are currently choosing from a variety of data encryption
algorithms based on reasons including performance, security characteristics, and
regulatory compliance. A set of the most commonly chosen and widely deployed
data encryption algorithms are supported by the Basic Security Profile in order
to avoid disenfranchising existing applications. At some point in the future, if
and when consensus is reached for a single data encryption algorithm the Basic
Security Profile 1.1 may be revised to constrain instances to use only that
algorithm. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5620>R5620</A></SPAN> Any
<SPAN class=statement-target>ED_ENCRYPTION_METHOD</SPAN> Algorithm attribute
MUST have a value of "http://www.w3.org/2001/04/xmlenc#tripledes-cbc",
"http://www.w3.org/2001/04/xmlenc#aes128-cbc" or
"http://www.w3.org/2001/04/xmlenc#aes256-cbc" </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The 3DES algorithm
("http://www.w3.org/2001/04/xmlenc#tripledes-cbc") is widely implemented and
deployed in existing practice. The AES algorithm is relatively new and becoming
widely implemented and deployed. The 128-bit variation of AES
("http://www.w3.org/2001/04/xmlenc#aes128-cbc") is relatively faster but weaker
than the 256-bit variation ("http://www.w3.org/2001/04/xmlenc#aes256-cbc").
</P></DIV></DIV>
<H3 id=EncryptedKeyEncryptionMethod>9.12 EncryptedKey EncryptionMethod</H3>
<DIV class=refinement>
<H4 id=Key_Transport_Algorithms>9.12.1 Key Transport Algorithms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Key transport algorithms are used for
encrypting symmetric encryption keys, such as data encryption keys, with
asymmetric encryption keys. This technique allows for encryption of relatively
large amount of data with efficient symmetric encryption and securely
transmitting the associated relatively small symmetric encryption key.
Industries, organizations, and application domains are currently choosing from a
variety of key transport algorithms based on reasons including performance,
security characteristics, and regulatory compliance. A set of the most commonly
chosen and widely deployed key transport algorithms are supported by the Basic
Security Profile in order to avoid disenfranchising existing applications. At
some point in the future, if and when consensus is reached for a single key
transport algorithm the Basic Security Profile 1.1 may be revised to constrain
instances to use only that algorithm. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5621>R5621</A></SPAN> When
used for Key Transport, any <SPAN
class=statement-target>EK_ENCRYPTION_METHOD</SPAN> Algorithm attribute MUST have
a value of "http://www.w3.org/2001/04/xmlenc#rsa-1_5" or
"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p" </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The RSA (PKCS#1.5) algorithm
("http://www.w3.org/2001/04/xmlenc#rsa-1_5") is widely implemented and deployed
in existing practice. The RSA-OAEP algorithm
("http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p") is relatively new and
becoming widely implemented and deployed. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Key_Wrap_Algorithms>9.12.2 Key Wrap Algorithms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Key wrap algorithms are used for
encrypting symmetric encryption keys, such as data encryption keys, with
symmetric encryption keys. Industries, organizations, and application domains
are currently choosing from a variety of key wrap algorithms based on reasons
including performance, security characteristics, and regulatory compliance. A
set of the most commonly chosen and widely deployed key wrap algorithms are
supported by the Basic Security Profile in order to avoid disenfranchising
existing applications. At some point in the future, if and when consensus is
reached for a single key wrap algorithm the Basic Security Profile 1.1 may be
revised to constrain instances to use only that algorithm. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5625>R5625</A></SPAN> When
used for Key Wrap, any <SPAN class=statement-target>EK_ENCRYPTION_METHOD</SPAN>
Algorithm attribute MUST have a value of
"http://www.w3.org/2001/04/xmlenc#kw-tripledes",
"http://www.w3.org/2001/04/xmlenc#kw-aes128", or
"http://www.w3.org/2001/04/xmlenc#kw-aes256". </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The 3DES algorithm
("http://www.w3.org/2001/04/xmlenc#kw-tripledes") is widely implemented and
deployed in existing practice. The AES algorithm is relatively new and becoming
widely implemented and deployed. The 128-bit variation of AES
("http://www.w3.org/2001/04/xmlenc#kw-aes128") is relatively faster but weaker
than the 256-bit variation ("http://www.w3.org/2001/04/xmlenc#kw-aes256").
</P></DIV></DIV>
<DIV class=refinement>
<H4 id=Key_Encryption_Algorithms>9.12.3 Key Encryption Algorithms</H4>
<P class=statement><SPAN class=statement-id><A name=R5626>R5626</A></SPAN> Any
<SPAN class=statement-target>EK_ENCRYPTION_METHOD</SPAN> Algorithm attribute
MUST have a value of "http://www.w3.org/2001/04/xmlenc#rsa-1_5" or
"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p" or
"http://www.w3.org/2001/04/xmlenc#kw-tripledes" or
"http://www.w3.org/2001/04/xmlenc#kw-aes128" or
"http://www.w3.org/2001/04/xmlenc#kw-aes256". </P></DIV>
<H3 id=EncryptedHeaders>9.13 Encrypted Headers</H3>
<DIV class=refinement>
<H4 id=Encrypted_Headers>9.13.1 Encrypted Headers</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>In order for the data to be protected
from inspection, it must be replaced with the corresponding encrypted content.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5614>R5614</A></SPAN> A
<SPAN class=statement-target>HEADER</SPAN> encrypted as a result of an
encryption step MUST be replaced by a corresponding ENCRYPTED_HEADER. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R5606>R5606</A></SPAN> Any
encrypted element or element content within a <SPAN
class=statement-target>SECURE_ENVELOPE</SPAN>, encrypted as a result of an
encryption step, MUST be replaced by a corresponding ENCRYPTED_DATA, unless the
element is a HEADER_ELEMENT. <SPAN class=statement-type>C</SPAN></P></DIV>
<H2 id=BinarySecurityTokens>10. Binary Security Tokens</H2>
<H3 id=WSSST>10.1 Binary Security Tokens</H3>
<DIV class=refinement>
<H4 id=BinarySecurityToken/@EncodingType_Attribute_Mandatory>10.1.1
BinarySecurityToken/@EncodingType Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Base64Binary is the only encoding type
specified by Web Services Security: SOAP Message Security. Explicit
specification of attribute values simplifies XML processing requirements and as
a general principle the Basic Security Profile 1.1 requires that attributes be
explicitly specified rather than relying on default values. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3029>R3029</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> MUST specify an
EncodingType attribute. </P>
<P class=statement><SPAN class=statement-id><A name=R3030>R3030</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> EncodingType attribute
MUST have a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary".
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>A BinarySecurityToken may specify its
encoding type. The Profile restricts the encoding type to Base64Binary and
requires its explicit specification. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:BinarySecurityToken element is missing an EncodingType attribute --&gt;
&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0##X509v3"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                          EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=BinarySecurityToken/@ValueType_Attribute_Mandatory>10.1.2
BinarySecurityToken/@ValueType Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>There is no appropriate default for
ValueType so the Basic Security Profile 1.1 mandates that an explicit value be
provided. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R3031>R3031</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> MUST specify an
ValueType attribute. </P>
<P class=statement><SPAN class=statement-id><A name=R3032>R3032</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> ValueType attribute
MUST have a value specified by the related security token profile. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security allows for a BinarySecurityToken to optionally specify its ValueType.
The Profile restricts the ValueType to one of those specified by a security
token profile and requires its specification. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:BinarySecurityToken element is missing a ValueType attribute --&gt;
&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the ValueType attribute on the wsse:BinarySecurityToken element has an incorrect value. --&gt;
&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          ValueType="http://www.mta.org/NYC#SubwayToken"
                          EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:BinarySecurityToken wsu:Id='SomeCert'
                          ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3"
                          EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
lui+Jy4WYKGJW5xM3aHnLxOpGVIpzSg4V486hHFe7sHET/uxxVBovT7JV1A2RnWSWkXm9jAEdsm/...
&lt;/wsse:BinarySecurityToken&gt;
</PRE></DIV></DIV>
<H2 id=UsernameToken>11. Username Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16782/wss-v1.1-spec-os-UsernameTokenProfile.pdf">Web
  Services Security: UsernameToken Profile 1.1 OASIS Standard Specification, 1
  February 2006</A></LI></UL>
<H3 id=Password>11.1 Password</H3>
<DIV class=refinement>
<H4 id=Not_More_Than_One_Password>11.1.1 Not More Than One Password</H4>
<P class=statement><SPAN class=statement-id><A name=R4222>R4222</A></SPAN> Any
<SPAN class=statement-target>USERNAME_TOKEN</SPAN> MUST NOT have more than one
PASSWORD. </P></DIV>
<DIV class=refinement>
<H4 id=Password/@Type_Attribute_Mandatory>11.1.2 Password/@Type Attribute
Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Passwords may be present in a variety of
formats. The Type attribute specifies the format of the Password value.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R4201>R4201</A></SPAN> Any
<SPAN class=statement-target>PASSWORD</SPAN> MUST specify a Type attribute. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>To avoid ambiguity, the Type attribute
must be specified on the wsse:Password element of a wsse:UsernameToken.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:Password element is missing a Type attribute with a value of
     http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText --&gt;
&lt;wsse:UsernameToken
   xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd' &gt;
   &lt;wsse:Username&gt;Bert&lt;/wsse:Username&gt;
   &lt;wsse:Password&gt;Ernie&lt;/wsse:Password&gt;
&lt;/wsse:UsernameToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;
&lt;!-- This example is incorrect because the wsse:Password element is missing a Type attribute with a value of
     http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest --&gt;
&lt;wsse:UsernameToken
   xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd' &gt;
   &lt;wsse:Username&gt;Bert&lt;/wsse:Username&gt;
   &lt;wsse:Password&gt;B5twk47KwSrjeg==&lt;/wsse:Password&gt;
&lt;/wsse:UsernameToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:UsernameToken
   xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd' &gt;
   &lt;wsse:Username&gt;Bert&lt;/wsse:Username&gt;
   &lt;wsse:Password
      Type='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText'&gt;
      Ernie
   &lt;/wsse:Password&gt;
&lt;/wsse:UsernameToken&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:UsernameToken xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd' &gt;
   &lt;wsse:Username&gt;Bert&lt;/wsse:Username&gt;
   &lt;wsse:Password
      Type='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest'&gt;
      B5twk47KwSrjeg==
   &lt;/wsse:Password&gt;
&lt;/wsse:UsernameToken&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Digest_Value>11.1.3 Digest Value</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications specify a
Type value for password digests but there is ambiguity in the algorithm to be
used to calculate the digest. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R4212>R4212</A></SPAN> Any
<SPAN class=statement-target>PASSWORD</SPAN> with a Type attribute value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest"
MUST have its value computed using the following formula, where "+" indicates
concatenation: Password_Digest = Base64 ( SHA-1 ( nonce + created + password )
). That is, concatenate the text forms of the nonce, creation time, and the
password (or shared secret or password equivalent), digest the combination using
the SHA-1 hash algorithm, then include the Base64 encoding of that result as the
password (digest). Any elements that are not present are simply omitted from the
concatenation. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile describes the digest
calculation details to eliminate ambiguity. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Key_Derivation>11.1.4 Key Derivation</H4>
<P class=statement><SPAN class=statement-id><A name=R4216>R4216</A></SPAN> When
a <SPAN class=statement-target>SECURITY_TOKEN</SPAN>_REFERENCE, within a
SIGNATURE or ENCRYPTED_KEY, refers to a SECURITY_TOKEN named wsse:UsernameToken
to derive a key, the key MUST be derived using the algorithm specified in
Section 4 of Web Services Security: UsernameToken Profile 1.1. </P>
<P class=statement><SPAN class=statement-id><A name=R4217>R4217</A></SPAN> When
a <SPAN class=statement-target>SECURITY_TOKEN</SPAN>_REFERENCE, within a
SIGNATURE or ENCRYPTED_KEY, refers to a SECURITY_TOKEN named wsse:UsernameToken
to derive a key, the SECURITY_TOKEN MUST contain a wsse11:Salt child element.
</P>
<P class=statement><SPAN class=statement-id><A name=R4218>R4218</A></SPAN> When
a <SPAN class=statement-target>SECURITY_TOKEN</SPAN>_REFERENCE, within a
SIGNATURE or ENCRYPTED_KEY, refers to a SECURITY_TOKEN named wsse:UsernameToken
to derive a key, the SECURITY_TOKEN MUST contain a wsse11:Iteration child
element with a value greater than or equal to 1000. </P></DIV>
<H3 id=UsernameTokenCreated>11.2 Created</H3>
<DIV class=refinement>
<H4 id=Not_More_Than_One_Created>11.2.1 Not More Than One Created</H4>
<P class=statement><SPAN class=statement-id><A name=R4223>R4223</A></SPAN> Any
<SPAN class=statement-target>USERNAME_TOKEN</SPAN> MUST NOT have more than one
CREATED. </P></DIV>
<H3 id=UsernameTokenNonce>11.3 Nonce</H3>
<DIV class=refinement>
<H4 id=Not_More_Than_One_Nonce>11.3.1 Not More Than One Nonce</H4>
<P class=statement><SPAN class=statement-id><A name=R4225>R4225</A></SPAN> Any
<SPAN class=statement-target>USERNAME_TOKEN</SPAN> MUST NOT have more than one
NONCE. </P></DIV>
<DIV class=refinement>
<H4 id=Nonce/@EncodingType_Attribute_Mandatory>11.3.2 Nonce/@EncodingType
Attribute Mandatory</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Base64Binary is the only encoding type
specified by Web Services Security: SOAP Message Security. Explicit
specification of attribute values simplifies XML processing requirements and as
a general principle the Basic Security Profile 1.1 requires that attributes be
explicitly specified rather than relying on default values. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R4220>R4220</A></SPAN> Any
<SPAN class=statement-target>NONCE</SPAN> MUST specify an EncodingType
attribute. </P>
<P class=statement><SPAN class=statement-id><A name=R4221>R4221</A></SPAN> Any
<SPAN class=statement-target>NONCE</SPAN> EncodingType attribute MUST have a
value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary".
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>A UsernameToken may specify its encoding
type. The Profile restricts the encoding type to Base64Binary and requires its
explicit specification. </P></DIV></DIV>
<H3 id=UsernameTokenSTR>11.4 SecurityTokenReference</H3>
<DIV class=refinement>
<H4 id=UsernameToken_wsse111_TokenType_Value>11.4.1 UsernameToken
wsse111:TokenType Value</H4>
<P class=statement><SPAN class=statement-id><A name=R4219>R4219</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a USERNAME_TOKEN
MUST have a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#UsernameToken".
</P></DIV>
<DIV class=refinement>
<H4 id=UsernameToken_Reference/@ValueType_Attribute_Value>11.4.2 UsernameToken
Reference/@ValueType Attribute Value</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications do not
fully describe the proper ValueType for UsernameToken. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R4214>R4214</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a USERNAME_TOKEN MUST have
a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#UsernameToken".
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile requires a specific value for
the ValueType. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=UsernameToken_KeyIdentifier_Prohibited>11.4.3 UsernameToken KeyIdentifier
Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications do not
describe a mechanism for generating a KeyIdentifier for a UsernameToken.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R4215>R4215</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a USERNAME_TOKEN
MUST NOT contain an STR_KEY_IDENTIFIER. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile disallows the use of
unspecified mechanisms for generation of KeyIdentifier values. </P></DIV></DIV>
<H2 id=x509token>12. X.509 Certificate Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference, and defines extensibility points within them: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16785/wss-v1.1-spec-os-x509TokenProfile.pdf">Web
  Services Security: X.509 Certificate Token Profile 1.1 OASIS Standard
  Specification, 1 February 2006</A>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2459.txt">RFC2459:
  Internet X.509 Public Key Infrastructure Certificate and CRL
  Profile</A><BR>Extensibility points:
  <UL>
    <LI><SPAN class=statement-id id=E0012>E0012</SPAN> - Certificate Authority -
    The choice of the Certificate Authority is a private agreement between
    parties.
    <LI><SPAN class=statement-id id=E0013>E0013</SPAN> - Certificate Extensions
    - X.509 allows for arbitrary certificate extensions.</LI></UL>
  <LI><A class=offsite
  href="http://www.itu.int/rec/recommendation.asp?type=items&amp;lang=e&amp;parent=T-REC-X.509-200110-I!Cor1">Information
  technology "Open Systems Interconnection" The Directory: Public-key and
  attribute certificate frameworks Technical Corrigendum 1</A></LI></UL>
<H3 id=x509tokentypes>12.1 X.509 Token Types</H3>
<P><SPAN class=statement-target></SPAN>In some areas the Basic Security Profile
allows limited flexibility and extensibility in the application of security to
messages. Some agreement between the SENDER and RECEIVER over which mechanisms
and choices should be used for message exchanges is necessary. Since no security
policy description language or negotiation mechanism is in scope for the Basic
Security Profile, some out of band agreement must be reached for which
certificate extensions and issuers should be used. </P>
<P><SPAN class=statement-target></SPAN>Web Services Security: X.509 Token
Profile defines 3 token types: X509v3; x509PKIPathv1; and PKCS7. The Profile
places the following constraints on their use: </P>
<DIV class=refinement>
<H4 id=X.509_Token_Format>12.1.1 X.509 Token Format</H4>
<P class=statement><SPAN class=statement-id><A name=R3033>R3033</A></SPAN> Any
<SPAN class=statement-target>X509_TOKEN</SPAN> MUST contain a ValueType
attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3".
</P></DIV>
<DIV class=refinement>
<H4 id=Certificate_Path_Token_Types>12.1.2 Certificate Path Token Types</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications allow
certificate path information to be provided via either X509PKIPathv1 or PKCS7
formats. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5201>R5201</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> containing an X.509
Certificate Path MUST be either a PKCS7_TOKEN or a PKIPATH_TOKEN. </P>
<P class=statement><SPAN class=statement-id><A name=R5202>R5202</A></SPAN> Any
<SPAN class=statement-target>BINARY_SECURITY_TOKEN</SPAN> containing an X.509
Certificate Path SHOULD be a PKIPATH_TOKEN. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Interoperability issues may arise if
different forms of certificate path information are used when not expected.
X509PKIPathv1 is preferred because it allows more efficient certificate path
processing. PKCS7 is a more mature and widely implemented standard so it is also
allowed. Section 3.1 of X.509 Token Profile incorrectly defines #X509PKIPathv1
as a PKIPath. Section 3.1 should define #X509PKIPathv1 as a PkiPath (note case),
which X.509 defect report 279 defines as an ordered collection of certificates
beginning with the most significant. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=PKCS7_Token_Format>12.1.3 PKCS7 Token Format</H4>
<P class=statement><SPAN class=statement-id><A name=R5211>R5211</A></SPAN> Any
<SPAN class=statement-target>PKCS7_TOKEN</SPAN> MUST contain a ValueType
attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#PKCS7".
</P></DIV>
<H3 id=X509TokenSTR>12.2 SecurityTokenReference</H3>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_X.509_Token>12.2.1 SecurityTokenReference to
X.509 Token</H4>
<P class=statement><SPAN class=statement-id><A name=R5217>R5217</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a X509_TOKEN
MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3".
</P>
<P class=statement><SPAN class=statement-id><A name=R5218>R5218</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a X509_TOKEN MUST contain a
ValueType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3".
</P></DIV>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_PKCS7_Token>12.2.2 SecurityTokenReference to
PKCS7 Token</H4>
<P class=statement><SPAN class=statement-id><A name=R5212>R5212</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a PKCS7_TOKEN
MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#PKCS7".
</P>
<P class=statement><SPAN class=statement-id><A name=R5213>R5213</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a PKCS7_TOKEN MUST contain
a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#PKCS7".
</P></DIV>
<DIV class=refinement>
<H4 id=PkiPath_Token_Format>12.2.3 PkiPath Token Format</H4>
<P class=statement><SPAN class=statement-id><A name=R5214>R5214</A></SPAN> Any
PKIPATH_TOKEN MUST contain a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509PKIPathv1".
</P></DIV>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_PkiPath_Token>12.2.4 SecurityTokenReference to
PkiPath Token</H4>
<P class=statement><SPAN class=statement-id><A name=R5215>R5215</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a PKIPATH_TOKEN
MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509PKIPathv1".
</P>
<P class=statement><SPAN class=statement-id><A name=R5216>R5216</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a PKIPATH_TOKEN MUST
contain a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509PKIPathv1".
</P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier_or_X509IssuerSerial_for_External_References>12.2.5
KeyIdentifier or X509IssuerSerial for External References</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security provides a list of reference mechanisms in preferred order (i.e., most
specific to least specific). Direct References are preferred, but when they
cannot be used Key Identifier or Issuer and Serial Number is required.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5209>R5209</A></SPAN> When
a <SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> references an
EXTERNAL_SECURITY_TOKEN that cannot be referred to using an STR_REFERENCE but
can be referred to using an STR_KEY_IDENTIFIER or STR_ISSUER_SERIAL, an
STR_KEY_IDENTIFIER or STR_ISSUER_SERIAL MUST be used. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>In the event that Direct References are
not possible, the Basic Security Profile 1.1 encourages the usage of mechanisms
that are most likely to be unique. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"
                       ValueType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier" &gt;
      MIGfMa0GCSq
   &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference&gt;
   &lt;ds:X509Data&gt;
      &lt;ds:X509IssuerSerial&gt;
         &lt;ds:X509IssuerName&gt;CN=Security WG, OU=BSP, O=WS-I, C=US&lt;/ds:X509IssuerName&gt;
         &lt;ds:X509SerialNumber&gt;54A4E9&lt;/ds:X509SerialNumber&gt;
      &lt;/ds:X509IssuerSerial&gt;
   &lt;/ds:X509Data&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier/@ValueType_Attribute_Value>12.2.6 KeyIdentifier/@ValueType
Attribute Value</H4>
<P class=statement><SPAN class=statement-id><A name=R5206>R5206</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references an
X509_TOKEN MUST have a ValueType attribute with the value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509SubjectKeyIdentifier"
or
"http://docs.oasis-open.org/wss/oasis-wss-soap-message-security-1.1#ThumbprintSHA1".
</P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier_Value>12.2.7 KeyIdentifier Value</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The underlying specifications do not
fully describe the proper ValueType for X.509 SubjectKeyIdentifier. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R5208>R5208</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references an
X509_TOKEN MUST contain the value of the token's SubjectKeyIdentifier extension.
</P>
<P class=statement><SPAN class=statement-id><A name=R5210>R5210</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to an X509_TOKEN
that does not contain a SubjectKeyIdentifier extension MUST NOT contain an
STR_KEY_IDENTIFIER. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>The Profile requires a specific value for
the ValueType. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=X509IssuerSerial_Value>12.2.8 X509IssuerSerial Value</H4>
<P class=statement><SPAN class=statement-id><A name=R5409>R5409</A></SPAN> Any
<SPAN class=statement-target>STR_ISSUER_SERIAL</SPAN> MUST contain a value
following the encoding rules specified in the XML Signature specification for
DNames. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Per XML Signature, DNames are encoded as
follows:</P>
<UL>
  <LI><SPAN class=statement-target></SPAN>Consider the string as consisting of
  Unicode characters.
  <LI><SPAN class=statement-target></SPAN>Escape occurrences of the following
  special characters by prefixing it with the "\" character:
  <UL>
    <LI><SPAN class=statement-target></SPAN>a "#" character occurring at the
    beginning of the string
    <LI><SPAN class=statement-target></SPAN>one of the characters ",", "+", """,
    "\", "&lt;", "&gt;" or ";" </LI></UL>
  <LI><SPAN class=statement-target></SPAN>Escape all occurrences of ASCII
  control characters (Unicode range \x00 - \x1f) by replacing them with "\"
  followed by a two digit hex number showing its Unicode number.
  <LI><SPAN class=statement-target></SPAN>Escape any trailing white space by
  replacing "\ " with "\20".
  <LI><SPAN class=statement-target></SPAN>Since a XML document logically
  consists of characters, not octets, the resulting Unicode string is finally
  encoded according to the character encoding used for producing the physical
  representation of the XML document. </LI></UL></DIV></DIV>
<H2 id=RELToken>13. REL Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16687/oasis-wss-rel-token-profile-1.1.pdf">Web
  Services Security: Rights Expression Language (REL) Token Profile 1.1 OASIS
  Standard: 1 February 2006</A></LI></UL>
<H3 id=RELTokenSTR>13.1 SecurityTokenReferences</H3>
<P><SPAN class=statement-target></SPAN>Web Services Security: Rights Expression
Language (REL) Token Profile Section 3.4 defines several mechanisms for
referencing REL tokens. This Profile places the following constraints on their
use: </P>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_REL_Token>13.1.1 SecurityTokenReference to REL
Token</H4>
<P class=statement><SPAN class=statement-id><A name=R6303>R6303</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a REL_TOKEN MUST
contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license".
</P>
<P class=statement><SPAN class=statement-id><A name=R6304>R6304</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a REL_TOKEN MUST contain a
ValueType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license".
</P></DIV>
<DIV class=refinement>
<H4 id=Reference_by_licenseId_Prohibited_When_wsu_Id_Present>13.1.2 Reference by
licenseId Prohibited When wsu:Id Present</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Direct references by shorthand XPointer
are easier to resolve than references by licenseId. Using such references is
consistent with constraints on other token types. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6301>R6301</A></SPAN> Any
<SPAN class=statement-target>STR_REFERENCE</SPAN> to a INTERNAL_SECURITY_TOKEN
that is an REL_TOKEN containing a wsu:Id attribute, MUST NOT use a licenseId
reference. </P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;rel:license xmlns:rel='urn:mpeg:mpeg21:2003:01-REL-R-NS'
              wsu:Id='SomeLic'
              licenseId='uuid:3D680C71-177B-40cc-84C1-123B02503524' &gt;
 . . .
 &lt;/rel:license&gt;
 &lt;ds:Signature&gt;
   . . .
   &lt;ds:KeyInfo&gt;
    &lt;wsse:SecurityTokenReference&gt;
     &lt;wsse:Reference
       URI='#SomeLic'
       ValueType="http://docs.oasis-open.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license" /&gt;
    &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
 &lt;/ds:Signature&gt;
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it refers to REL License using the
     value of the licenseId attribute rather than the value of the wsu:Id attribute --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
 &lt;rel:license xmlns:rel='urn:mpeg:mpeg21:2003:01-REL-R-NS'
              wsu:Id='SomeLic'
              licenseId='uuid:3D680C71-177B-40cc-84C1-123B02503524' &gt;
 . . .
 &lt;/rel:license&gt;
 &lt;ds:Signature&gt;
   . . .
   &lt;ds:KeyInfo&gt;
    &lt;wsse:SecurityTokenReference&gt;
     &lt;wsse:Reference
       URI='uuid:3D680C71-177B-40cc-84C1-123B02503524'
       ValueType="http://docs.oasis-open.org/wss/oasis-wss-rel-token-profile-1.0.pdf#license" /&gt;
    &lt;/wsse:SecurityTokenReference&gt;
   &lt;/ds:KeyInfo&gt;
 &lt;/ds:Signature&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Issuer_Signature_on_REL_Token_Precedes_First_Reference>13.1.3 Issuer
Signature on REL Token Precedes First Reference</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>This requirement ensures that the
integrity and provenance of the license has been determined prior to use.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6302>R6302</A></SPAN> Any
<SPAN class=statement-target>SECURITY_HEADER</SPAN> child elements MUST be
ordered so that any SIGNATURE necessary to verify the issuance of an REL_TOKEN
precedes the first SECURITY_TOKEN_REFERENCE that refers to that REL_TOKEN.
</P></DIV>
<H2 id=KerberosToken>14. Kerberos Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16788/wss-v1.1-spec-os-KerberosTokenProfile.pdf">Web
  Services Security: Kerberos Token Profile 1.1 OASIS Standard Specification, 1
  February 2006</A></LI></UL>
<H3 id=KerberosTokenContent>14.1 Content</H3>
<P><SPAN class=statement-target></SPAN>Web Services Security: Kerberos Token
Profile contains various statements containing the RFC2119 'MUST' keyword. This
Profile restates some of those statements: </P>
<DIV class=refinement>
<H4 id=Kerberos_Token_Format>14.1.1 Kerberos Token Format</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>There is no appropriate default for
ValueType in a wsse:BinarySecurityToken, so Basic Security Profile mandates that
an explicit value be provided. Web Services Security: Kerberos Token Profile
defines six token types. Although ValueType URIs are defined for each, the
option can discourage interoperability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6902>R6902</A></SPAN> Any
<SPAN class=statement-target>KERBEROS_TOKEN</SPAN> MUST contain a ValueType
attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ"
</P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>Web Services Security: SOAP Message
Security allows for a BinarySecurityToken to optionally specify its ValueType.
The Profile restricts the ValueType to GSS wrapped tickets to promote
interoperability. </P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it contains no ValueType attribute in the SECURITY_TOKEN --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id="myKerberosToken"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
                             YIIEZzCCA9CgAwIBAgIQEmtJZc0...
   &lt;/wsse:BinarySecurityToken&gt;
...
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because it includes a ValueType attribute indicating that it is a non-wrapped
     Kerberos v5 AP-REQ --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id="myKerberosToken"
                             ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#Kerberosv5_AP_REQ"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
                             boIEZzCCA9CgAwIBAgIQEmtJZc0...
   &lt;/wsse:BinarySecurityToken&gt;
...
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;!-- This example is correct because it includes a ValueType attribute with a value specified in the profile. In this case, it
     indicates that it is a GSS wrapped Kerberos v5 AP-REQ --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id="myKerberosToken"
                             ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
                             YIIEZzCCA9CgAwIBAgIQEmtJZc0...
   &lt;/wsse:BinarySecurityToken&gt;
...
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=Internal_Token_in_First_Message>14.1.2 Internal Token in First
Message</H4>
<P class=statement><SPAN class=statement-id><A name=R6903>R6903</A></SPAN> Any
<SPAN class=statement-target>KERBEROS_TOKEN</SPAN> MUST be an
INTERNAL_SECURITY_TOKEN in the initial SECURE_ENVELOPE of an authenticated
message exchange between a SENDER and RECEIVER. </P></DIV>
<DIV class=refinement>
<H4 id=External_Token_in_Subsequent_Messages>14.1.3 External Token in Subsequent
Messages</H4>
<P class=statement><SPAN class=statement-id><A name=R6904>R6904</A></SPAN> Any
<SPAN class=statement-target>KERBEROS_TOKEN</SPAN> MUST be an
EXTERNAL_SECURITY_TOKEN in each SECURE_ENVELOPE after the initial
SECURE_ENVELOPE of an authenticated message exchange between a SENDER and
RECEIVER. </P></DIV>
<H3 id=KerberosSTR>14.2 SecurityTokenReference</H3>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_Kerberos_Token>14.2.1 SecurityTokenReference to
Kerberos Token</H4>
<P class=statement><SPAN class=statement-id><A name=R6907>R6907</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a KERBEROS_TOKEN
MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ".
</P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier_ValueType_for_Kerberos>14.2.2 KeyIdentifier ValueType for
Kerberos</H4>
<P class=statement><SPAN class=statement-id><A name=R6906>R6906</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> to a KERBEROS_TOKEN MUST
contain a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-kerberos-tokenprofile-1.1#Kerberosv5APREQSHA1".
</P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier_for_External_Token>14.2.3 KeyIdentifier for External
Token</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Kerberos provides a security session
mechanism where the first secure envelope in an authenticated message exchange
contains the kerberos token, and subsequent secure envelopes can make reference
to this token. Thus, the same kerberos token may be referred to as an internal
or external token, depending on its order in an authenticated message exchange.
This ambiguity could cause interoperability problems. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6905>R6905</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to an
EXTERNAL_SECURITY_TOKEN which is a KERBEROS_TOKEN MUST contain an
STR_KEY_IDENTIFIER. </P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>This clarifies the referencing mechanism,
depending on whether this is the first exchanged using a token, or is a
subsequent message that makes reference to an earlier exchanged token.
</P></DIV>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the external reference is direct instead of using a wsse:KeyIdentifier.  --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;

   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI="http://www.ws-i.org/Kerberos/Examples/kerberosToken.b64"
                      ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ"/&gt;
   &lt;/wsse:SecurityTokenReference&gt;
   ...
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;!-- This example is correct for the initial SECURE_ENVELOPE of an authenticated message exchange. --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:BinarySecurityToken wsu:Id="myKerberosToken"
                             ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ"
                             EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"&gt;
                             YIIEZzCCA9CgAwIBAgIQEmtJZc0...
   &lt;/wsse:BinarySecurityToken&gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:Reference URI="#myKerberosToken"
                      ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ"/&gt;
   &lt;/wsse:SecurityTokenReference&gt;
...
&lt;/wsse:Security&gt;
</PRE></DIV>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;!-- This example is correct for any SECURE_ENVELOPE after the initial SECURE_ENVELOPE of an authenticated message exchange.  --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
   &lt;wsse:SecurityTokenReference&gt;
      &lt;wsse:KeyIdentifier EncodingType="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary"
                          ValueType="http://docs.oasis-open.org/wss/oasis-wss-kerberos-tokenprofile-1.1#Kerberosv5APREQSHA1"/&gt;
         EZzCCA9CgAwIB...
      &lt;/wsse:KeyIdentifier&gt;
   &lt;/wsse:SecurityTokenReference&gt;
...
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<H2 id=SAMLToken>15. SAML Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16768/wss-v1.1-spec-os-SAMLTokenProfile.pdf">Web
  Services Security: SAML Token Profile 1.1 OASIS Standard, 1 February
  2006</A></LI></UL>
<H3 id=SAMLKeyInfo>15.1 KeyInfo</H3>
<DIV class=refinement>
<H4 id=References_to_SAML_Tokens_Prohibited>15.1.1 References to SAML Tokens
Prohibited</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>This requirement rules out the
possibility of a SAML assertion referring to itself, an undesirable occurrence
as it essentially makes the assertion self certifying. In addition a reference
to another SAML assertion is also ruled out, this is undesirable as SAML does
not have a transitive trust model. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6601>R6601</A></SPAN> Any
<SPAN class=statement-target>SAML_SC_KEY_INFO</SPAN> MUST NOT contain a
reference to a SAML_TOKEN. <SPAN class=statement-type>C</SPAN></P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the ds:KeyInfo in the SAML assertion contains a reference to another such assertion thus conflicting with R6601 --&gt;
&lt;wsse:Security xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
               xmlns:wsu='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd'
               xmlns:xenc='http://www.w3.org/2001/04/xmlenc#'
               xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
  &lt;saml:Assertion xmlns:saml='urn:oasis:names:tc:SAML:1.0:assertion'
                  MajorVersion='1' MinorVersion='1'
                  AssertionID='uuid:006ab385-35e0-41b1-b0f5-ccef5090c1b0'
                  Issuer='http://example.org/issuer' IssueInstant='2004-11-04T21:01:50Z' &gt;
    . . .
    &lt;saml:AuthenticationStatement AuthenticationMethod='urn:oasis:names:tc:SAML:1.0:am:password' AuthenticationInstant='2004-11-04T21:01:50Z' &gt;
      &lt;saml:Subject&gt;
        . . .
        &lt;saml:SubjectConfirmation&gt;
          . . .
          &lt;ds:KeyInfo xmlns:ds='http://www.w3.org/2000/09/xmldsig#' &gt;
            &lt;wsse:SecurityTokenReference&gt;
              &lt;wsse:Reference URI='uuid:a9afffbe-a0fb-4789-8b54-299782c3c0ac'
                              ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID' /&gt;
            &lt;/wsse:SecurityTokenReference&gt;
          &lt;/ds:KeyInfo&gt;
        &lt;/saml:SubjectConfirmation&gt;
      &lt;/saml:Subject&gt;
    &lt;/saml:AuthenticationStatement&gt;
	. . .
  &lt;/saml:Assertion&gt;
&lt;/wsse:Security&gt;
</PRE></DIV></DIV>
<H3 id=SAMLSTR>15.2 SecurityTokenReference</H3>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_SAML_V1.1_Token>15.2.1 SecurityTokenReference
to SAML V1.1 Token</H4>
<P class=statement><SPAN class=statement-id><A name=R6611>R6611</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a
SAML_V1_1_TOKEN MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1".
</P></DIV>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_SAML_V2.0_Token>15.2.2 SecurityTokenReference
to SAML V2.0 Token</H4>
<P class=statement><SPAN class=statement-id><A name=R6617>R6617</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a
SAML_V2_0_TOKEN MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV2.0". </P>
<P class=statement><SPAN class=statement-id><A name=R6614>R6614</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
INTERNAL_SAML_V2_0_TOKEN using a STR_REFERENCE MUST NOT contain a ValueType
attribute. </P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier/@ValueType_Attribute>15.2.3 KeyIdentifier/@ValueType
Attribute</H4>
<P class=statement><SPAN class=statement-id><A name=R6602>R6602</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references a
INTERNAL_SAML_TOKEN MUST include a ValueType attribute. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6609>R6609</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references a
EXTERNAL_SAML_TOKEN MUST include a ValueType attribute. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6603>R6603</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> ValueType attribute that
references a SAML_V1_1_TOKEN MUST have a value of
"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID"
<SPAN class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6616>R6616</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> ValueType attribute that
references a SAML_V2_0_TOKEN MUST have a value of
"http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID" <SPAN
class=statement-type>C</SPAN></P></DIV>
<DIV class=refinement>
<H4 id=KeyIdentifier/@EncodingType_Attribute>15.2.4 KeyIdentifier/@EncodingType
Attribute</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>These requirements restate various
statements from the base specification related to references to SAML assertions
that use wsse:KeyIdentifiers. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6604>R6604</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references a
SAML_TOKEN MUST NOT include an EncodingType attribute. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6605>R6605</A></SPAN> Any
<SPAN class=statement-target>STR_KEY_IDENTIFIER</SPAN> that references a
SAML_TOKEN MUST have a value encoded as an xs:string. <SPAN
class=statement-type>C</SPAN></P>
<P class=example-banner>For example,</P>
<DIV class=example>
<P class=correct>CORRECT: </P><PRE>&lt;wsse:SecurityTokenReference xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'&gt;
  &lt;wsse:KeyIdentifier ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID' &gt;
  uuid:006ab385-35e0-41b1-b0f5-ccef5090c1b0
  &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:KeyIdentifier element is missing a ValueType attribute thus conflicting with R6602 --&gt;
&lt;wsse:SecurityTokenReference xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'&gt;
  &lt;wsse:KeyIdentifier&gt;uuid:006ab385-35e0-41b1-b0f5-ccef5090c1b0&lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:KeyIdentifier element has an incorrect value for the ValueType attribute thus conflicting with R6603 --&gt;
&lt;wsse:SecurityTokenReference xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'&gt;
  &lt;wsse:KeyIdentifier ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAML'&gt;
  uuid:006ab385-35e0-41b1-b0f5-ccef5090c1b0
  &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV>
<DIV class=example>
<P class=incorrect>INCORRECT: </P><PRE>&lt;!-- This example is incorrect because the wsse:KeyIdentifier has an EncodingType attribute thus conflicting with R6604 --&gt;
&lt;wsse:SecurityTokenReference xmlns:wsse='http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'&gt;
  &lt;wsse:KeyIdentifier ValueType='http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.0#SAMLAssertionID'
                      EncodingType='xs:string' &gt;
  uuid:006ab385-35e0-41b1-b0f5-ccef5090c1b0
  &lt;/wsse:KeyIdentifier&gt;
&lt;/wsse:SecurityTokenReference&gt;
</PRE></DIV></DIV>
<DIV class=refinement>
<H4 id=References_to_Internal_SAML_Assertions>15.2.5 References to Internal SAML
Assertions</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Note that the Web Services Security: SAML
Token Profile explicitly allows use of a key identifier reference when a direct
reference is possible. This WS-I SAML Token Profile requires use of a direct or
embedded reference to increase interoperability. Tokentype and ValueType should
be consistent and disallowing use of ValueType removes the potential for error.
</P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6610>R6610</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
INTERNAL_SAML_TOKEN that has an ID attribute, the reference MUST contain an
STR_REFERENCE or an STR_EMBEDDED. <SPAN class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6612>R6612</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a SECURITY_TOKEN_REFERENCE
which contains an STR_EMBEDDED which contains an INTERNAL_SAML_V2_0_TOKEN MUST
NOT include a SIG_TRANSFORM with an Algorithm attribute value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform".
<SPAN class=statement-type>C</SPAN></P></DIV>
<DIV class=refinement>
<H4 id=References_to_External_SAML_Assertions>15.2.6 References to External SAML
Assertions</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>These requirements restate various
statements from the base specification related to references to SAML assertions
that are outside a SECURE_ENVELOPE. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6606>R6606</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
EXTERNAL_SAML_TOKEN MUST contain a SAML_AUTHORITY_BINDING. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6607>R6607</A></SPAN> Any
AuthorityKind attribute of a <SPAN
class=statement-target>SAML_AUTHORITY_BINDING</SPAN> MUST have a value of
saml:AssertionIdReference. <SPAN class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6608>R6608</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that references an
INTERNAL_SAML_TOKEN MUST NOT contain a SAML_AUTHORITY_BINDING. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=R6613>R6613</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to an
EXTERNAL_SAML_V2_0_TOKEN MUST contain an STR_REFERENCE. <SPAN
class=statement-type>C</SPAN></P></DIV>
<H2 id=EncryptedKeyToken>16. EncryptedKey Token</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">Web
  Services Security: SOAP Message Security 1.1 (WS-Security 2004) OASIS Standard
  Specification, 1 February 2006</A></LI></UL>
<H3 id=STR2EncryptedKey>16.1 SecurityTokenReference</H3>
<DIV class=refinement>
<H4 id=SecurityTokenReference_to_EncryptedKey_Token>16.1.1
SecurityTokenReference to EncryptedKey Token</H4>
<P class=statement><SPAN class=statement-id><A name=R3069>R3069</A></SPAN> Any
<SPAN class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> to a
ENCRYPTED_KEY_TOKEN MUST contain a wsse11:TokenType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-soap-messagesecurity-1.1#EncryptedKey".
</P>
<P class=statement><SPAN class=statement-id><A name=R3072>R3072</A></SPAN> Any
STR_KEY_IDENTIFIER element in a <SPAN
class=statement-target>SECURITY_TOKEN_REFERENCE</SPAN> that refers to an
ENCRYPTED_KEY_TOKEN MUST contain a ValueType attribute with a value of
"http://docs.oasis-open.org/wss/oasis-wss-soap-messagesecurity-1.1#EncryptedKeySHA1".
</P></DIV>
<H2 id=attachsec>17. Attachment Security</H2>
<P>This section of the Basic Security Profile 1.1 incorporates the following
specifications by reference: </P>
<UL>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/AttachmentsProfile-1.0.html">Attachments
  Profile Version 1.0 (AP1.0)</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16672/wss-v1.1-spec-os-SwAProfile.pdf">Web
  Services Security: SOAP Messages with Attachments (SwA) Profile 1.1, OASIS
  Standard, 1 February 2006</A></LI></UL>
<P><SPAN class=statement-target></SPAN>The section provides guidance for
protecting attachments when they are used with SOAP Messages. As is explained in
Section 3 Conformance all features described in the Basic Security Profile 1.0,
including support for attachments and security for attachments in any form by
any instance is not required. </P>
<P><SPAN class=statement-target></SPAN>SSL/TLS may be used to provide
authentication, integrity and confidentiality protection, on a hop-by-hop basis,
for an entire HTTP Message. This includes HTTP Headers, the SOAP Envelope, and
all MIME_PARTs. </P>
<P><SPAN class=statement-target></SPAN>SSL/TLS does not provide protection,
except between adjacent HTTP Nodes, for HTTP Messages when the SOAP Message Path
contains SOAP Intermediaries. An instance should not use SSL/TLS without Web
Services Security with Message Exchange Patterns (MEPs) that may contain SOAP
intermediaries or when these security functions are required to be performed
independently of the connection. </P>
<P><SPAN class=statement-target></SPAN>Web Services Security may be used to
provide authentication, integrity and confidentiality protection for a subset of
the SOAP Message and associated attachments. Web Services Security provides
protection for SOAP Messages and attachments when the SOAP Message Path contains
SOAP Intermediaries. An instance should use Web Services Security with MEPs that
may contain SOAP Intermediaries or when these security functions are required to
be performed independently of the transport layer connection. </P>
<P><SPAN class=statement-target></SPAN>An instance may use SSL/TLS in
conjunction with Web Services Security if warranted by application security
requirements. This combination provides integrity and confidentiality protection
for the entire HTTP Message (on a hop-by-hop basis) including HTTP Headers, SOAP
Envelope, and all MIME_PARTs. </P>
<P><SPAN class=statement-target></SPAN>Application level security mechanisms,
including XML Signature, XML Encryption, PKCS#7, S/MIME, etc. for attachment
data may also be used by a instance where appropriate, but statements regarding
the interoperability of such mechanisms are out of scope for the Basic Security
Profile 1.0. </P>
<P><SPAN class=statement-target></SPAN>The Basic Security Profile 1.0 describes
one attachment security mechanism and URI. </P>
<H3 id=swa>17.1 SOAP with Attachments</H3>
<P>The following specifications (or sections thereof) are referred to in this
section of the Basic Security Profile 1.1:</P>
<UL>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/AttachmentsProfile-1.0.html">Attachments
  Profile Version 1.0 (AP1.0)</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16672/wss-v1.1-spec-os-SwAProfile.pdf">Web
  Services Security: SOAP Messages with Attachments (SwA) Profile 1.1, OASIS
  Standard, 1 February 2006</A></LI></UL>
<DIV class=refinement>
<H4 id=Conformance>17.1.1 Conformance</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Basic Security Profile is an
extension profile to the Basic Profile, and thus this requirement makes it
explicit that when using the Web Services Security SwA profile in conformance to
the Basic Security Profile 1.1 SwA profile section that the messages containing
attachments must conform to the WS-I Attachments Profile 1.0. This is consistent
with the Web Services Security SwA profile and good practice. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6001>R6001</A></SPAN> Any
<SPAN class=statement-target>SECURE_MESSAGE</SPAN> MUST conform to WS-I
Attachments Profile 1.0. </P></DIV>
<DIV class=refinement>
<H4 id=Relationship_between_Parts>17.1.2 Relationship between Parts</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
outlines how attachments may be secured when conveyed in conjunction with a
primary SOAP envelope. The SOAP envelope is contained in a distinct MIME part.
Attachment parts can contain arbitrary content as indicated by the MIME-Type,
and an attachment could contain content with nested MIME parts. In order to
enable interoperable processing at the SOAP messaging layer it is important to
only secure the top-level MIME attachments that are in the same Multipart
structure as the MIME part conveying the primary SOAP envelope. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6002>R6002</A></SPAN> A
signed and/or encrypted <SPAN class=statement-target>MIME_PART</SPAN> MUST be at
the same MIME level as the root MIME_PART containing the SECURE_ENVELOPE.
</P></DIV>
<DIV class=refinement>
<H4 id=Encryption_and_Root_Part>17.1.3 Encryption and Root Part</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>It is essential that SOAP processors
(intermediaries and ultimate SOAP receiver) be able to process the primary SOAP
envelope. For this reason, the MIME part containing the primary SOAP envelope
must not be secured using the Web Services Security SwA profile mechanisms. This
includes encryption, since an encrypted SOAP structure cannot be processed, and
signing, since this would preclude intermediary processing of the SOAP message,
since this often involves adding, or removing headers. Note that Web Services
Security may be applied to portions of the primary SOAP envelope in conformance
with the Basic Security Profile, but not by using attachment security
mechanisms. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6003>R6003</A></SPAN> A
root <SPAN class=statement-target>MIME_PART</SPAN> MUST NOT be referenced by a
SIG_REFERENCE, ENC_REFERENCE_LIST, or EK_REFERENCE_LIST. </P></DIV>
<H3 id=signedAttachments>17.2 Signed Attachments</H3>
<DIV class=refinement>
<H4 id=Reference_to_Signed_Attachments>17.2.1 Reference to Signed
Attachments</H4>
<P class=statement><SPAN class=statement-id><A name=R6100>R6100</A></SPAN> A
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a MIME_PART MUST use a URI
attribute of the form "cid:partToBeSigned". </P></DIV>
<DIV class=refinement>
<H4 id=Attachment_Transforms>17.2.2 Attachment Transforms</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
requires that a ds:Reference to an attachment part that is signed must use a
transform specifying either the Attachment-Complete-Signature-Transform or the
Attachment-Content-Signature-Transform URIs. This statement reiterates that
requirement for testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6101>R6101</A></SPAN> A
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a MIME_PART MUST use a
TRANSFORM specified by the Algorithm
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Content-Signature-Transform"
or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Complete-Signature-Transform".
</P></DIV>
<DIV class=refinement>
<H4 id=Canonicalization>17.2.3 Canonicalization</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Signature digest calculations require
that the exact same input be provided to the digest algorithm both when the
signature is created and when it is verified. Canonicalization is required to
ensure the same literal representation despite changes due to message
transformation during transport. XML exclusive canonicalization is required as
part of the Attachment-Complete-Signature-Transform or
Attachment-Content-Signature-Transform processing. A separate transform for
canonicalization should not be provided since it is already included as part of
the processing associated with these transforms. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6103>R6103</A></SPAN> At
any <SPAN class=statement-target>RECEIVER</SPAN> the output of the
Attachment-Content-Signature-Transform or the XML octet stream portion of the
output of the Attachment-Complete-Signature-Transform must be consistent with
Exclusive XML Canonicalization without comments having been performed when
creating that output. </P></DIV>
<DIV class=refinement>
<H4 id=Digest_Values>17.2.4 Digest Values</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Signature digest calculations require
that the exact same input be provided to the digest algorithm both when the
signature is created and when it is verified. Canonicalization is required to
ensure the same literal representation despite changes due to message
transformation during transport, for example line ending changes. MIME
canonicalization algorithms are required for interoperability by Web Services
Security SwA profile. This statement reiterates that requirement for
testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6104>R6104</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a MIME_PART not containing
XML MUST include a ds:DigestValue calculated using MIME canonicalization
according to the requirements of the MIME Type. </P>
<P class=statement><SPAN class=statement-id><A name=R6108>R6108</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a MIME_PART containing the
"application/text" content type MUST include a ds:DigestValue which is
calculated after the text is canonicalized according to MIME canonicalization
algorithm for text. </P>
<P class=statement><SPAN class=statement-id><A name=R6109>R6109</A></SPAN> Any
<SPAN class=statement-target>SIG_REFERENCE</SPAN> to a MIME_PART containing an
XML content type MUST include a ds:DigestValue which is calculated after the XML
is canonicalized according to Exclusive XML Canonicalization without comments,
as specified by the URI "http://www.w3.org/2001/10/xml-exc-c14n#". </P></DIV>
<DIV class=refinement>
<H4 id=Content-Type>17.2.5 Content-Type</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>Signature digest calculations require
that the exact same input be provided to the digest algorithm both when the
signature is created and when it is verified. Canonicalization is required to
ensure the same literal representation despite changes due to message
transformation during transport. It is essential to determine the correct type
of canonicalization to perform, based on the MIME_PART content type. For this
reason it is required that the Content-Type be explicitly stated with a
Content-Type MIME header. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6106>R6106</A></SPAN> A
<SPAN class=statement-target>MIME_PART</SPAN> referenced by a SIG_REFERENCE
which specifies a Transform algorithm of
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Complete-Signature-Transform"
MUST have a Content-Type MIME-header. </P>
<P class=statement><SPAN class=statement-id><A name=R6107>R6107</A></SPAN> A
<SPAN class=statement-target>MIME_PART</SPAN> referenced by a SIG_REFERENCE
which specifies a Transform algorithm of
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Content-Signature-Transform"
MUST have a Content-Type MIME-header. </P></DIV>
<H3 id=encryptedAttachments>17.3 Encrypted Attachments</H3>
<DIV class=refinement>
<H4 id=References_to_Encrypted_Attachments>17.3.1 References to Encrypted
Attachments</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
requires that an EncryptedData element in the primary SOAP envelope be used to
reference the encrypted MIME part. This statement reiterates that requirement
for testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6200>R6200</A></SPAN> An
encrypted <SPAN class=statement-target>MIME_PART</SPAN> MUST be referenced using
an ENCRYPTED_DATA. </P></DIV>
<DIV class=refinement>
<H4 id=Type_attribute>17.3.2 Type attribute</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
requires that an EncryptedData element in the primary SOAP envelope that
references an encrypted MIME part specify the Type as either
Attachment-Content-Only or Attachment-Complete so that it can be processed
correctly upon decryption. This statement reiterates that requirement for
testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6201>R6201</A></SPAN> An
<SPAN class=statement-target>ENCRYPTED_DATA</SPAN> that references a MIME_PART
MUST include a Type attribute with the value
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Content-Only"
or
"http://docs.oasis-open.org/wss/oasis-wss-SwAProfile-1.1#Attachment-Complete".
</P></DIV>
<DIV class=refinement>
<H4 id=Reference_URIs>17.3.3 Reference URIs</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
requires that the EncryptedData element in the primary SOAP envelope that
references an encrypted MIME part must reference the Cipherdata using the same
cid: as the original attachment cid:, simplifying processing. This statement
reiterates that requirement for testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6202>R6202</A></SPAN> An
<SPAN class=statement-target>ENCRYPTED_DATA</SPAN> that references a MIME_PART
MUST contain a xenc:CipherData/xenc:CipherReference element with a URI attribute
having the same URI as the original MIME_PART. </P></DIV>
<DIV class=refinement>
<H4 id=Content>17.3.4 Content</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>The Web Services Security SwA profile
specifies that when an attachment is encrypted, the resulting EncryptedData
element be placed in the wsse:Security header in the primary SOAP envelope and
that the cipherdata be placed in the attachment part. This statement reiterates
the requirement of replacing the content of the attachment with the cipherdata,
for testability. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=R6203>R6203</A></SPAN> The
content of a <SPAN class=statement-target>MIME_PART</SPAN> encrypted according
to the Web Services Security SwA profile MUST be replaced by the cipher value
that results from encrypting the MIME_PART and is referenced from the
CipherReference in the EncryptedData element. </P></DIV>
<H2 id=seccon>18. Security Considerations</H2><SPAN
class=statement-target></SPAN>This section lists a number of security
considerations that should be taken into account when using one or more of the
technologies discussed in the Basic Security Profile 1.1.
<H3 id=transportsecConsiderations>18.1 SOAPAction Header</H3><SPAN
class=statement-target></SPAN>The use of the SOAPAction header in situations
where the message content is being integrity or confidentiality protected can
result in security risks when the transport layer does not provide the same
protection to the SOAPAction header. The most obvious risk is that the
SOAPAction header can potentially expose sensitive information about a SOAP
message such as the URI of the service, or the context of the transaction that
is taking place. Another, more subtle risk occurs in a situation where message
routing is done based on the value of the SOAPAction header. By modifying the
value, an attacker could cause the message to be directed to a different
receiver. This could potentially defeat a replay detection mechanism that was
based on the assumption that the message would always be routed to the same
place. Yet another risk occurs when intermediates are present. An intermediate
might decide on a set of processing steps based on the value of SOAPAction or
application/soap+xml, which is subject to tampering. A subsequent receiver might
base its processing on the actual message content, which could be secured
through XML signatures. Suppose that the intermediate was a security gateway. It
could be tricked into allowing a payment operation through that had only query
security.
<DIV class=refinement>
<H4 id=SOAPAction_header>18.1.1 SOAPAction header</H4>
<P class=statement><SPAN class=statement-id><A name=C2010>C2010</A></SPAN> In a
<SPAN class=statement-target>DESCRIPTION</SPAN>, the soapAction attibute of a
soapbind:operation element SHOULD be either omitted, or have as its value an
empty string. </P></DIV>
<H3 id=clockSynch>18.2 Clock Synchronization</H3><SPAN
class=statement-target></SPAN>The specifications covered by the Basic Security
Profile 1.1 use time-based mechanisms to prevent replay attacks. These
mechanisms will be ineffective unless the system clocks of the various network
nodes are synchronized. Since the technology to perform distributed clock
synchronization are well known and widely available and are not among the
technologies being profiled here, this document does not specify how clock
synchronization should be done. However, the recommendation of the use of
time-based security mechanisms implies that synchronization is being done.
<H3 id=bindSTtoSigs>18.3 Security Token Substitution</H3>
<DIV class=refinement>
<H4 id=Security_Token_Substitution>18.3.1 Security Token Substitution</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>If a ds:SignedInfo contains one or more
ds:Reference children whose URI attribute contains a shorthand XPointer
reference to a wsse:SecurityTokenReference that uses a potentially ambiguous
mechanism to refer to the Security Token (e.g. KeyIdentifier), then in order to
protect against post-signature substitution of the Security Token with one that
binds the same key to different claims, it is recommended that the content of
the Security Token be signed either directly or using the Security Token
Dereferencing Transform. </P></DIV>
<P class=statement><SPAN class=statement-id><A name=C5443>C5443</A></SPAN> When
the signer's SECURITY_TOKEN is an INTERNAL_SECURITY_TOKEN, the <SPAN
class=statement-target>SIGNED_INFO</SPAN> MAY include a SIG_REFERENCE that
refers to the signer's SECURITY_TOKEN in order to prevent substitution with
another SECURITY_TOKEN that uses the same key. <SPAN
class=statement-type>C</SPAN></P>
<P class=statement><SPAN class=statement-id><A name=C5441>C5441</A></SPAN> When
the signer's SECURITY_TOKEN is an EXTERNAL_SECURITY_TOKEN, the <SPAN
class=statement-target>SIGNED_INFO</SPAN> MAY include a SIG_REFERENCE that
refers to the SECURITY_TOKEN_REFERENCE that refers to the signer's
SECURITY_TOKEN using the Security Token Dereferencing Transform in order to
prevent substitution of another SECURITY_TOKEN that uses the same key. <SPAN
class=statement-type>C</SPAN></P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>If a message is signed using a Security
Token that binds a public verification key with other claims, and specific
processing is performed based on those claims, then in order to protect against
post-signature substitution of the Security Token with one that binds the same
key to different claims, Security Token itself should be part of the signature
computation. This can be achieved by putting a child ds:Reference element whose
URI attribute contains a shorthand XPointer reference to the
wsse:SecurityTokenReference that specifies the Security Token into the
ds:SignedInfo element of a signature. </P></DIV></DIV>
<DIV class=refinement>
<H4 id=Security_Token_Reference_in_Subsequent_Messages>18.3.2 Security Token
Reference in Subsequent Messages</H4>
<DIV class=rationale>
<P><SPAN class=statement-target></SPAN>When a key is provided in band within a
Security Token or otherwise for the purpose of specifying a key to be used by
another node for encrypting information to be sent in a future message, it is
recommended that the sender of the key cryptographically bind the key to the
message in which it is transmitted. This can be done either by using the key to
perform a Signature or HMAC over critical elements of the message body or by
including the key under a signature covering critical elements of the message
body which uses some other key.</P></DIV>
<P class=statement><SPAN class=statement-id><A name=C5442>C5442</A></SPAN> When
an encryption key to be used in subsequent messages is provided in an
INTERNAL_SECURITY_TOKEN, a <SPAN class=statement-target>SIGNED_INFO</SPAN> MAY
include a SIG_REFERENCE that refers to the signer's SECURITY_TOKEN in order to
prevent substitution with another SECURITY_TOKEN that uses the same key. <SPAN
class=statement-type>C</SPAN></P>
<DIV class=explanation>
<P><SPAN class=statement-target></SPAN>If a key is sent in a message which the
receiver is expected to use to encrypt data in some future message, there is a
risk that an attacker could substitute some other key and thereby be able to
read unauthorized data. This is true even if the key is contained in a signed
certificate, but is not bound to the current message in some way. If the future
encryption key is used to sign the initial request, by verifying the signature,
the receiver can determine that the key is the one that was intended.
</P></DIV></DIV>
<H3 id=removalModXML>18.4 Protecting against removal and modification of XML
Elements</H3>
<P><SPAN class=statement-target></SPAN>XML Signatures using Shorthand XPointer
References (AKA IDREF) protect against the removal and modification of XML
elements; but do not protect the location of the element within the XML
Document. </P>
<P><SPAN class=statement-target></SPAN>Whether or not this is security
vulnerability depends on whether the location of the signed data within its
surrounding context has any semantic import. This consideration applies to data
carried in the SOAP Body or the Header. </P>
<P><SPAN class=statement-target></SPAN>Of particular concern is the ability to
relocate signed data into a SOAP Header block which is unknown to the receiver
and marked mustUnderstand="false". This could have the effect of causing the
receiver to ignore signed data which the sender expected would either be
processed or result in the generation of a mustUnderstand fault. </P>
<P><SPAN class=statement-target></SPAN>A similar exploit would involve
relocating signed data into a SOAP Header block targeted to a S11:actor or
S12:role other than that which the sender intended, and which the receiver will
not process. </P>
<P><SPAN class=statement-target></SPAN>While these attacks could apply to any
portion of the message, their effects are most pernicious with SOAP header
elements which may not always be present, but must be processed whenever they
appear. </P>
<P><SPAN class=statement-target></SPAN>In the general case of XML Documents and
Signatures, this issue may be resolved by signing the entire XML Document and/or
strict XML Schema specification and enforcement. However, because elements of
the SOAP message, particularly header elements, may be legitimately modified by
SOAP intermediaries, this approach is usually not appropriate. It is RECOMMENDED
that applications signing any part of the SOAP body sign the entire body. </P>
<P><SPAN class=statement-target></SPAN>Alternatives countermeasures include (but
are not limited to): </P>
<UL>
  <LI><SPAN class=statement-target></SPAN>References using XPath transforms with
  Absolute Path expressions,
  <LI><SPAN class=statement-target></SPAN>A Reference using an XPath transform
  to include any significant location-dependent elements and exclude any
  elements that might legitimately be removed, added, or altered by
  intermediaries,
  <LI><SPAN class=statement-target></SPAN>Using only References to elements with
  location-independent semantics,
  <LI><SPAN class=statement-target></SPAN>Strict policy specification and
  enforcement regarding which message parts are to be signed. For example:
  <UL>
    <LI><SPAN class=statement-target></SPAN>Requiring that the entire SOAP Body
    and all children of SOAP Header be signed,
    <LI><SPAN class=statement-target></SPAN>Requiring that SOAP header elements
    which are marked mustUnderstand="false" and have signed descendents MUST
    include the mustUnderstand attribute under the signature. </LI></UL></LI></UL>
<H3 id=trustWhatIsSigned>18.5 Only What is Signed is Protected</H3>
<P><SPAN class=statement-target></SPAN>A receiver should treat the origin of any
unsigned content as suspect. Only the subset of message content that is signed
by an entity can be trusted as having been produced or otherwise acknowledged by
that entity. All other content should be treated as if it were placed in the
message by an untrusted third party (potentially an adversary). </P>
<P><SPAN class=statement-target></SPAN>XML Signatures allow fine grained
selection of elements to be signed through a variety of means including
Shorthand XPointer references to selected elements and references using
transforms (such as XPath) that cause a value other than what would be obvious
by examining the serialized content of the element (by adding, modifying, or
removing a value) to be used for digest computation. This could allow values to
be added, modified, or removed without detection. Therefore, a receiver should
not consider it sufficient to verify that an element is referenced, but should
also verify that the result of the application of the indicated transform
algorithms produce the expected, trusted value. </P>
<H3 id=usesha1>18.6 Use of SHA1</H3>
<P><SPAN class=statement-target></SPAN>Basic Security Profile 1.1 recommends
using SHA1 based algorithms for interoperability purposes. If SHA1 based
algorithms are deemed unsuitable, other algorithms (like SHA256) can be used.
</P>
<H3 id=uniqueIds>18.7 Uniqueness of ID attributes</H3><SPAN
class=statement-target></SPAN>XML 1.0 requires that all attributes of type ID in
a given XML document have unique values, but only validating XML processors have
such type information. As various aspects of SOAP Message Security use ID based
references it is recommended that applications ensure that ID attributes are
unique by some mechanism.
<H3 id=signSTs>18.8 Signing Security Tokens</H3><SPAN
class=statement-target></SPAN>In general, tokens contain claims made by an
authority, usually about some system entity. Obviously a party relying on these
claims must trust that authority to make them. The relying party must generally
verify these claims. The method of doing this depends on the token type and is
specified by the corresponding token profile.
<H3 id=signUTs>18.9 Signing Username Tokens</H3><SPAN
class=statement-target></SPAN>When a wsse:UsernameToken contains only a
wsse:Username and wsse:PasswordText and is simply presented for Authentication
where replay is not a concern, it does not need to be signed because the act of
checking it against a stored value has the effect of verifying it. When a
wsse:Nonce and/or wsu:Created are used with the wsse:Username and
wsse:PasswordText to prevent replay, the wsse:UsernameToken must be signed to
prevent undetected alteration of these fields. If a wsse:PasswordText is being
used to derive a key for a subsequent encryption of a response, it should be
signed to ensure that an attacker does not substitute an alternative, but valid
wsse:Username and wsse:PasswordText. This is equivalent to the key substitution
attack available when an X.509 Token is used for a similar purpose.
<H3 id=signBTs>18.10 Signing Binary Tokens</H3><SPAN
class=statement-target></SPAN>The content of a binary token will be a binary
object which is integrity protected by a mechanism specific to the object type.
For example, an X.509 certificate will be signed by the issuing authority. The
outer wrapper of the binary token merely contains type indication information
which does not have to be integrity protected in order to be able to rely in the
claims.
<H3 id=signXTs>18.11 Signing XML Tokens</H3><SPAN
class=statement-target></SPAN>XML tokens should be digitally signed in a manner
described by their profile (or documents referenced by it), or delivered
directly from their issuer over an integrity protected channel.
<H3 id=replayUTs>18.12 Replay of Username Token</H3>
<P><SPAN class=statement-target></SPAN>A sender that includes a Nonce child in a
UsernameToken element should anticipate that the receiver may refuse to process
the message due to either an accidental collision or transport layer delays.
Therefore, if it decides to retry transmission, it should do so with a new
Nonce. </P>
<P><SPAN class=statement-target></SPAN>Unless other mechanisms are used to
protect against replay of the username token, service providers should retain
nonces in a store that is shared between all SOAP nodes (and within a
distributed SOAP node all "components") that can be authorized using the same
passwords. </P>
<P><SPAN class=statement-target></SPAN>The policy that allows service providers
to forget nonces may be based on any considerations that the service considers
relevant. When a nonce is forgotten the server should ensure that in the future
it rejects UsernameTokens with a Created time that is earlier than the forgotten
nonce. </P>
<DIV class=refinement>
<H4 id=Replay_of_Username_Token>18.12.1 Replay of Username Token</H4>
<P class=statement><SPAN class=statement-id><A name=C4210>C4210</A></SPAN> Any
<SPAN class=statement-target>USERNAME_TOKEN</SPAN> that contains a NONCE and
PASSWORD with a Type attribute value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"
SHOULD be referenced by a SIG_REFERENCE in order to prevent replay. </P>
<P class=statement><SPAN class=statement-id><A name=C4211>C4211</A></SPAN> Any
<SPAN class=statement-target>USERNAME_TOKEN</SPAN> that contains a CREATED and a
PASSWORD with a Type attribute value of
"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText"
SHOULD be referenced by a SIG_REFERENCE in order to prevent replay. </P></DIV>
<H3 id=digVClearPass>18.13 Use of Digest vs. Cleartext Password</H3>
<P><SPAN class=statement-target></SPAN>A sending application utilizing password
authentication must decide whether to use a cleartext password or a password
digest (The sender needs to know via some out-of-band mechanism and/or prior
arrangement which mechanisms the receiver supports). The digest should always be
preferred if it can be used, as the digest algorithm does not reveal the
password and can protect against replay of the password. (It does not however,
protect against offline guessing or brute force attacks.) </P>
<P><SPAN class=statement-target></SPAN>Password digests can only be used in
situations where both sender and receiver can start with the same secret value
(e.g., the cleartext password or a hash of the password). The following are
criteria for considering when to use digests vs. cleartext: </P>
<P><SPAN class=statement-target></SPAN>1. If the receiver can access the
cleartext password, a digest may be used. </P>
<P><SPAN class=statement-target></SPAN>2. If the receiver can access a value
that can be derived by the sender directly from the cleartext password (e.g.,
the receiver has access to a SHA1 hash of the password), the derived value (e.g.
the hash) may be used in the digest. </P>
<P><SPAN class=statement-target></SPAN>3. If the sender needs extra information
to derive the value available to the receiver, it will not be feasible to use
password digest, even though the information is not intentionally secret. For
example, UNIX systems add a salt value to each password before hashing it. It is
infeasible for the sender to discover the salt value required for a specific
username. </P>
<P><SPAN class=statement-target></SPAN>4. If the receiver does not have access
to any password value, derived or otherwise, but merely the ability to test a
username/password combination for validity, a digest may not be used. An example
of this is when the username/password combination is presented to a database,
directory or mainframe system for verification. </P>
<P><SPAN class=statement-target></SPAN>When sending any form of a password,
cleartext or digest, confidentiality services are strongly recommended to
prevent its value from being revealed or from offline guessing. </P>
<H3 id=encSig>18.14 Encryption with Signatures</H3>
<P><SPAN class=statement-target></SPAN>When a message contains a data value
which does not have a significant number of probable variations and that data is
signed and then encrypted, it is recommended that the sender either include some
suitably random value such as a wsse:Nonce in the data, or encrypt the related
ds:DigestValue element in order to protect the confidentiality of the data.</P>
<P><SPAN class=statement-target></SPAN>An adversary can compute the digest for
each of the data values and compare them against the digests in the signature
thereby deducing the encrypted data value. This type of attack is most likely to
be successful when there are a relatively small set of probable data values.
Therefore the threat can be mitigated by introduction of some random value into
the original data or encryption of the digest. </P>
<DIV class=refinement>
<H4 id=Encrypt_DigestValue>18.14.1 Encrypt DigestValue</H4>
<P class=statement><SPAN class=statement-id><A name=C5630>C5630</A></SPAN> Any
<SPAN class=statement-target>SIGNATURE</SPAN> computed over data that is
subsequently encrypted SHOULD also be encrypted in order to prevent plaintext
guessing attacks when the probable set of data values is small. </P></DIV>
<H3 id=operr>18.15 Possible Operational Errors</H3>
<P><SPAN class=statement-target></SPAN>Under SOAP processing rules, there is no
way a sender can be sure that a message containing a security header addressed
to a given Role/Actor will ever reach a node that is taking on that Role/Actor.
If not, the specified security processing will not occur. </P>
<P><SPAN class=statement-target></SPAN>Under SOAP processing rules, there is no
way a sender can determine in what order nodes taking on specific Role/Actor's
will be reached. If signatures and encryptions specified in different security
headers overlap, verification and decryption operations may fail as a result of
being processed in the wrong order. (Generally overlapping signatures will
verify regardless of the order of verification.) This problem can be avoided by
never specifying overlapping operations in distinct headers, however application
requirements may not prevent this. For example, many senders may wish to include
the entire Body under a signature, possibly before or after encrypting portions
of it. </P>
<P><SPAN class=statement-target></SPAN>Under SOAP processing rules, there is no
way a sender can determine which particular secrets are possessed by a node
taking on a given Role/Actor. If a node is required to perform decryption or
verify an HMAC and it does not posses the necessary secret, it will be unable to
perform these operations. This will not only impact its operation, but in the
case it is an intermediary may make it possible for nodes receiving the message
subsequently from performing security processing correctly due to overlapping
operations, even when that node does possess the necessary secrets. </P>
<P><SPAN class=statement-target></SPAN>If a namespace that is in fact visibly
used within some text to be Canonicalized via the Exclusive C14N Algorithm is
included in the PrefixList, then under some valid transformations of the
transmitted document signature verification may spuriously fail, because the
Canonicalized form shifts the location of a namespace declaration. This case is
expected to be rare in practice. </P>
<H2 id=references>Appendix A: Referenced Specifications</H2>
<P>The following specifications' requirements are incorporated into the Basic
Security Profile 1.1 by reference, except where superseded by the Profile:</P>
<UL>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2818.txt">RFC 2818: HTTP
  over TLS</A>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2246.txt">RFC 2246: The
  TLS Protocol Version 1.0</A>
  <LI><A class=offsite href="http://wp.netscape.com/eng/ssl3/ssl-toc.html">The
  SSL Protocol Version 3.0</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">Web
  Services Security: SOAP Message Security 1.1 (WS-Security 2004) OASIS Standard
  Specification, 1 February 2006</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.0.html">Basic Profile
  Version 1.0 (BP1.0)</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.0-errata.html">Basic Profile
  Version 1.0 Errata</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/BasicProfile-1.1.html">Basic Profile
  Version 1.1 (BP1.1)</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/SimpleSoapBindingProfile-1.0.html">Simple
  SOAP Binding Profile Version 1.0 (SSBP1.0)</A>
  <LI><A class=offsite href="http://www.w3.org/TR/xmldsig-core/">XML-Signature
  Syntax and Processing</A>
  <LI><A class=offsite href="http://www.w3.org/TR/xmlenc-core/">XML Encryption
  Syntax and Processing</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16782/wss-v1.1-spec-os-UsernameTokenProfile.pdf">Web
  Services Security: UsernameToken Profile 1.1 OASIS Standard Specification, 1
  February 2006</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16785/wss-v1.1-spec-os-x509TokenProfile.pdf">Web
  Services Security: X.509 Certificate Token Profile 1.1 OASIS Standard
  Specification, 1 February 2006</A>
  <LI><A class=offsite href="http://www.ietf.org/rfc/rfc2459.txt">RFC2459:
  Internet X.509 Public Key Infrastructure Certificate and CRL Profile</A>
  <LI><A class=offsite
  href="http://www.itu.int/rec/recommendation.asp?type=items&amp;lang=e&amp;parent=T-REC-X.509-200110-I!Cor1">Information
  technology "Open Systems Interconnection" The Directory: Public-key and
  attribute certificate frameworks Technical Corrigendum 1</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16687/oasis-wss-rel-token-profile-1.1.pdf">Web
  Services Security: Rights Expression Language (REL) Token Profile 1.1 OASIS
  Standard: 1 February 2006</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16788/wss-v1.1-spec-os-KerberosTokenProfile.pdf">Web
  Services Security: Kerberos Token Profile 1.1 OASIS Standard Specification, 1
  February 2006</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16768/wss-v1.1-spec-os-SAMLTokenProfile.pdf">Web
  Services Security: SAML Token Profile 1.1 OASIS Standard, 1 February 2006</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">Web
  Services Security: SOAP Message Security 1.1 (WS-Security 2004) OASIS Standard
  Specification, 1 February 2006</A>
  <LI><A class=offsite
  href="http://www.ws-i.org/Profiles/AttachmentsProfile-1.0.html">Attachments
  Profile Version 1.0 (AP1.0)</A>
  <LI><A class=offsite
  href="http://www.oasis-open.org/committees/download.php/16672/wss-v1.1-spec-os-SwAProfile.pdf">Web
  Services Security: SOAP Messages with Attachments (SwA) Profile 1.1, OASIS
  Standard, 1 February 2006</A></LI></UL>
<H2 id=points>Appendix B: Extensibility Points</H2>
<P>This section identifies extensibility points, as defined in "Scope of the
Basic Security Profile 1.1," for the Basic Security Profile 1.1's component
specifications.</P>
<P>These mechanisms are out of the scope of the Basic Security Profile 1.1;
their use may affect interoperability, and may require private agreement between
the parties to a Web service.</P>
<P>In <A class=offsite href="http://www.ietf.org/rfc/rfc2246.txt">RFC 2246: The
TLS Protocol Version 1.0:</A></P>
<UL>
  <LI><SPAN class=statement-id>E0009</SPAN> - <STRONG>TLS Ciphersuites</STRONG>
  - TLS allows for the use of arbitrary encryption algorithms. Note that while
  section 4.2 of the Basic Security Profile 1.1 mandates, recommends, and
  discourages support for certain ciphersuites, the Basic Security Profile 1.1
  does not prohibit use of any specific ciphersuite.
  <LI><SPAN class=statement-id>E0010</SPAN> - <STRONG>TLS Extensions</STRONG> -
  TLS allows for extensions during the handshake phase.</LI></UL>
<P>In <A class=offsite href="http://wp.netscape.com/eng/ssl3/ssl-toc.html">The
SSL Protocol Version 3.0:</A></P>
<UL>
  <LI><SPAN class=statement-id>E0011</SPAN> - <STRONG>SSL Ciphersuites</STRONG>
  - SSL allows for the use of arbitrary encryption algorithms. Note that while
  section 4.2 of the Basic Security Profile 1.1 mandates, recommends, and
  discourages support for certain ciphersuites, the Basic Security Profile 1.1
  does not prohibit use of any specific ciphersuite.</LI></UL>
<P>In <A class=offsite
href="http://www.oasis-open.org/committees/download.php/16790/wss-v1.1-spec-os-SOAPMessageSecurity.pdf">Web
Services Security: SOAP Message Security 1.1 (WS-Security 2004) OASIS Standard
Specification, 1 February 2006:</A></P>
<UL>
  <LI><SPAN class=statement-id>E0002</SPAN> - <STRONG>Security Tokens</STRONG> -
  Security tokens may be specified in additional security token
profiles.</LI></UL>
<P>In <A class=offsite href="http://www.ietf.org/rfc/rfc2459.txt">RFC2459:
Internet X.509 Public Key Infrastructure Certificate and CRL Profile:</A></P>
<UL>
  <LI><SPAN class=statement-id>E0012</SPAN> - <STRONG>Certificate
  Authority</STRONG> - The choice of the Certificate Authority is a private
  agreement between parties.
  <LI><SPAN class=statement-id>E0013</SPAN> - <STRONG>Certificate
  Extensions</STRONG> - X.509 allows for arbitrary certificate
extensions.</LI></UL>
<H2 id=acks>Appendix C: Acknowledgements</H2>
<P>This document is the work of the WS-I Basic Security Profiles Working Group,
whose members have included:</P>
<P>Jan Alexander (Microsoft Corporation), Steve Anderson (BMC), Paula Austel
(IBM), Siddharth Bajaj (Verisign), Frank Balluffi (Deutsche Bank), Abbie Barbir
(Nortel), David Baum (Kantega AS), Randy Bias (Grand Central Communications),
Tim Bond (webMethods, Inc.), Heidi Buelow (Quovadx), David Burdett (Commerce
One, Inc.), Ted Burghart (Hitachi, Ltd.), Symon Chang (TIBCO, Inc.), Richard
Chennault (Kaiser Permanente), Dipak Chopra (SAP AG), Jamie Clark (OASIS),
Edward Cobb (BEA Systems, Inc.), David Cohen (Merrill Lynch), Brett Cooper
(Accenture), Ugo Corda (SeeBeyond Technology), Paul Cotton (Microsoft
Corporation), Suresh Damodaran, (Rosettanet), Mark Davis (Intel), Alex Deacon
(Verisign), Thomas DeMartini (ContentGuard, Inc.), Blake Dournaee (Intel), Rob
Drew (Charles Schwab), Gregory Elkins (Reed Elsevier), Mark Ericson (Mindreef),
Jon Oyvind Eriksen (Kantega AS), Chris Ferris (IBM), Bob Freund (Hitachi), Edwin
Goei (Sun Microsystems), Grant Goodale (Reactivity, Inc.), Marc Goodner (SAP
AG), Phil Goodwin (Sun Microsystems), Marc Graveline (Cognos, Inc.), Eric
Gravengaard (Reactivity, Inc.), Thomas Gross (IBM), Martin Gudgin (Microsoft
Corporation), Marc Hadley (Sun Microsystems), Mark Hapner (Sun Microsystems),
Nathan Harris (Kaiser Permanente), Bret Hartman (IBM), Frederick Hirsch (Nokia),
Jason Hogg (Microsoft Corporation), Maryann Hondo (IBM), Lawrence Hsiung
(Quovadx), Tony Huber (Commerce Quest), Jim Hughes (Hewlett-Packard), Michael
Hui (Computer Associates), Brian Jackson (Avanade, Inc.), Steve Jenisch (SAS
Institute), Erik Johnson (Epicor), Chris Kaler (Microsoft Corporation), Anish
Karmarkar (Oracle Corporation), Dana Kaufman, (Forum Systems), Manveen Kaur (Sun
Microsystems), Slava Kavsan (RSA Security), Paul Knight (Nortel Networks), Chris
Kurt (Microsoft Corporation), Kelvin Lawrence (IBM), Hal Lockhart (BEA Systems),
Brad Lund (Intel Corporation), Jim Luth (OPC Foundation), Paul Madsen (Entrust,
Inc.), Eve Maler (Sun Microsystems), Skip Marler (Parasoft), Axl Mattheus (Sun
Microsystems), Michael McIntosh (IBM), Craig Milhiser (Ascential), Chris Miller
(Accenture), Prateek Mishra (Oracle Corporation), Dale Moberg (Cyclone
Commerce), Ron Monzillo (Sun Microsystems), K. Scott Morrison (Layer 7), Tim
Moses (Entrust, Inc.), Tony Nadalin (IBM), Nataraj Nagaratnam (IBM), Andrew Nash
(RSA Security), Hsin Ning (Bestning Technologies), Eisaku Nishiyama (Hitachi,
Ltd.), Mark Nottingham (BEA Systems, Inc.), TJ Pannu (ContentGuard, Inc.),
Martine Pean (Quovadx), Robert Philpott (RSA Security), Dave Prout (BT), Joe
Pruitt (F5 Networks, Inc.), Eric Rejkovic (Oracle Corporation), Matt Recupito
(Accenture), Jason Rouault (Hewlett-Packard), Rich Salz (IBM), Matt Sanchez
(Webify Solutions, Inc. ), Jerry Schwarz (Oracle Corporation), Senthil Sengodan
(Nokia), Shawn Sharp (Cyclone Commerce), Aslak Siira (F5 Networks, Inc.), David
Solo (Citigroup, Inc.), Davanum Srinivas (Computer Associates), Raghavan
Srinivas (Sun Microsystems), John Stanton (Defense Information Systems Agency),
Andrew Stone (Accenture), Julie Surer (MITRE), Wes Swenson (Forum Systems), Dino
Vitale (Citigroup, Inc.), Jonathan Wenocur (IBM), Pete Wenzel (Sun
Microsystems), Ian White (Micro Focus) </P></BODY></HTML>
